/// <reference types="node" />
import { GaiaHubConfig } from './hub';
import { EncryptionOptions } from '@stacks/encryption';
import { UserSession } from '@stacks/auth';
export interface PutFileOptions extends EncryptionOptions {
    contentType?: string;
    encrypt?: boolean | string;
    dangerouslyIgnoreEtag?: boolean;
}
export interface GetFileOptions extends GetFileUrlOptions {
    decrypt?: boolean | string;
    verify?: boolean;
}
export interface GetFileUrlOptions {
    username?: string;
    app?: string;
    zoneFileLookupURL?: string;
}
export interface StorageOptions {
    userSession?: UserSession;
}
export declare class Storage {
    userSession: UserSession;
    constructor(options: StorageOptions);
    getFile(path: string, options?: GetFileOptions): Promise<string | ArrayBuffer | null>;
    getUserAppFileUrl(path: string, username: string, appOrigin: string, zoneFileLookupURL?: string): Promise<string | undefined>;
    getGaiaAddress(app: string, username?: string, zoneFileLookupURL?: string): Promise<string>;
    getFileUrl(path: string, options?: GetFileUrlOptions): Promise<string>;
    getFileContents(path: string, app: string, username: string | undefined, zoneFileLookupURL: string | undefined, forceText: boolean): Promise<string | ArrayBuffer | null>;
    getFileSignedUnencrypted(path: string, opt: GetFileOptions): Promise<string | ArrayBuffer | null>;
    handleSignedEncryptedContents(path: string, storedContents: string, app: string, privateKey?: string, username?: string, zoneFileLookupURL?: string): Promise<string | Buffer>;
    putFile(path: string, content: string | Buffer | ArrayBufferView | Blob, options?: PutFileOptions): Promise<string>;
    deleteFile(path: string, options?: {
        wasSigned?: boolean;
    }): Promise<void>;
    getAppBucketUrl(gaiaHubUrl: string, appPrivateKey: string): Promise<string>;
    listFilesLoop(hubConfig: GaiaHubConfig | null, page: string | null, callCount: number, fileCount: number, callback: (name: string) => boolean): Promise<number>;
    listFiles(callback: (name: string) => boolean): Promise<number>;
    getOrSetLocalGaiaHubConnection(): Promise<GaiaHubConfig>;
    setLocalGaiaHubConnection(): Promise<GaiaHubConfig>;
}
