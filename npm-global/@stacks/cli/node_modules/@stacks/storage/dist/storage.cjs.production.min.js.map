{"version":3,"file":"storage.cjs.production.min.js","sources":["../../../node_modules/regenerator-runtime/runtime.js","../src/hub.ts","../src/fileContentLoader.ts","../src/storage.ts"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import { ECPair, script, Transaction } from 'bitcoinjs-lib';\nimport { TokenSigner } from 'jsontokens';\nimport {\n  ecPairToAddress,\n  getPublicKeyFromPrivate,\n  hashSha256Sync,\n  hexStringToECPair,\n  randomBytes,\n} from '@stacks/encryption';\n\nimport {\n  BadPathError,\n  ConflictError,\n  DoesNotExist,\n  fetchPrivate,\n  GaiaHubErrorResponse,\n  Logger,\n  megabytesToBytes,\n  NotEnoughProofError,\n  PayloadTooLargeError,\n  PreconditionFailedError,\n  ValidationError,\n} from '@stacks/common';\n\n/**\n * @ignore\n */\nexport const BLOCKSTACK_GAIA_HUB_LABEL = 'blockstack-gaia-hub-config';\n\n/**\n * The configuration for the user's Gaia storage provider.\n */\nexport interface GaiaHubConfig {\n  address: string;\n  url_prefix: string;\n  token: string;\n  max_file_upload_size_megabytes: number | undefined;\n  server: string;\n}\n\ninterface UploadResponse {\n  publicURL: string;\n  etag?: string;\n}\n\n/**\n *\n * @param filename\n * @param contents\n * @param hubConfig\n * @param contentType\n * @param newFile\n * @param etag\n * @param dangerouslyIgnoreEtag\n * @ignore\n */\nexport async function uploadToGaiaHub(\n  filename: string,\n  contents: Blob | Buffer | ArrayBufferView | string,\n  hubConfig: GaiaHubConfig,\n  contentType = 'application/octet-stream',\n  newFile = true,\n  etag?: string,\n  dangerouslyIgnoreEtag?: boolean\n): Promise<UploadResponse> {\n  Logger.debug(`uploadToGaiaHub: uploading ${filename} to ${hubConfig.server}`);\n\n  const headers: { [key: string]: string } = {\n    'Content-Type': contentType,\n    Authorization: `bearer ${hubConfig.token}`,\n  };\n\n  if (!dangerouslyIgnoreEtag) {\n    if (newFile) {\n      headers['If-None-Match'] = '*';\n    } else if (etag) {\n      headers['If-Match'] = etag;\n    }\n  }\n\n  const response = await fetchPrivate(\n    `${hubConfig.server}/store/${hubConfig.address}/${filename}`,\n    {\n      method: 'POST',\n      headers,\n      body: contents,\n    }\n  );\n  if (!response.ok) {\n    throw await getBlockstackErrorFromResponse(\n      response,\n      'Error when uploading to Gaia hub.',\n      hubConfig\n    );\n  }\n  const responseText = await response.text();\n  return JSON.parse(responseText);\n}\n\n/**\n * @param filename\n * @param hubConfig\n */\nexport async function deleteFromGaiaHub(filename: string, hubConfig: GaiaHubConfig): Promise<void> {\n  Logger.debug(`deleteFromGaiaHub: deleting ${filename} from ${hubConfig.server}`);\n  const response = await fetchPrivate(\n    `${hubConfig.server}/delete/${hubConfig.address}/${filename}`,\n    {\n      method: 'DELETE',\n      headers: {\n        Authorization: `bearer ${hubConfig.token}`,\n      },\n    }\n  );\n  if (!response.ok) {\n    throw await getBlockstackErrorFromResponse(\n      response,\n      'Error deleting file from Gaia hub.',\n      hubConfig\n    );\n  }\n}\n\n/**\n *\n * @param filename\n * @param hubConfig\n *\n * @ignore\n */\nexport function getFullReadUrl(filename: string, hubConfig: GaiaHubConfig): Promise<string> {\n  return Promise.resolve(`${hubConfig.url_prefix}${hubConfig.address}/${filename}`);\n}\n\n/**\n *\n * @param challengeText\n * @param signerKeyHex\n *\n * @ignore\n */\nfunction makeLegacyAuthToken(challengeText: string, signerKeyHex: string): string {\n  // only sign specific legacy auth challenges.\n  let parsedChallenge;\n  try {\n    parsedChallenge = JSON.parse(challengeText);\n  } catch (err) {\n    throw new Error('Failed in parsing legacy challenge text from the gaia hub.');\n  }\n  if (parsedChallenge[0] === 'gaiahub' && parsedChallenge[3] === 'blockstack_storage_please_sign') {\n    const signer = hexStringToECPair(signerKeyHex + (signerKeyHex.length === 64 ? '01' : ''));\n    const digest = hashSha256Sync(Buffer.from(challengeText));\n\n    const signatureBuffer = signer.sign(digest);\n    const signatureWithHash = script.signature.encode(signatureBuffer, Transaction.SIGHASH_NONE);\n\n    // We only want the DER encoding so remove the sighash version byte at the end.\n    // See: https://github.com/bitcoinjs/bitcoinjs-lib/issues/1241#issuecomment-428062912\n    const signature = signatureWithHash.toString('hex').slice(0, -2);\n\n    const publickey = getPublicKeyFromPrivate(signerKeyHex);\n    const token = Buffer.from(JSON.stringify({ publickey, signature })).toString('base64');\n    return token;\n  } else {\n    throw new Error(\n      'Failed to connect to legacy gaia hub. If you operate this hub, please update.'\n    );\n  }\n}\n\n/**\n *\n * @param hubInfo\n * @param signerKeyHex\n * @param hubUrl\n * @param associationToken\n *\n * @ignore\n */\nfunction makeV1GaiaAuthToken(\n  hubInfo: any,\n  signerKeyHex: string,\n  hubUrl: string,\n  associationToken?: string\n): string {\n  const challengeText = hubInfo.challenge_text;\n  const handlesV1Auth =\n    hubInfo.latest_auth_version && parseInt(hubInfo.latest_auth_version.slice(1), 10) >= 1;\n  const iss = getPublicKeyFromPrivate(signerKeyHex);\n\n  if (!handlesV1Auth) {\n    return makeLegacyAuthToken(challengeText, signerKeyHex);\n  }\n\n  const salt = randomBytes(16).toString('hex');\n  const payload = {\n    gaiaChallenge: challengeText,\n    hubUrl,\n    iss,\n    salt,\n    associationToken: associationToken!,\n  };\n\n  const token = new TokenSigner('ES256K', signerKeyHex).sign(payload);\n  return `v1:${token}`;\n}\n\n/**\n *\n * @ignore\n */\nexport async function connectToGaiaHub(\n  gaiaHubUrl: string,\n  challengeSignerHex: string,\n  associationToken?: string\n): Promise<GaiaHubConfig> {\n  Logger.debug(`connectToGaiaHub: ${gaiaHubUrl}/hub_info`);\n\n  const response = await fetchPrivate(`${gaiaHubUrl}/hub_info`);\n  const hubInfo = await response.json();\n  const readURL = hubInfo.read_url_prefix;\n  const token = makeV1GaiaAuthToken(hubInfo, challengeSignerHex, gaiaHubUrl, associationToken);\n  const address = ecPairToAddress(\n    hexStringToECPair(challengeSignerHex + (challengeSignerHex.length === 64 ? '01' : ''))\n  );\n  return {\n    url_prefix: readURL,\n    max_file_upload_size_megabytes: hubInfo.max_file_upload_size_megabytes,\n    address,\n    token,\n    server: gaiaHubUrl,\n  };\n}\n\n/**\n *\n * @param gaiaHubUrl\n * @param appPrivateKey\n *\n * @ignore\n */\nexport async function getBucketUrl(gaiaHubUrl: string, appPrivateKey: string): Promise<string> {\n  const challengeSigner = ECPair.fromPrivateKey(Buffer.from(appPrivateKey, 'hex'));\n  const response = await fetchPrivate(`${gaiaHubUrl}/hub_info`);\n  const responseText = await response.text();\n  const responseJSON = JSON.parse(responseText);\n  const readURL = responseJSON.read_url_prefix;\n  const address = ecPairToAddress(challengeSigner);\n  const bucketUrl = `${readURL}${address}/`;\n  return bucketUrl;\n}\n\nasync function getGaiaErrorResponse(response: Response): Promise<GaiaHubErrorResponse> {\n  let responseMsg = '';\n  let responseJson: any | undefined;\n  try {\n    responseMsg = await response.text();\n    try {\n      responseJson = JSON.parse(responseMsg);\n    } catch (error) {\n      // Use text instead\n    }\n  } catch (error) {\n    Logger.debug(`Error getting bad http response text: ${error}`);\n  }\n  const status = response.status;\n  const statusText = response.statusText;\n  const body = responseJson || responseMsg;\n  return { status, statusText, body };\n}\n\n/**\n * Returns a BlockstackError correlating to the given HTTP response,\n * with the provided errorMsg. Throws if the HTTP response is 'ok'.\n */\nexport async function getBlockstackErrorFromResponse(\n  response: Response,\n  errorMsg: string,\n  hubConfig: GaiaHubConfig | null\n): Promise<Error> {\n  if (response.ok) {\n    throw new Error('Cannot get a BlockstackError from a valid response.');\n  }\n  const gaiaResponse = await getGaiaErrorResponse(response);\n  if (gaiaResponse.status === 401) {\n    return new ValidationError(errorMsg, gaiaResponse);\n  } else if (gaiaResponse.status === 402) {\n    return new NotEnoughProofError(errorMsg, gaiaResponse);\n  } else if (gaiaResponse.status === 403) {\n    return new BadPathError(errorMsg, gaiaResponse);\n  } else if (gaiaResponse.status === 404) {\n    throw new DoesNotExist(errorMsg, gaiaResponse);\n  } else if (gaiaResponse.status === 409) {\n    return new ConflictError(errorMsg, gaiaResponse);\n  } else if (gaiaResponse.status === 412) {\n    return new PreconditionFailedError(errorMsg, gaiaResponse);\n  } else if (gaiaResponse.status === 413) {\n    const maxBytes =\n      hubConfig && hubConfig.max_file_upload_size_megabytes\n        ? megabytesToBytes(hubConfig.max_file_upload_size_megabytes)\n        : 0;\n    return new PayloadTooLargeError(errorMsg, gaiaResponse, maxBytes);\n  } else {\n    return new Error(errorMsg);\n  }\n}\n","/**\n * Retrieves the specified file from the app's data store.\n * @param {String} path - the path to the file to read\n * @returns {Promise} that resolves to the raw data in the file\n * or rejects with an error\n */\nexport /** @ignore */\ntype PutFileContent = string | Buffer | ArrayBufferView | ArrayBufferLike | Blob;\n\n/** @ignore */\nexport class FileContentLoader {\n  readonly content: Buffer | Blob;\n\n  readonly wasString: boolean;\n\n  readonly contentType: string;\n\n  readonly contentByteLength: number;\n\n  private loadedData?: Promise<Buffer>;\n\n  static readonly supportedTypesMsg =\n    'Supported types are: `string` (to be UTF8 encoded), ' +\n    '`Buffer`, `Blob`, `File`, `ArrayBuffer`, `UInt8Array` or any other typed array buffer. ';\n\n  constructor(content: PutFileContent, contentType: string) {\n    this.wasString = typeof content === 'string';\n    this.content = FileContentLoader.normalizeContentDataType(content, contentType);\n    this.contentType = contentType || this.detectContentType();\n    this.contentByteLength = this.detectContentLength();\n  }\n\n  private static normalizeContentDataType(\n    content: PutFileContent,\n    contentType: string\n  ): Buffer | Blob {\n    try {\n      if (typeof content === 'string') {\n        // If a charset is specified it must be either utf8 or ascii, otherwise the encoded content\n        // length cannot be reliably detected. If no charset specified it will be treated as utf8.\n        const charset = (contentType || '').toLowerCase().replace('-', '');\n        if (\n          charset.includes('charset') &&\n          !charset.includes('charset=utf8') &&\n          !charset.includes('charset=ascii')\n        ) {\n          throw new Error(`Unable to determine byte length with charset: ${contentType}`);\n        }\n        if (typeof TextEncoder !== 'undefined') {\n          const encodedString = new TextEncoder().encode(content);\n          return Buffer.from(encodedString.buffer);\n        }\n        return Buffer.from(content);\n      } else if (Buffer.isBuffer(content)) {\n        return content;\n      } else if (ArrayBuffer.isView(content)) {\n        return Buffer.from(content.buffer, content.byteOffset, content.byteLength);\n      } else if (typeof Blob !== 'undefined' && content instanceof Blob) {\n        return content;\n      } else if (typeof ArrayBuffer !== 'undefined' && content instanceof ArrayBuffer) {\n        return Buffer.from(content);\n      } else if (Array.isArray(content)) {\n        // Provided with a regular number `Array` -- this is either an (old) method\n        // of representing an octet array, or a dev error. Perform basic check for octet array.\n        if (\n          content.length > 0 &&\n          (!Number.isInteger(content[0]) || content[0] < 0 || content[0] > 255)\n        ) {\n          throw new Error(\n            `Unexpected array values provided as file data: value \"${content[0]}\" at index 0 is not an octet number. ${this.supportedTypesMsg}`\n          );\n        }\n        return Buffer.from(content);\n      } else {\n        const typeName = Object.prototype.toString.call(content);\n        throw new Error(\n          `Unexpected type provided as file data: ${typeName}. ${this.supportedTypesMsg}`\n        );\n      }\n    } catch (error) {\n      console.error(error);\n      throw new Error(`Error processing data: ${error}`);\n    }\n  }\n\n  private detectContentType(): string {\n    if (this.wasString) {\n      return 'text/plain; charset=utf-8';\n    } else if (typeof Blob !== 'undefined' && this.content instanceof Blob && this.content.type) {\n      return this.content.type;\n    } else {\n      return 'application/octet-stream';\n    }\n  }\n\n  private detectContentLength(): number {\n    if (ArrayBuffer.isView(this.content) || Buffer.isBuffer(this.content)) {\n      return this.content.byteLength;\n    } else if (typeof Blob !== 'undefined' && this.content instanceof Blob) {\n      return this.content.size;\n    }\n    const typeName = Object.prototype.toString.call(this.content);\n    const error = new Error(`Unexpected type \"${typeName}\" while detecting content length`);\n    console.error(error);\n    throw error;\n  }\n\n  private async loadContent(): Promise<Buffer> {\n    try {\n      if (Buffer.isBuffer(this.content)) {\n        return this.content;\n      } else if (ArrayBuffer.isView(this.content)) {\n        return Buffer.from(this.content.buffer, this.content.byteOffset, this.content.byteLength);\n      } else if (typeof Blob !== 'undefined' && this.content instanceof Blob) {\n        const reader = new FileReader();\n        const readPromise = new Promise<Buffer>((resolve, reject) => {\n          reader.onerror = err => {\n            reject(err);\n          };\n          reader.onload = () => {\n            const arrayBuffer = reader.result as ArrayBuffer;\n            resolve(Buffer.from(arrayBuffer));\n          };\n          reader.readAsArrayBuffer(this.content as Blob);\n        });\n        const result = await readPromise;\n        return result;\n      } else {\n        const typeName = Object.prototype.toString.call(this.content);\n        throw new Error(`Unexpected type ${typeName}`);\n      }\n    } catch (error) {\n      console.error(error);\n      const loadContentError = new Error(`Error loading content: ${error}`);\n      console.error(loadContentError);\n      throw loadContentError;\n    }\n  }\n\n  load(): Promise<Buffer | string> {\n    if (this.loadedData === undefined) {\n      this.loadedData = this.loadContent();\n    }\n    return this.loadedData;\n  }\n}\n","import {\n  connectToGaiaHub,\n  deleteFromGaiaHub,\n  GaiaHubConfig,\n  getBlockstackErrorFromResponse,\n  getBucketUrl,\n  getFullReadUrl,\n  uploadToGaiaHub,\n} from './hub';\n\nimport {\n  eciesGetJsonStringLength,\n  EncryptionOptions,\n  getPublicKeyFromPrivate,\n  publicKeyToAddress,\n  signECDSA,\n  verifyECDSA,\n} from '@stacks/encryption';\n\nimport {\n  BLOCKSTACK_DEFAULT_GAIA_HUB_URL,\n  DoesNotExist,\n  fetchPrivate,\n  GaiaHubError,\n  getGlobalObject,\n  InvalidStateError,\n  megabytesToBytes,\n  PayloadTooLargeError,\n  SignatureVerificationError,\n} from '@stacks/common';\n\nimport { FileContentLoader } from './fileContentLoader';\n\nimport { lookupProfile, NAME_LOOKUP_PATH, UserSession } from '@stacks/auth';\n\n/**\n * Specify a valid MIME type, encryption options, and whether to sign the [[UserSession.putFile]].\n */\nexport interface PutFileOptions extends EncryptionOptions {\n  /**\n   * Specifies the Content-Type header for unencrypted data.\n   * If the `encrypt` is enabled, this option is ignored, and the\n   * Content-Type header is set to `application/json` for the ciphertext\n   * JSON envelope.\n   */\n  contentType?: string;\n  /**\n   * Encrypt the data with the app public key.\n   * If a string is specified, it is used as the public key.\n   * If the boolean `true` is specified then the current user's app public key is used.\n   * @default true\n   */\n  encrypt?: boolean | string;\n  /**\n   * Ignore etag for concurrency control and force file to be written.\n   */\n  dangerouslyIgnoreEtag?: boolean;\n}\n\nconst SIGNATURE_FILE_SUFFIX = '.sig';\n\n/**\n * Used to pass options to [[UserSession.getFile]]\n */\nexport interface GetFileOptions extends GetFileUrlOptions {\n  /**\n   * Try to decrypt the data with the app private key.\n   * If a string is specified, it is used as the private key.\n   * @default true\n   */\n  decrypt?: boolean | string;\n  /**\n   * Whether the content should be verified, only to be used\n   * when [[UserSession.putFile]] was set to `sign = true`.\n   * @default false\n   */\n  verify?: boolean;\n}\n\nexport interface GetFileUrlOptions {\n  /**\n   * The Blockstack ID to lookup for multi-player storage.\n   * If not specified, the currently signed in username is used.\n   */\n  username?: string;\n  /**\n   * The app to lookup for multi-player storage - defaults to current origin.\n   * @default `window.location.origin`\n   * Only if available in the executing environment, otherwise `undefined`.\n   */\n  app?: string;\n  /**\n   * The URL to use for zonefile lookup. If falsey, this will use\n   * the blockstack.js's [[getNameInfo]] function instead.\n   */\n  zoneFileLookupURL?: string;\n}\n\n/**\n * Options for constructing a Storage instance\n */\nexport interface StorageOptions {\n  /**\n   * The userSession object to construct the Storage instance with.\n   * The session object contains the credentials and keys for\n   * Gaia hub access and encryption.\n   */\n  userSession?: UserSession;\n}\n\nexport class Storage {\n  userSession: UserSession;\n\n  constructor(options: StorageOptions) {\n    this.userSession = options.userSession!;\n  }\n\n  /**\n   * Retrieves the specified file from the app's data store.\n   *\n   * @param {String} path - the path to the file to read\n   * @param {Object} options a [[GetFileOptions]] object\n   *\n   * @returns {Promise} that resolves to the raw data in the file\n   * or rejects with an error\n   */\n  async getFile(path: string, options?: GetFileOptions) {\n    const defaults: GetFileOptions = {\n      decrypt: true,\n      verify: false,\n      app: getGlobalObject('location', { returnEmptyObject: true })!.origin,\n    };\n    const opt = Object.assign({}, defaults, options);\n\n    // in the case of signature verification, but no\n    //  encryption expected, need to fetch _two_ files.\n    if (opt.verify && !opt.decrypt) {\n      return this.getFileSignedUnencrypted(path, opt);\n    }\n\n    const storedContents = await this.getFileContents(\n      path,\n      opt.app!,\n      opt.username,\n      opt.zoneFileLookupURL,\n      !!opt.decrypt\n    );\n    if (storedContents === null) {\n      return storedContents;\n    } else if (opt.decrypt && !opt.verify) {\n      if (typeof storedContents !== 'string') {\n        throw new Error('Expected to get back a string for the cipherText');\n      }\n      if (typeof opt.decrypt === 'string') {\n        const decryptOpt = { privateKey: opt.decrypt };\n        return this.userSession.decryptContent(storedContents, decryptOpt);\n      } else {\n        return this.userSession.decryptContent(storedContents);\n      }\n    } else if (opt.decrypt && opt.verify) {\n      if (typeof storedContents !== 'string') {\n        throw new Error('Expected to get back a string for the cipherText');\n      }\n      let decryptionKey;\n      if (typeof opt.decrypt === 'string') {\n        decryptionKey = opt.decrypt;\n      }\n      return this.handleSignedEncryptedContents(\n        path,\n        storedContents,\n        opt.app!,\n        decryptionKey,\n        opt.username,\n        opt.zoneFileLookupURL\n      );\n    } else if (!opt.verify && !opt.decrypt) {\n      return storedContents;\n    } else {\n      throw new Error('Should be unreachable.');\n    }\n  }\n\n  /**\n   * Fetch the public read URL of a user file for the specified app.\n   * @param {String} path - the path to the file to read\n   * @param {String} username - The Blockstack ID of the user to look up\n   * @param {String} appOrigin - The app origin\n   * @param {String} [zoneFileLookupURL=null] - The URL\n   * to use for zonefile lookup. If falsey, this will use the\n   * blockstack.js's [[getNameInfo]] function instead.\n   * @return {Promise<string>} that resolves to the public read URL of the file\n   * or rejects with an error\n   */\n  async getUserAppFileUrl(\n    path: string,\n    username: string,\n    appOrigin: string,\n    zoneFileLookupURL?: string\n  ): Promise<string | undefined> {\n    const profile = await lookupProfile({ username, zoneFileLookupURL });\n    let bucketUrl: string | undefined;\n    if (profile.hasOwnProperty('apps')) {\n      if (profile.apps.hasOwnProperty(appOrigin)) {\n        const url = profile.apps[appOrigin];\n        const bucket = url.replace(/\\/?(\\?|#|$)/, '/$1');\n        bucketUrl = `${bucket}${path}`;\n      }\n    }\n    return bucketUrl;\n  }\n\n  /* Get the gaia address used for servicing multiplayer reads for the given\n   * (username, app) pair.\n   * @private\n   * @ignore\n   */\n  async getGaiaAddress(\n    app: string,\n    username?: string,\n    zoneFileLookupURL?: string\n  ): Promise<string> {\n    const opts = normalizeOptions(this.userSession, { app, username, zoneFileLookupURL });\n    let fileUrl: string | undefined;\n    if (username) {\n      fileUrl = await this.getUserAppFileUrl('/', opts.username!, opts.app, opts.zoneFileLookupURL);\n    } else {\n      const gaiaHubConfig = await this.getOrSetLocalGaiaHubConnection();\n      fileUrl = await getFullReadUrl('/', gaiaHubConfig);\n    }\n    const matches = fileUrl!.match(/([13][a-km-zA-HJ-NP-Z0-9]{26,35})/);\n    if (!matches) {\n      throw new Error('Failed to parse gaia address');\n    }\n    return matches[matches.length - 1];\n  }\n\n  /**\n   * Get the URL for reading a file from an app's data store.\n   *\n   * @param {String} path - the path to the file to read\n   *\n   * @returns {Promise<string>} that resolves to the URL or rejects with an error\n   */\n  async getFileUrl(path: string, options?: GetFileUrlOptions): Promise<string> {\n    const opts = normalizeOptions(this.userSession, options);\n\n    let readUrl: string | undefined;\n    if (opts.username) {\n      readUrl = await this.getUserAppFileUrl(\n        path,\n        opts.username,\n        opts.app!,\n        opts.zoneFileLookupURL\n      );\n    } else {\n      const gaiaHubConfig = await this.getOrSetLocalGaiaHubConnection();\n      readUrl = await getFullReadUrl(path, gaiaHubConfig);\n    }\n\n    if (!readUrl) {\n      throw new Error('Missing readURL');\n    } else {\n      return readUrl;\n    }\n  }\n\n  /* Handle fetching the contents from a given path. Handles both\n   *  multi-player reads and reads from own storage.\n   * @private\n   * @ignore\n   */\n  async getFileContents(\n    path: string,\n    app: string,\n    username: string | undefined,\n    zoneFileLookupURL: string | undefined,\n    forceText: boolean\n  ): Promise<string | ArrayBuffer | null> {\n    const opts = { app, username, zoneFileLookupURL };\n    const readUrl = await this.getFileUrl(path, opts);\n    const response = await fetchPrivate(readUrl);\n    if (!response.ok) {\n      throw await getBlockstackErrorFromResponse(response, `getFile ${path} failed.`, null);\n    }\n    let contentType = response.headers.get('Content-Type');\n    if (typeof contentType === 'string') {\n      contentType = contentType.toLowerCase();\n    }\n\n    const etag = response.headers.get('ETag');\n    if (etag) {\n      const sessionData = this.userSession.store.getSessionData();\n      sessionData.etags![path] = etag;\n      this.userSession.store.setSessionData(sessionData);\n    }\n    if (\n      forceText ||\n      contentType === null ||\n      contentType.startsWith('text') ||\n      contentType.startsWith('application/json')\n    ) {\n      return response.text();\n    } else {\n      return response.arrayBuffer();\n    }\n  }\n\n  /* Handle fetching an unencrypted file, its associated signature\n   *  and then validate it. Handles both multi-player reads and reads\n   *  from own storage.\n   * @private\n   * @ignore\n   */\n  async getFileSignedUnencrypted(path: string, opt: GetFileOptions) {\n    // future optimization note:\n    //    in the case of _multi-player_ reads, this does a lot of excess\n    //    profile lookups to figure out where to read files\n    //    do browsers cache all these requests if Content-Cache is set?\n    const sigPath = `${path}${SIGNATURE_FILE_SUFFIX}`;\n    try {\n      const [fileContents, signatureContents, gaiaAddress] = await Promise.all([\n        this.getFileContents(path, opt.app!, opt.username, opt.zoneFileLookupURL, false),\n        this.getFileContents(sigPath, opt.app!, opt.username, opt.zoneFileLookupURL, true),\n        this.getGaiaAddress(opt.app!, opt.username, opt.zoneFileLookupURL),\n      ]);\n\n      if (!fileContents) {\n        return fileContents;\n      }\n      if (!gaiaAddress) {\n        throw new SignatureVerificationError(\n          'Failed to get gaia address for verification of: ' + `${path}`\n        );\n      }\n      if (!signatureContents || typeof signatureContents !== 'string') {\n        throw new SignatureVerificationError(\n          'Failed to obtain signature for file: ' +\n            `${path} -- looked in ${path}${SIGNATURE_FILE_SUFFIX}`\n        );\n      }\n      let signature;\n      let publicKey;\n      try {\n        const sigObject = JSON.parse(signatureContents);\n        signature = sigObject.signature;\n        publicKey = sigObject.publicKey;\n      } catch (err) {\n        if (err instanceof SyntaxError) {\n          throw new Error(\n            'Failed to parse signature content JSON ' +\n              `(path: ${path}${SIGNATURE_FILE_SUFFIX})` +\n              ' The content may be corrupted.'\n          );\n        } else {\n          throw err;\n        }\n      }\n      const signerAddress = publicKeyToAddress(publicKey);\n      if (gaiaAddress !== signerAddress) {\n        throw new SignatureVerificationError(\n          `Signer pubkey address (${signerAddress}) doesn't` +\n            ` match gaia address (${gaiaAddress})`\n        );\n      } else if (!verifyECDSA(fileContents, publicKey, signature)) {\n        throw new SignatureVerificationError(\n          'Contents do not match ECDSA signature: ' +\n            `path: ${path}, signature: ${path}${SIGNATURE_FILE_SUFFIX}`\n        );\n      } else {\n        return fileContents;\n      }\n    } catch (err) {\n      // For missing .sig files, throw `SignatureVerificationError` instead of `DoesNotExist` error.\n      if (err instanceof DoesNotExist && err.message.indexOf(sigPath) >= 0) {\n        throw new SignatureVerificationError(\n          'Failed to obtain signature for file: ' +\n            `${path} -- looked in ${path}${SIGNATURE_FILE_SUFFIX}`\n        );\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  /* Handle signature verification and decryption for contents which are\n   *  expected to be signed and encrypted. This works for single and\n   *  multiplayer reads. In the case of multiplayer reads, it uses the\n   *  gaia address for verification of the claimed public key.\n   * @private\n   * @ignore\n   */\n  async handleSignedEncryptedContents(\n    path: string,\n    storedContents: string,\n    app: string,\n    privateKey?: string,\n    username?: string,\n    zoneFileLookupURL?: string\n  ): Promise<string | Buffer> {\n    const appPrivateKey = privateKey || this.userSession.loadUserData().appPrivateKey;\n\n    const appPublicKey = getPublicKeyFromPrivate(appPrivateKey);\n\n    let address: string;\n    if (username) {\n      address = await this.getGaiaAddress(app, username, zoneFileLookupURL);\n    } else {\n      address = publicKeyToAddress(appPublicKey);\n    }\n    if (!address) {\n      throw new SignatureVerificationError(\n        'Failed to get gaia address for verification of: ' + `${path}`\n      );\n    }\n    let sigObject;\n    try {\n      sigObject = JSON.parse(storedContents);\n    } catch (err) {\n      if (err instanceof SyntaxError) {\n        throw new Error(\n          'Failed to parse encrypted, signed content JSON. The content may not ' +\n            'be encrypted. If using getFile, try passing' +\n            ' { verify: false, decrypt: false }.'\n        );\n      } else {\n        throw err;\n      }\n    }\n    const signature = sigObject.signature;\n    const signerPublicKey = sigObject.publicKey;\n    const cipherText = sigObject.cipherText;\n    const signerAddress = publicKeyToAddress(signerPublicKey);\n\n    if (!signerPublicKey || !cipherText || !signature) {\n      throw new SignatureVerificationError(\n        'Failed to get signature verification data from file:' + ` ${path}`\n      );\n    } else if (signerAddress !== address) {\n      throw new SignatureVerificationError(\n        `Signer pubkey address (${signerAddress}) doesn't` + ` match gaia address (${address})`\n      );\n    } else if (!verifyECDSA(cipherText, signerPublicKey, signature)) {\n      throw new SignatureVerificationError(\n        'Contents do not match ECDSA signature in file:' + ` ${path}`\n      );\n    } else if (typeof privateKey === 'string') {\n      const decryptOpt = { privateKey };\n      return this.userSession.decryptContent(cipherText, decryptOpt);\n    } else {\n      return this.userSession.decryptContent(cipherText);\n    }\n  }\n\n  /**\n   * Stores the data provided in the app's data store to to the file specified.\n   * @param {String} path - the path to store the data in\n   * @param {String|Buffer} content - the data to store in the file\n   * @param options a [[PutFileOptions]] object\n   *\n   * @returns {Promise} that resolves if the operation succeed and rejects\n   * if it failed\n   */\n  async putFile(\n    path: string,\n    content: string | Buffer | ArrayBufferView | Blob,\n    options?: PutFileOptions\n  ): Promise<string> {\n    const defaults: PutFileOptions = {\n      encrypt: true,\n      sign: false,\n      cipherTextEncoding: 'hex',\n      dangerouslyIgnoreEtag: false,\n    };\n    const opt = Object.assign({}, defaults, options);\n\n    const gaiaHubConfig = await this.getOrSetLocalGaiaHubConnection();\n    const maxUploadBytes = megabytesToBytes(gaiaHubConfig.max_file_upload_size_megabytes!);\n    const hasMaxUpload = maxUploadBytes > 0;\n\n    const contentLoader = new FileContentLoader(content, opt.contentType!);\n    let contentType = contentLoader.contentType;\n\n    // When not encrypting the content length can be checked immediately.\n    if (!opt.encrypt && hasMaxUpload && contentLoader.contentByteLength > maxUploadBytes) {\n      const sizeErrMsg = `The max file upload size for this hub is ${maxUploadBytes} bytes, the given content is ${contentLoader.contentByteLength} bytes`;\n      const sizeErr = new PayloadTooLargeError(sizeErrMsg, null, maxUploadBytes);\n      console.error(sizeErr);\n      throw sizeErr;\n    }\n\n    // When encrypting, the content length must be calculated. Certain types like `Blob`s must\n    // be loaded into memory.\n    if (opt.encrypt && hasMaxUpload) {\n      const encryptedSize = eciesGetJsonStringLength({\n        contentLength: contentLoader.contentByteLength,\n        wasString: contentLoader.wasString,\n        sign: !!opt.sign,\n        cipherTextEncoding: opt.cipherTextEncoding!,\n      });\n      if (encryptedSize > maxUploadBytes) {\n        const sizeErrMsg = `The max file upload size for this hub is ${maxUploadBytes} bytes, the given content is ${encryptedSize} bytes after encryption`;\n        const sizeErr = new PayloadTooLargeError(sizeErrMsg, null, maxUploadBytes);\n        console.error(sizeErr);\n        throw sizeErr;\n      }\n    }\n\n    let etag: string;\n    let newFile = true;\n    const sessionData = this.userSession.store.getSessionData();\n\n    if (!opt.dangerouslyIgnoreEtag) {\n      if (sessionData.etags?.[path]) {\n        newFile = false;\n        etag = sessionData.etags?.[path];\n      }\n    }\n\n    let uploadFn: (hubConfig: GaiaHubConfig) => Promise<string>;\n\n    // In the case of signing, but *not* encrypting, we perform two uploads.\n    if (!opt.encrypt && opt.sign) {\n      const contentData = await contentLoader.load();\n      let privateKey: string;\n      if (typeof opt.sign === 'string') {\n        privateKey = opt.sign;\n      } else {\n        privateKey = this.userSession.loadUserData().appPrivateKey;\n      }\n      const signatureObject = signECDSA(privateKey, contentData);\n      const signatureContent = JSON.stringify(signatureObject);\n\n      uploadFn = async (hubConfig: GaiaHubConfig) => {\n        const writeResponse = (\n          await Promise.all([\n            uploadToGaiaHub(\n              path,\n              contentData,\n              hubConfig,\n              contentType,\n              newFile,\n              etag,\n              opt.dangerouslyIgnoreEtag\n            ),\n            uploadToGaiaHub(\n              `${path}${SIGNATURE_FILE_SUFFIX}`,\n              signatureContent,\n              hubConfig,\n              'application/json'\n            ),\n          ])\n        )[0];\n        if (!opt.dangerouslyIgnoreEtag && writeResponse.etag) {\n          sessionData.etags![path] = writeResponse.etag;\n          this.userSession.store.setSessionData(sessionData);\n        }\n        return writeResponse.publicURL;\n      };\n    } else {\n      // In all other cases, we only need one upload.\n      let contentForUpload: string | Buffer | Blob;\n      if (!opt.encrypt && !opt.sign) {\n        // If content does not need encrypted or signed, it can be passed directly\n        // to the fetch request without loading into memory.\n        contentForUpload = contentLoader.content;\n      } else {\n        // Use the `encrypt` key, otherwise the `sign` key, if neither are specified\n        // then use the current user's app public key.\n        let publicKey: string;\n        if (typeof opt.encrypt === 'string') {\n          publicKey = opt.encrypt;\n        } else if (typeof opt.sign === 'string') {\n          publicKey = getPublicKeyFromPrivate(opt.sign);\n        } else {\n          publicKey = getPublicKeyFromPrivate(this.userSession.loadUserData().appPrivateKey);\n        }\n        const contentData = await contentLoader.load();\n        contentForUpload = await this.userSession.encryptContent(contentData, {\n          publicKey,\n          wasString: contentLoader.wasString,\n          cipherTextEncoding: opt.cipherTextEncoding,\n          sign: opt.sign,\n        });\n        contentType = 'application/json';\n      }\n\n      uploadFn = async (hubConfig: GaiaHubConfig) => {\n        const writeResponse = await uploadToGaiaHub(\n          path,\n          contentForUpload,\n          hubConfig,\n          contentType,\n          newFile,\n          etag,\n          opt.dangerouslyIgnoreEtag\n        );\n        if (writeResponse.etag) {\n          sessionData.etags![path] = writeResponse.etag;\n          this.userSession.store.setSessionData(sessionData);\n        }\n        return writeResponse.publicURL;\n      };\n    }\n\n    try {\n      return await uploadFn(gaiaHubConfig);\n    } catch (error) {\n      // If the upload fails on first attempt, it could be due to a recoverable\n      // error which may succeed by refreshing the config and retrying.\n      if (isRecoverableGaiaError(error)) {\n        console.error(error);\n        console.error('Possible recoverable error during Gaia upload, retrying...');\n        const freshHubConfig = await this.setLocalGaiaHubConnection();\n        return await uploadFn(freshHubConfig);\n      } else {\n        throw error;\n      }\n    }\n  }\n\n  /**\n   * Deletes the specified file from the app's data store.\n   * @param path - The path to the file to delete.\n   * @param options - Optional options object.\n   * @param options.wasSigned - Set to true if the file was originally signed\n   * in order for the corresponding signature file to also be deleted.\n   * @returns Resolves when the file has been removed or rejects with an error.\n   */\n  async deleteFile(\n    path: string,\n    options?: {\n      wasSigned?: boolean;\n    }\n  ) {\n    const gaiaHubConfig = await this.getOrSetLocalGaiaHubConnection();\n    const opts = Object.assign({}, options);\n    const sessionData = this.userSession.store.getSessionData();\n    if (opts.wasSigned) {\n      // If signed, delete both the content file and the .sig file\n      try {\n        await deleteFromGaiaHub(path, gaiaHubConfig);\n        await deleteFromGaiaHub(`${path}${SIGNATURE_FILE_SUFFIX}`, gaiaHubConfig);\n        delete sessionData.etags![path];\n        this.userSession.store.setSessionData(sessionData);\n      } catch (error) {\n        const freshHubConfig = await this.setLocalGaiaHubConnection();\n        await deleteFromGaiaHub(path, freshHubConfig);\n        await deleteFromGaiaHub(`${path}${SIGNATURE_FILE_SUFFIX}`, gaiaHubConfig);\n        delete sessionData.etags![path];\n        this.userSession.store.setSessionData(sessionData);\n      }\n    } else {\n      try {\n        await deleteFromGaiaHub(path, gaiaHubConfig);\n        delete sessionData.etags![path];\n        this.userSession.store.setSessionData(sessionData);\n      } catch (error) {\n        const freshHubConfig = await this.setLocalGaiaHubConnection();\n        await deleteFromGaiaHub(path, freshHubConfig);\n        delete sessionData.etags![path];\n        this.userSession.store.setSessionData(sessionData);\n      }\n    }\n  }\n\n  /**\n   * Get the app storage bucket URL\n   * @param {String} gaiaHubUrl - the gaia hub URL\n   * @param {String} appPrivateKey - the app private key used to generate the app address\n   * @returns {Promise} That resolves to the URL of the app index file\n   * or rejects if it fails\n   */\n  getAppBucketUrl(gaiaHubUrl: string, appPrivateKey: string) {\n    return getBucketUrl(gaiaHubUrl, appPrivateKey);\n  }\n\n  /**\n   * Loop over the list of files in a Gaia hub, and run a callback on each entry.\n   * Not meant to be called by external clients.\n   * @param {GaiaHubConfig} hubConfig - the Gaia hub config\n   * @param {String | null} page - the page ID\n   * @param {number} callCount - the loop count\n   * @param {number} fileCount - the number of files listed so far\n   * @param {function} callback - the callback to invoke on each file.  If it returns a falsey\n   *  value, then the loop stops.  If it returns a truthy value, the loop continues.\n   * @returns {Promise} that resolves to the number of files listed.\n   * @private\n   * @ignore\n   */\n  async listFilesLoop(\n    hubConfig: GaiaHubConfig | null,\n    page: string | null,\n    callCount: number,\n    fileCount: number,\n    callback: (name: string) => boolean\n  ): Promise<number> {\n    if (callCount > 65536) {\n      // this is ridiculously huge, and probably indicates\n      // a faulty Gaia hub anyway (e.g. on that serves endless data)\n      throw new Error('Too many entries to list');\n    }\n\n    hubConfig = hubConfig || (await this.getOrSetLocalGaiaHubConnection());\n    let response: Response;\n    try {\n      const pageRequest = JSON.stringify({ page });\n      const fetchOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Content-Length': `${pageRequest.length}`,\n          Authorization: `bearer ${hubConfig.token}`,\n        },\n        body: pageRequest,\n      };\n      response = await fetchPrivate(\n        `${hubConfig.server}/list-files/${hubConfig.address}`,\n        fetchOptions\n      );\n      if (!response.ok) {\n        throw await getBlockstackErrorFromResponse(response, 'ListFiles failed.', hubConfig);\n      }\n    } catch (error) {\n      // If error occurs on the first call, perform a gaia re-connection and retry.\n      // Same logic as other gaia requests (putFile, getFile, etc).\n      if (callCount === 0) {\n        const freshHubConfig = await this.setLocalGaiaHubConnection();\n        return this.listFilesLoop(freshHubConfig, page, callCount + 1, 0, callback);\n      }\n      throw error;\n    }\n\n    const responseText = await response.text();\n    const responseJSON = JSON.parse(responseText);\n    const entries = responseJSON.entries;\n    const nextPage = responseJSON.page;\n    if (entries === null || entries === undefined) {\n      // indicates a misbehaving Gaia hub or a misbehaving driver\n      // (i.e. the data is malformed)\n      throw new Error('Bad listFiles response: no entries');\n    }\n    let entriesLength = 0;\n    for (let i = 0; i < entries.length; i++) {\n      // An entry array can have null entries, signifying a filtered entry and that there may be\n      // additional pages\n      if (entries[i] !== null) {\n        entriesLength++;\n        const rc = callback(entries[i]);\n        if (!rc) {\n          // callback indicates that we're done\n          return fileCount + i;\n        }\n      }\n    }\n    if (nextPage && entries.length > 0) {\n      // keep going -- have more entries\n      return this.listFilesLoop(\n        hubConfig,\n        nextPage,\n        callCount + 1,\n        fileCount + entriesLength,\n        callback\n      );\n    } else {\n      // no more entries -- end of data\n      return fileCount + entriesLength;\n    }\n  }\n\n  /**\n   * List the set of files in this application's Gaia storage bucket.\n   *\n   * @param {function} callback - a callback to invoke on each named file that\n   * returns `true` to continue the listing operation or `false` to end it.\n   * If the call is ended early by the callback, the last file is excluded.\n   * If an error occurs the entire call is rejected.\n   *\n   * @returns {Promise} that resolves to the number of files listed\n   */\n  listFiles(callback: (name: string) => boolean): Promise<number> {\n    return this.listFilesLoop(null, null, 0, 0, callback);\n  }\n\n  /**\n   *  @ignore\n   */\n  async getOrSetLocalGaiaHubConnection(): Promise<GaiaHubConfig> {\n    const sessionData = this.userSession.store.getSessionData();\n    const userData = sessionData.userData;\n    if (!userData) {\n      throw new InvalidStateError('Missing userData');\n    }\n    const hubConfig = userData.gaiaHubConfig;\n    if (hubConfig) {\n      return Promise.resolve(hubConfig);\n    }\n    return this.setLocalGaiaHubConnection();\n  }\n\n  /**\n   * These two functions are app-specific connections to gaia hub,\n   *   they read the user data object for information on setting up\n   *   a hub connection, and store the hub config to localstorage\n   * @private\n   * @returns {Promise} that resolves to the new gaia hub connection\n   */\n  async setLocalGaiaHubConnection(): Promise<GaiaHubConfig> {\n    const userData = this.userSession.loadUserData();\n\n    if (!userData) {\n      throw new InvalidStateError('Missing userData');\n    }\n\n    if (!userData.hubUrl) {\n      userData.hubUrl = BLOCKSTACK_DEFAULT_GAIA_HUB_URL;\n    }\n\n    const gaiaConfig = await connectToGaiaHub(\n      userData.hubUrl,\n      userData.appPrivateKey,\n      userData.gaiaAssociationToken\n    );\n\n    userData.gaiaHubConfig = gaiaConfig;\n\n    const sessionData = this.userSession.store.getSessionData();\n    sessionData.userData!.gaiaHubConfig = gaiaConfig;\n    this.userSession.store.setSessionData(sessionData);\n\n    return gaiaConfig;\n  }\n}\n\n/**\n * @param {Object} [options=null] - options object\n * @param {String} options.username - the Blockstack ID to lookup for multi-player storage\n * @param {String} options.app - the app to lookup for multi-player storage -\n * defaults to current origin\n *\n * @ignore\n */\nfunction normalizeOptions<T>(\n  userSession: UserSession,\n  options?: {\n    app?: string;\n    username?: string;\n    zoneFileLookupURL?: string;\n  } & T\n) {\n  const opts = Object.assign({}, options);\n  if (opts.username) {\n    if (!opts.app) {\n      if (!userSession.appConfig) {\n        throw new InvalidStateError('Missing AppConfig');\n      }\n      opts.app = userSession.appConfig.appDomain;\n    }\n    if (!opts.zoneFileLookupURL) {\n      if (!userSession.appConfig) {\n        throw new InvalidStateError('Missing AppConfig');\n      }\n      if (!userSession.store) {\n        throw new InvalidStateError('Missing store UserSession');\n      }\n      const sessionData = userSession.store.getSessionData();\n      // Use the user specified coreNode if available, otherwise use the app specified coreNode.\n      const configuredCoreNode = sessionData.userData!.coreNode || userSession.appConfig.coreNode;\n      if (configuredCoreNode) {\n        opts.zoneFileLookupURL = `${configuredCoreNode}${NAME_LOOKUP_PATH}`;\n      }\n    }\n  }\n  return opts;\n}\n\n/**\n * Determines if a gaia error response is possible to recover from\n * by refreshing the gaiaHubConfig, and retrying the request.\n */\nfunction isRecoverableGaiaError(error: GaiaHubError): boolean {\n  if (!error || !error.hubError || !error.hubError.statusCode) {\n    return false;\n  }\n  const statusCode = error.hubError.statusCode;\n  // 401 Unauthorized: possible expired, but renewable auth token.\n  if (statusCode === 401) {\n    return true;\n  }\n  // 409 Conflict: possible concurrent writes to a file.\n  if (statusCode === 409) {\n    return true;\n  }\n  // 500s: possible server-side transient error\n  if (statusCode >= 500 && statusCode <= 599) {\n    return true;\n  }\n  return false;\n}\n"],"names":["runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","uploadToGaiaHub","filename","contents","hubConfig","contentType","newFile","etag","dangerouslyIgnoreEtag","Logger","debug","server","headers","Authorization","token","fetchPrivate","address","body","response","ok","getBlockstackErrorFromResponse","text","JSON","parse","deleteFromGaiaHub","getFullReadUrl","url_prefix","makeV1GaiaAuthToken","hubInfo","signerKeyHex","hubUrl","associationToken","challengeText","challenge_text","handlesV1Auth","latest_auth_version","parseInt","iss","getPublicKeyFromPrivate","parsedChallenge","signer","hexStringToECPair","digest","hashSha256Sync","Buffer","from","signatureBuffer","sign","signature","script","encode","Transaction","SIGHASH_NONE","publickey","stringify","makeLegacyAuthToken","payload","gaiaChallenge","salt","randomBytes","TokenSigner","connectToGaiaHub","gaiaHubUrl","challengeSignerHex","json","readURL","read_url_prefix","ecPairToAddress","max_file_upload_size_megabytes","getBucketUrl","appPrivateKey","challengeSigner","ECPair","fromPrivateKey","responseJSON","getGaiaErrorResponse","responseMsg","responseJson","status","statusText","errorMsg","gaiaResponse","ValidationError","NotEnoughProofError","BadPathError","DoesNotExist","ConflictError","PreconditionFailedError","maxBytes","megabytesToBytes","PayloadTooLargeError","FileContentLoader","content","wasString","normalizeContentDataType","detectContentType","contentByteLength","detectContentLength","charset","toLowerCase","replace","includes","TextEncoder","encodedString","buffer","isBuffer","ArrayBuffer","isView","byteOffset","byteLength","Blob","Array","isArray","Number","isInteger","supportedTypesMsg","typeName","console","size","loadContent","reader","FileReader","readPromise","onerror","onload","readAsArrayBuffer","_this","loadContentError","load","loadedData","Storage","options","userSession","getFile","path","defaults","decrypt","verify","app","getGlobalObject","returnEmptyObject","origin","opt","assign","getFileSignedUnencrypted","getFileContents","username","zoneFileLookupURL","storedContents","decryptContent","privateKey","decryptionKey","handleSignedEncryptedContents","getUserAppFileUrl","appOrigin","lookupProfile","profile","apps","bucket","bucketUrl","getGaiaAddress","opts","normalizeOptions","fileUrl","getOrSetLocalGaiaHubConnection","gaiaHubConfig","matches","match","getFileUrl","readUrl","forceText","get","sessionData","store","getSessionData","etags","setSessionData","startsWith","arrayBuffer","sigPath","all","signatureContents","gaiaAddress","fileContents","SignatureVerificationError","sigObject","publicKey","_context6","SyntaxError","signerAddress","publicKeyToAddress","verifyECDSA","message","indexOf","loadUserData","appPublicKey","_context7","cipherText","signerPublicKey","putFile","encrypt","cipherTextEncoding","maxUploadBytes","hasMaxUpload","contentLoader","sizeErr","encryptedSize","eciesGetJsonStringLength","contentLength","_sessionData$etags","_sessionData$etags2","contentData","signatureObject","signECDSA","signatureContent","uploadFn","writeResponse","publicURL","contentForUpload","encryptContent","isRecoverableGaiaError","setLocalGaiaHubConnection","freshHubConfig","deleteFile","wasSigned","getAppBucketUrl","listFilesLoop","page","callCount","fileCount","callback","pageRequest","fetchOptions","nextPage","entries","entriesLength","listFiles","userData","InvalidStateError","BLOCKSTACK_DEFAULT_GAIA_HUB_URL","gaiaAssociationToken","gaiaConfig","appConfig","appDomain","configuredCoreNode","coreNode","NAME_LOOKUP_PATH","hubError","statusCode"],"mappings":"mmBAOIA,EAAW,SAAUC,OAGnBC,EAAKC,OAAOC,UACZC,EAASH,EAAGI,eAEZC,EAA4B,mBAAXC,OAAwBA,OAAS,GAClDC,EAAiBF,EAAQG,UAAY,aACrCC,EAAsBJ,EAAQK,eAAiB,kBAC/CC,EAAoBN,EAAQO,aAAe,yBAEtCC,EAAOC,EAAKC,EAAKC,UACxBf,OAAOgB,eAAeH,EAAKC,EAAK,CAC9BC,MAAOA,EACPE,YAAY,EACZC,cAAc,EACdC,UAAU,IAELN,EAAIC,OAIXF,EAAO,GAAI,IACX,MAAOQ,GACPR,EAAS,SAASC,EAAKC,EAAKC,UACnBF,EAAIC,GAAOC,YAIbM,EAAKC,EAASC,EAASC,EAAMC,OAGhCC,EAAY1B,OAAO2B,QADFJ,GAAWA,EAAQtB,qBAAqB2B,EAAYL,EAAUK,GACtC3B,WACzC4B,EAAU,IAAIC,EAAQL,GAAe,WAIzCC,EAAUK,iBAsMcT,EAASE,EAAMK,OACnCG,EA/KuB,wBAiLpB,SAAgBC,EAAQC,MA/KT,cAgLhBF,QACI,IAAIG,MAAM,mCAhLE,cAmLhBH,EAA6B,IAChB,UAAXC,QACIC,QAyQL,CAAEnB,WAzfPqB,EAyfyBC,MAAM,OAjQ/BR,EAAQI,OAASA,EACjBJ,EAAQK,IAAMA,IAED,KACPI,EAAWT,EAAQS,YACnBA,EAAU,KACRC,EAAiBC,EAAoBF,EAAUT,MAC/CU,EAAgB,IACdA,IAAmBE,EAAkB,gBAClCF,MAIY,SAAnBV,EAAQI,OAGVJ,EAAQa,KAAOb,EAAQc,MAAQd,EAAQK,SAElC,GAAuB,UAAnBL,EAAQI,OAAoB,IAlNhB,mBAmNjBD,QACFA,EAjNc,YAkNRH,EAAQK,IAGhBL,EAAQe,kBAAkBf,EAAQK,SAEN,WAAnBL,EAAQI,QACjBJ,EAAQgB,OAAO,SAAUhB,EAAQK,KAGnCF,EA5NkB,gBA8Ndc,EAASC,EAASzB,EAASE,EAAMK,MACjB,WAAhBiB,EAAOE,KAAmB,IAG5BhB,EAAQH,EAAQQ,KAjOA,YAFK,iBAuOjBS,EAAOZ,MAAQO,iBAIZ,CACL1B,MAAO+B,EAAOZ,IACdG,KAAMR,EAAQQ,MAGS,UAAhBS,EAAOE,OAChBhB,EA/OgB,YAkPhBH,EAAQI,OAAS,QACjBJ,EAAQK,IAAMY,EAAOZ,OA9QPe,CAAiB3B,EAASE,EAAMK,GAE7CH,WAcAqB,EAASG,EAAIrC,EAAKqB,aAEhB,CAAEc,KAAM,SAAUd,IAAKgB,EAAGC,KAAKtC,EAAKqB,IAC3C,MAAOd,SACA,CAAE4B,KAAM,QAASd,IAAKd,IAhBjCtB,EAAQuB,KAAOA,MA2BXoB,EAAmB,YAMdb,cACAwB,cACAC,SAILC,EAAoB,GACxBA,EAAkBhD,GAAkB,kBAC3BiD,UAGLC,EAAWxD,OAAOyD,eAClBC,EAA0BF,GAAYA,EAASA,EAASG,EAAO,MAC/DD,GACAA,IAA4B3D,GAC5BG,EAAOiD,KAAKO,EAAyBpD,KAGvCgD,EAAoBI,OAGlBE,EAAKP,EAA2BpD,UAClC2B,EAAU3B,UAAYD,OAAO2B,OAAO2B,YAW7BO,EAAsB5D,IAC5B,OAAQ,QAAS,UAAU6D,SAAQ,SAAS7B,GAC3CrB,EAAOX,EAAWgC,GAAQ,SAASC,UAC1BqB,KAAKxB,QAAQE,EAAQC,kBAkCzB6B,EAAcrC,EAAWsC,OAgC5BC,OAgCClC,iBA9BYE,EAAQC,YACdgC,WACA,IAAIF,GAAY,SAASG,EAASC,aAnCpCC,EAAOpC,EAAQC,EAAKiC,EAASC,OAChCtB,EAASC,EAASrB,EAAUO,GAASP,EAAWQ,MAChC,UAAhBY,EAAOE,KAEJ,KACDsB,EAASxB,EAAOZ,IAChBnB,EAAQuD,EAAOvD,aACfA,GACiB,iBAAVA,GACPb,EAAOiD,KAAKpC,EAAO,WACdiD,EAAYG,QAAQpD,EAAMwD,SAASC,MAAK,SAASzD,GACtDsD,EAAO,OAAQtD,EAAOoD,EAASC,MAC9B,SAAShD,GACViD,EAAO,QAASjD,EAAK+C,EAASC,MAI3BJ,EAAYG,QAAQpD,GAAOyD,MAAK,SAASC,GAI9CH,EAAOvD,MAAQ0D,EACfN,EAAQG,MACP,SAASI,UAGHL,EAAO,QAASK,EAAOP,EAASC,MAvBzCA,EAAOtB,EAAOZ,KAiCZmC,CAAOpC,EAAQC,EAAKiC,EAASC,aAI1BH,EAaLA,EAAkBA,EAAgBO,KAChCN,EAGAA,GACEA,cAkHD1B,EAAoBF,EAAUT,OACjCI,EAASK,EAAS/B,SAASsB,EAAQI,gBAzTrCG,IA0TEH,EAAsB,IAGxBJ,EAAQS,SAAW,KAEI,UAAnBT,EAAQI,OAAoB,IAE1BK,EAAS/B,SAAT,SAGFsB,EAAQI,OAAS,SACjBJ,EAAQK,SArUZE,EAsUII,EAAoBF,EAAUT,GAEP,UAAnBA,EAAQI,eAGHQ,EAIXZ,EAAQI,OAAS,QACjBJ,EAAQK,IAAM,IAAIyC,UAChB,yDAGGlC,MAGLK,EAASC,EAASd,EAAQK,EAAS/B,SAAUsB,EAAQK,QAErC,UAAhBY,EAAOE,YACTnB,EAAQI,OAAS,QACjBJ,EAAQK,IAAMY,EAAOZ,IACrBL,EAAQS,SAAW,KACZG,MAGLmC,EAAO9B,EAAOZ,WAEZ0C,EAOFA,EAAKvC,MAGPR,EAAQS,EAASuC,YAAcD,EAAK7D,MAGpCc,EAAQiD,KAAOxC,EAASyC,QAQD,WAAnBlD,EAAQI,SACVJ,EAAQI,OAAS,OACjBJ,EAAQK,SAzXVE,GAmYFP,EAAQS,SAAW,KACZG,GANEmC,GA3BP/C,EAAQI,OAAS,QACjBJ,EAAQK,IAAM,IAAIyC,UAAU,oCAC5B9C,EAAQS,SAAW,KACZG,YAoDFuC,EAAaC,OAChBC,EAAQ,CAAEC,OAAQF,EAAK,IAEvB,KAAKA,IACPC,EAAME,SAAWH,EAAK,IAGpB,KAAKA,IACPC,EAAMG,WAAaJ,EAAK,GACxBC,EAAMI,SAAWL,EAAK,SAGnBM,WAAWC,KAAKN,YAGdO,EAAcP,OACjBpC,EAASoC,EAAMQ,YAAc,GACjC5C,EAAOE,KAAO,gBACPF,EAAOZ,IACdgD,EAAMQ,WAAa5C,WAGZhB,EAAQL,QAIV8D,WAAa,CAAC,CAAEJ,OAAQ,SAC7B1D,EAAYqC,QAAQkB,EAAczB,WAC7BoC,OAAM,YA8BJhC,EAAOiC,MACVA,EAAU,KACRC,EAAiBD,EAAStF,MAC1BuF,SACKA,EAAe1C,KAAKyC,MAGA,mBAAlBA,EAASd,YACXc,MAGJE,MAAMF,EAASG,QAAS,KACvBC,GAAK,EAAGlB,EAAO,SAASA,WACjBkB,EAAIJ,EAASG,WAChB7F,EAAOiD,KAAKyC,EAAUI,UACxBlB,EAAK/D,MAAQ6E,EAASI,GACtBlB,EAAKzC,MAAO,EACLyC,SAIXA,EAAK/D,WAzeTqB,EA0eI0C,EAAKzC,MAAO,EAELyC,UAGFA,EAAKA,KAAOA,SAKhB,CAAEA,KAAMmB,YAIRA,UACA,CAAElF,WAzfPqB,EAyfyBC,MAAM,UA7ZnCe,EAAkBnD,UAAY2D,EAAGsC,YAAc7C,EAC/CA,EAA2B6C,YAAc9C,EACzCA,EAAkB+C,YAAcvF,EAC9ByC,EACA3C,EACA,qBAaFZ,EAAQsG,oBAAsB,SAASC,OACjCC,EAAyB,mBAAXD,GAAyBA,EAAOH,oBAC3CI,IACHA,IAASlD,GAG2B,uBAAnCkD,EAAKH,aAAeG,EAAKC,QAIhCzG,EAAQ0G,KAAO,SAASH,UAClBrG,OAAOyG,eACTzG,OAAOyG,eAAeJ,EAAQhD,IAE9BgD,EAAOK,UAAYrD,EACnBzC,EAAOyF,EAAQ3F,EAAmB,sBAEpC2F,EAAOpG,UAAYD,OAAO2B,OAAOiC,GAC1ByC,GAOTvG,EAAQ6G,MAAQ,SAASzE,SAChB,CAAEqC,QAASrC,IAsEpB2B,EAAsBE,EAAc9D,WACpC8D,EAAc9D,UAAUO,GAAuB,kBACtC+C,MAETzD,EAAQiE,cAAgBA,EAKxBjE,EAAQ8G,MAAQ,SAAStF,EAASC,EAASC,EAAMC,EAAauC,QACxC,IAAhBA,IAAwBA,EAAc6C,aAEtCC,EAAO,IAAI/C,EACb1C,EAAKC,EAASC,EAASC,EAAMC,GAC7BuC,UAGKlE,EAAQsG,oBAAoB7E,GAC/BuF,EACAA,EAAKhC,OAAON,MAAK,SAASF,UACjBA,EAAOjC,KAAOiC,EAAOvD,MAAQ+F,EAAKhC,WAuKjDjB,EAAsBD,GAEtBhD,EAAOgD,EAAIlD,EAAmB,aAO9BkD,EAAGtD,GAAkB,kBACZiD,MAGTK,EAAGmD,SAAW,iBACL,sBAkCTjH,EAAQkH,KAAO,SAASC,OAClBD,EAAO,OACN,IAAIlG,KAAOmG,EACdD,EAAKxB,KAAK1E,UAEZkG,EAAKE,UAIE,SAASpC,SACPkC,EAAKjB,QAAQ,KACdjF,EAAMkG,EAAKG,SACXrG,KAAOmG,SACTnC,EAAK/D,MAAQD,EACbgE,EAAKzC,MAAO,EACLyC,SAOXA,EAAKzC,MAAO,EACLyC,IAsCXhF,EAAQ6D,OAASA,EAMjB7B,EAAQ7B,UAAY,CAClBiG,YAAapE,EAEb6D,MAAO,SAASyB,WACTC,KAAO,OACPvC,KAAO,OAGPpC,KAAOa,KAAKZ,WApgBjBP,OAqgBKC,MAAO,OACPC,SAAW,UAEXL,OAAS,YACTC,SAzgBLE,OA2gBKmD,WAAWzB,QAAQ2B,IAEnB2B,MACE,IAAIb,KAAQhD,KAEQ,MAAnBgD,EAAKe,OAAO,IACZpH,EAAOiD,KAAKI,KAAMgD,KACjBT,OAAOS,EAAKgB,MAAM,WAChBhB,QAnhBXnE,IAyhBFoF,KAAM,gBACCnF,MAAO,MAGRoF,EADYlE,KAAKgC,WAAW,GACLG,cACH,UAApB+B,EAAWzE,WACPyE,EAAWvF,WAGZqB,KAAKmE,MAGd9E,kBAAmB,SAAS+E,MACtBpE,KAAKlB,WACDsF,MAGJ9F,EAAU0B,cACLqE,EAAOC,EAAKC,UACnBhF,EAAOE,KAAO,QACdF,EAAOZ,IAAMyF,EACb9F,EAAQiD,KAAO+C,EAEXC,IAGFjG,EAAQI,OAAS,OACjBJ,EAAQK,SApjBZE,KAujBY0F,MAGP,IAAI9B,EAAIzC,KAAKgC,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,KAChDd,EAAQ3B,KAAKgC,WAAWS,GACxBlD,EAASoC,EAAMQ,cAEE,SAAjBR,EAAMC,cAIDyC,EAAO,UAGZ1C,EAAMC,QAAU5B,KAAK8D,KAAM,KACzBU,EAAW7H,EAAOiD,KAAK+B,EAAO,YAC9B8C,EAAa9H,EAAOiD,KAAK+B,EAAO,iBAEhC6C,GAAYC,EAAY,IACtBzE,KAAK8D,KAAOnC,EAAME,gBACbwC,EAAO1C,EAAME,UAAU,GACzB,GAAI7B,KAAK8D,KAAOnC,EAAMG,kBACpBuC,EAAO1C,EAAMG,iBAGjB,GAAI0C,MACLxE,KAAK8D,KAAOnC,EAAME,gBACbwC,EAAO1C,EAAME,UAAU,OAG3B,CAAA,IAAI4C,QAMH,IAAI7F,MAAM,6CALZoB,KAAK8D,KAAOnC,EAAMG,kBACbuC,EAAO1C,EAAMG,gBAU9BxC,OAAQ,SAASG,EAAMd,OAChB,IAAI8D,EAAIzC,KAAKgC,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,KAChDd,EAAQ3B,KAAKgC,WAAWS,MACxBd,EAAMC,QAAU5B,KAAK8D,MACrBnH,EAAOiD,KAAK+B,EAAO,eACnB3B,KAAK8D,KAAOnC,EAAMG,WAAY,KAC5B4C,EAAe/C,SAKnB+C,IACU,UAATjF,GACS,aAATA,IACDiF,EAAa9C,QAAUjD,GACvBA,GAAO+F,EAAa5C,aAGtB4C,EAAe,UAGbnF,EAASmF,EAAeA,EAAavC,WAAa,UACtD5C,EAAOE,KAAOA,EACdF,EAAOZ,IAAMA,EAET+F,QACGhG,OAAS,YACT6C,KAAOmD,EAAa5C,WAClB5C,GAGFc,KAAK2E,SAASpF,IAGvBoF,SAAU,SAASpF,EAAQwC,MACL,UAAhBxC,EAAOE,WACHF,EAAOZ,UAGK,UAAhBY,EAAOE,MACS,aAAhBF,EAAOE,UACJ8B,KAAOhC,EAAOZ,IACM,WAAhBY,EAAOE,WACX0E,KAAOnE,KAAKrB,IAAMY,EAAOZ,SACzBD,OAAS,cACT6C,KAAO,OACa,WAAhBhC,EAAOE,MAAqBsC,SAChCR,KAAOQ,GAGP7C,GAGT0F,OAAQ,SAAS9C,OACV,IAAIW,EAAIzC,KAAKgC,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,KAChDd,EAAQ3B,KAAKgC,WAAWS,MACxBd,EAAMG,aAAeA,cAClB6C,SAAShD,EAAMQ,WAAYR,EAAMI,UACtCG,EAAcP,GACPzC,UAKJ,SAAS0C,OACX,IAAIa,EAAIzC,KAAKgC,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,KAChDd,EAAQ3B,KAAKgC,WAAWS,MACxBd,EAAMC,SAAWA,EAAQ,KACvBrC,EAASoC,EAAMQ,cACC,UAAhB5C,EAAOE,KAAkB,KACvBoF,EAAStF,EAAOZ,IACpBuD,EAAcP,UAETkD,SAML,IAAIjG,MAAM,0BAGlBkG,cAAe,SAASzC,EAAUf,EAAYE,eACvCzC,SAAW,CACd/B,SAAUoD,EAAOiC,GACjBf,WAAYA,EACZE,QAASA,GAGS,SAAhBxB,KAAKtB,cAGFC,SA7rBPE,GAgsBOK,IAQJ3C,EA7sBM,CAotBgBwI,EAAOxI,aAIpCyI,mBAAqB1I,EACrB,MAAO2I,GAUPC,SAAS,IAAK,yBAAdA,CAAwC5I,gBClrBpB6I,gFAAf,WACLC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,0FAHAH,IAAAA,EAAc,qCACdC,IAAAA,GAAU,GAIVG,SAAOC,oCAAoCR,SAAeE,EAAUO,QAE9DC,EAAqC,gBACzBP,EAChBQ,wBAAyBT,EAAUU,OAGhCN,IACCF,EACFM,EAAQ,iBAAmB,IAClBL,IACTK,EAAQ,YAAcL,aAIHQ,eAClBX,EAAUO,iBAAgBP,EAAUY,YAAWd,EAClD,CACE1G,OAAQ,OACRoH,QAAAA,EACAK,KAAMd,eALJe,UAQQC,qCACAC,EACVF,EACA,oCACAd,iDAGuBc,EAASG,wCAC7BC,KAAKC,2FAOQC,sEAAf,WAAiCtB,EAAkBE,+EACxDK,SAAOC,qCAAqCR,WAAiBE,EAAUO,iBAChDI,eAClBX,EAAUO,kBAAiBP,EAAUY,YAAWd,EACnD,CACE1G,OAAQ,SACRoH,QAAS,CACPC,wBAAyBT,EAAUU,oBALnCI,UASQC,mCACAC,EACVF,EACA,qCACAd,kGAYUqB,EAAevB,EAAkBE,UACxChC,QAAQ1C,WAAW0E,EAAUsB,WAAatB,EAAUY,YAAWd,GAgDxE,SAASyB,EACPC,EACAC,EACAC,EACAC,OAEMC,EAAgBJ,EAAQK,eACxBC,EACJN,EAAQO,qBAAuBC,SAASR,EAAQO,oBAAoBrD,MAAM,GAAI,KAAO,EACjFuD,EAAMC,0BAAwBT,OAE/BK,SAjDP,SAA6BF,EAAuBH,OAE9CU,MAEFA,EAAkBjB,KAAKC,MAAMS,GAC7B,MAAOrJ,SACD,IAAIe,MAAM,iEAES,YAAvB6I,EAAgB,IAA2C,mCAAvBA,EAAgB,GAAyC,KACzFC,EAASC,oBAAkBZ,GAAwC,KAAxBA,EAAavE,OAAgB,KAAO,KAC/EoF,EAASC,iBAAeC,OAAOC,KAAKb,IAEpCc,EAAkBN,EAAOO,KAAKL,GAK9BM,EAJoBC,SAAOD,UAAUE,OAAOJ,EAAiBK,cAAYC,cAI3C9E,SAAS,OAAOQ,MAAM,GAAI,GAExDuE,EAAYf,0BAAwBT,UAC5Be,OAAOC,KAAKvB,KAAKgC,UAAU,CAAED,UAAAA,EAAWL,UAAAA,KAAc1E,SAAS,gBAGvE,IAAI5E,MACR,iFA0BK6J,CAAoBvB,EAAeH,OAItC2B,EAAU,CACdC,cAAezB,EACfF,OAAAA,EACAO,IAAAA,EACAqB,KALWC,cAAY,IAAIrF,SAAS,OAMpCyD,iBAAkBA,eAGN,IAAI6B,cAAY,SAAU/B,GAAckB,KAAKS,YAQvCK,wEAAf,WACLC,EACAC,EACAhC,uFAEAtB,SAAOC,2BAA2BoD,wBAEX/C,eAAgB+C,6BAAjC5C,kBACgBA,EAAS8C,qBACzBC,GADArC,UACkBsC,gBAClBpD,EAAQa,EAAoBC,EAASmC,EAAoBD,EAAY/B,GACrEf,EAAUmD,kBACd1B,oBAAkBsB,GAAoD,KAA9BA,EAAmBzG,OAAgB,KAAO,wBAE7E,CACLoE,WAAYuC,EACZG,+BAAgCxC,EAAQwC,+BACxCpD,QAAAA,EACAF,MAAAA,EACAH,OAAQmD,gFAWUO,sEAAf,WAA4BP,EAAoBQ,uFAC/CC,EAAkBC,SAAOC,eAAe7B,OAAOC,KAAKyB,EAAe,iBAClDvD,eAAgB+C,6BAAjC5C,kBACqBA,EAASG,qBAC9BqD,EAAepD,KAAKC,cACpB0C,EAAUS,EAAaR,gBACvBlD,EAAUmD,kBAAgBI,wBACXN,EAAUjD,mFAIlB2D,oEAAf,WAAoCzD,iFAC9B0D,EAAc,qBAGI1D,EAASG,cAA7BuD,aAEEC,EAAevD,KAAKC,MAAMqD,GAC1B,MAAO3I,oDAITwE,SAAOC,sFAKF,CAAEoE,OAHM5D,EAAS4D,OAGPC,WAFE7D,EAAS6D,WAEC9D,KADhB4D,GAAgBD,6FAQTxD,wEAAf,WACLF,EACA8D,EACA5E,8EAEIc,EAASC,yBACL,IAAIzH,MAAM,8EAESiL,EAAqBzD,aACpB,OADtB+D,UACWH,gDACR,IAAII,kBAAgBF,EAAUC,cACJ,MAAxBA,EAAaH,iDACf,IAAIK,sBAAoBH,EAAUC,eACR,MAAxBA,EAAaH,iDACf,IAAIM,eAAaJ,EAAUC,eACD,MAAxBA,EAAaH,8BAChB,IAAIO,eAAaL,EAAUC,cACA,MAAxBA,EAAaH,iDACf,IAAIQ,gBAAcN,EAAUC,eACF,MAAxBA,EAAaH,iDACf,IAAIS,0BAAwBP,EAAUC,eACZ,MAAxBA,EAAaH,+BAChBU,EACJpF,GAAaA,EAAUgE,+BACnBqB,mBAAiBrF,EAAUgE,gCAC3B,oBACC,IAAIsB,uBAAqBV,EAAUC,EAAcO,qCAEjD,IAAI9L,MAAMsL,2ECrSRW,wBAeCC,EAAyBvF,QAC9BwF,UAA+B,iBAAZD,OACnBA,QAAUD,EAAkBG,yBAAyBF,EAASvF,QAC9DA,YAAcA,GAAevF,KAAKiL,yBAClCC,kBAAoBlL,KAAKmL,wBAGjBH,yBAAP,SACNF,EACAvF,UAGyB,iBAAZuF,EAAsB,KAGzBM,GAAW7F,GAAe,IAAI8F,cAAcC,QAAQ,IAAK,OAE7DF,EAAQG,SAAS,aAChBH,EAAQG,SAAS,kBACjBH,EAAQG,SAAS,uBAEZ,IAAI3M,uDAAuD2G,MAExC,oBAAhBiG,YAA6B,KAChCC,GAAgB,IAAID,aAAcpD,OAAO0C,UACxChD,OAAOC,KAAK0D,EAAcC,eAE5B5D,OAAOC,KAAK+C,GACd,GAAIhD,OAAO6D,SAASb,UAClBA,EACF,GAAIc,YAAYC,OAAOf,UACrBhD,OAAOC,KAAK+C,EAAQY,OAAQZ,EAAQgB,WAAYhB,EAAQiB,YAC1D,GAAoB,oBAATC,MAAwBlB,aAAmBkB,YACpDlB,EACF,GAA2B,oBAAhBc,aAA+Bd,aAAmBc,mBAC3D9D,OAAOC,KAAK+C,GACd,GAAImB,MAAMC,QAAQpB,GAAU,IAI/BA,EAAQtI,OAAS,KACf2J,OAAOC,UAAUtB,EAAQ,KAAOA,EAAQ,GAAK,GAAKA,EAAQ,GAAK,WAE3D,IAAIlM,+DACiDkM,EAAQ,2CAA0C9K,KAAKqM,0BAG7GvE,OAAOC,KAAK+C,OAEbwB,EAAW7P,OAAOC,UAAU8G,SAAS5D,KAAKkL,SAC1C,IAAIlM,gDACkC0N,OAAatM,KAAKqM,mBAGhE,MAAOlL,SACPoL,QAAQpL,MAAMA,GACR,IAAIvC,gCAAgCuC,gCAItC8J,kBAAA,kBACFjL,KAAK+K,UACA,4BACkB,oBAATiB,MAAwBhM,KAAK8K,mBAAmBkB,MAAQhM,KAAK8K,QAAQrL,KAC9EO,KAAK8K,QAAQrL,KAEb,8BAIH0L,oBAAA,cACFS,YAAYC,OAAO7L,KAAK8K,UAAYhD,OAAO6D,SAAS3L,KAAK8K,gBACpD9K,KAAK8K,QAAQiB,WACf,GAAoB,oBAATC,MAAwBhM,KAAK8K,mBAAmBkB,YACzDhM,KAAK8K,QAAQ0B,SAEhBF,EAAW7P,OAAOC,UAAU8G,SAAS5D,KAAKI,KAAK8K,SAC/C3J,EAAQ,IAAIvC,0BAA0B0N,4CAC5CC,QAAQpL,MAAMA,GACRA,KAGMsL,uCAAN,4GAEA3E,OAAO6D,SAAS3L,KAAK8K,kDAChB9K,KAAK8K,oBACHc,YAAYC,OAAO7L,KAAK8K,kDAC1BhD,OAAOC,KAAK/H,KAAK8K,QAAQY,OAAQ1L,KAAK8K,QAAQgB,WAAY9L,KAAK8K,QAAQiB,yBACrD,oBAATC,MAAwBhM,KAAK8K,mBAAmBkB,8BAC1DU,EAAS,IAAIC,WACbC,EAAc,IAAItJ,SAAgB,SAAC1C,EAASC,GAChD6L,EAAOG,QAAU,SAAAhP,GACfgD,EAAOhD,IAET6O,EAAOI,OAAS,WAEdlM,EAAQkH,OAAOC,KADK2E,EAAO3L,UAG7B2L,EAAOK,kBAAkBC,EAAKlC,sBAEX8B,yDAGfN,EAAW7P,OAAOC,UAAU8G,SAAS5D,KAAKI,KAAK8K,SAC/C,IAAIlM,yBAAyB0N,mEAGrCC,QAAQpL,YACF8L,EAAmB,IAAIrO,sCAC7B2N,QAAQpL,MAAM8L,GACRA,mHAIVC,KAAA,uBAC0BrO,IAApBmB,KAAKmN,kBACFA,WAAanN,KAAKyM,eAElBzM,KAAKmN,iBA1HEtC,oBACd,8ICqCJ,IAmDauC,wBAGCC,QACLC,YAAcD,EAAQC,uCAYvBC,mCAAN,WAAcC,EAAcH,iFACpBI,EAA2B,CAC/BC,SAAS,EACTC,QAAQ,EACRC,IAAKC,kBAAgB,WAAY,CAAEC,mBAAmB,IAASC,UAE3DC,EAAMvR,OAAOwR,OAAO,GAAIR,EAAUJ,IAIhCM,QAAWK,EAAIN,iDACd1N,KAAKkO,yBAAyBV,EAAMQ,2BAGhBhO,KAAKmO,gBAChCX,EACAQ,EAAIJ,IACJI,EAAII,SACJJ,EAAIK,oBACFL,EAAIN,mBAEe,QAPjBY,oDAQGA,eACEN,EAAIN,SAAYM,EAAIL,2BACC,iBAAnBW,yBACH,IAAI1P,MAAM,+DAES,iBAAhBoP,EAAIN,kDAEN1N,KAAKsN,YAAYiB,eAAeD,EADpB,CAAEE,WAAYR,EAAIN,4CAG9B1N,KAAKsN,YAAYiB,eAAeD,wCAEhCN,EAAIN,UAAWM,EAAIL,2BACE,iBAAnBW,yBACH,IAAI1P,MAAM,kEAGS,iBAAhBoP,EAAIN,UACbe,EAAgBT,EAAIN,2BAEf1N,KAAK0O,8BACVlB,EACAc,EACAN,EAAIJ,IACJa,EACAT,EAAII,SACJJ,EAAIK,+BAEIL,EAAIL,QAAWK,EAAIN,kDACtBY,iBAED,IAAI1P,MAAM,qIAed+P,6CAAN,WACEnB,EACAY,EACAQ,EACAP,4FAEsBQ,gBAAc,CAAET,SAAAA,EAAUC,kBAAAA,kBAA1CS,UAEMlS,eAAe,SACrBkS,EAAQC,KAAKnS,eAAegS,KAExBI,EADMF,EAAQC,KAAKH,GACNtD,QAAQ,cAAe,OAC1C2D,KAAeD,EAASxB,qBAGrByB,4GAQHC,0CAAN,WACEtB,EACAQ,EACAC,iFAEMc,EAAOC,EAAiBpP,KAAKsN,YAAa,CAAEM,IAAAA,EAAKQ,SAAAA,EAAUC,kBAAAA,KAE7DD,kCACcpO,KAAK2O,kBAAkB,IAAKQ,EAAKf,SAAWe,EAAKvB,IAAKuB,EAAKd,0BAA3EgB,gDAE4BrP,KAAKsP,+CAA3BC,mBACU5I,EAAe,IAAK4I,WAApCF,oBAEIG,EAAUH,EAASI,MAAM,4DAEvB,IAAI7Q,MAAM,iEAEX4Q,EAAQA,EAAQhN,OAAS,iHAU5BkN,sCAAN,WAAiBlC,EAAcH,iFACvB8B,EAAOC,EAAiBpP,KAAKsN,YAAaD,IAGvCe,yCACSpO,KAAK2O,kBACnBnB,EACA2B,EAAKf,SACLe,EAAKvB,IACLuB,EAAKd,0BAJPsB,gDAO4B3P,KAAKsP,+CAA3BC,mBACU5I,EAAe6G,EAAM+B,WAArCI,oBAGGA,yBACG,IAAI/Q,MAAM,oDAET+Q,8GASLxB,2CAAN,WACEX,EACAI,EACAQ,EACAC,EACAuB,yFAEMT,EAAO,CAAEvB,IAAAA,EAAKQ,SAAAA,EAAUC,kBAAAA,YACRrO,KAAK0P,WAAWlC,EAAM2B,iBAAtCQ,kBACiB1J,eAAa0J,cAA9BvJ,UACQC,qCACAC,EAA+BF,aAAqBoH,aAAgB,sCAGvD,iBADvBjI,EAAca,EAASN,QAAQ+J,IAAI,mBAErCtK,EAAcA,EAAY8F,gBAGtB5F,EAAOW,EAASN,QAAQ+J,IAAI,YAE1BC,EAAc9P,KAAKsN,YAAYyC,MAAMC,kBAC/BC,MAAOzC,GAAQ/H,OACtB6H,YAAYyC,MAAMG,eAAeJ,MAGtCF,GACgB,OAAhBrK,GACAA,EAAY4K,WAAW,SACvB5K,EAAY4K,WAAW,+DAEhB/J,EAASG,yCAETH,EAASgK,gIAUdlC,oDAAN,WAA+BV,EAAcQ,+FAKrCqC,EAAa7C,EAnQO,yBAqQqClK,QAAQgN,IAAI,CACvEtQ,KAAKmO,gBAAgBX,EAAMQ,EAAIJ,IAAMI,EAAII,SAAUJ,EAAIK,mBAAmB,GAC1ErO,KAAKmO,gBAAgBkC,EAASrC,EAAIJ,IAAMI,EAAII,SAAUJ,EAAIK,mBAAmB,GAC7ErO,KAAKkP,eAAelB,EAAIJ,IAAMI,EAAII,SAAUJ,EAAIK,+BAH7BkC,gBAAmBC,OAAjCC,iDAOEA,cAEJD,yBACG,IAAIE,6BACR,mDAAwDlD,cAGvD+C,GAAkD,iBAAtBA,yBACzB,IAAIG,6BACR,wCACKlD,mBAAqBA,EAtRN,0BA4RhBmD,EAAYnK,KAAKC,MAAM8J,GAC7BrI,EAAYyI,EAAUzI,UACtB0I,EAAYD,EAAUC,kEAElBC,gBAAeC,oCACX,IAAIlS,MACR,iDACY4O,EADZ,qEAQAuD,EAAgBC,qBAAmBJ,GACrCJ,IAAgBO,yBACZ,IAAIL,6BACR,0BAA0BK,EAA1B,iCAC0BP,kBAElBS,cAAYR,EAAcG,EAAW1I,0BACzC,IAAIwI,6BACR,gDACWlD,kBAAoBA,EAnTX,yCAsTfiD,kEAILI,gBAAetG,gBAAgBsG,KAAIK,QAAQC,QAAQd,IAAY,0BAC3D,IAAIK,6BACR,wCACKlD,mBAAqBA,EA7TN,uJA4UtBkB,yDAAN,WACElB,EACAc,EACAV,EACAY,EACAJ,EACAC,yFAEM7E,EAAgBgF,GAAcxO,KAAKsN,YAAY8D,eAAe5H,cAE9D6H,EAAe7J,0BAAwBgC,IAGzC4E,kCACcpO,KAAKkP,eAAetB,EAAKQ,EAAUC,UAAnDnI,+BAEAA,EAAU8K,qBAAmBK,aAE1BnL,yBACG,IAAIwK,6BACR,mDAAwDlD,qBAK1DmD,EAAYnK,KAAKC,MAAM6H,2DAEnBgD,gBAAeR,oCACX,IAAIlS,MACR,oLAQAsJ,EAAYyI,EAAUzI,UAEtBqJ,EAAaZ,EAAUY,WACvBR,EAAgBC,qBAFhBQ,EAAkBb,EAAUC,WAI7BY,GAAoBD,GAAerJ,yBAChC,IAAIwI,6BACR,wDAA6DlD,cAEtDuD,IAAkB7K,yBACrB,IAAIwK,6BACR,0BAA0BK,EAA1B,iCAA6E7K,kBAErE+K,cAAYM,EAAYC,EAAiBtJ,0BAC7C,IAAIwI,6BACR,kDAAuDlD,cAE1B,iBAAfgB,4CAETxO,KAAKsN,YAAYiB,eAAegD,EADpB,CAAE/C,WAAAA,sCAGdxO,KAAKsN,YAAYiB,eAAegD,iIAarCE,mCAAN,WACEjE,EACA1C,EACAuC,kIAQMW,EAAMvR,OAAOwR,OAAO,GANO,CAC/ByD,SAAS,EACTzJ,MAAM,EACN0J,mBAAoB,MACpBjM,uBAAuB,GAEe2H,YAEZrN,KAAKsP,2CAC3BsC,EAAiBjH,oBADjB4E,UACgDjG,gCAChDuI,EAAeD,EAAiB,EAEhCE,EAAgB,IAAIjH,EAAkBC,EAASkD,EAAIzI,aACrDA,EAAcuM,EAAcvM,eAG3ByI,EAAI0D,SAAWG,GAAgBC,EAAc5G,kBAAoB0G,0BAE9DG,EAAU,IAAInH,mEAD2CgH,kCAA8CE,EAAc5G,2BACtE,KAAM0G,GAC3DrF,QAAQpL,MAAM4Q,GACRA,cAKJ/D,EAAI0D,UAAWG,yBACXG,EAAgBC,2BAAyB,CAC7CC,cAAeJ,EAAc5G,kBAC7BH,UAAW+G,EAAc/G,UACzB9C,OAAQ+F,EAAI/F,KACZ0J,mBAAoB3D,EAAI2D,sBAENC,0BAEZG,EAAU,IAAInH,mEAD2CgH,kCAA8CI,4BACxD,KAAMJ,GAC3DrF,QAAQpL,MAAM4Q,GACRA,aAKNvM,GAAU,EACRsK,EAAc9P,KAAKsN,YAAYyC,MAAMC,iBAEtChC,EAAItI,iCACHoK,EAAYG,cAAZkC,EAAoB3E,MACtBhI,GAAU,EACVC,WAAOqK,EAAYG,cAAZmC,EAAoB5E,IAO1BQ,EAAI0D,UAAW1D,EAAI/F,uCACI6J,EAAc5E,eAAlCmF,SAGJ7D,EADsB,iBAAbR,EAAI/F,KACA+F,EAAI/F,KAEJjI,KAAKsN,YAAY8D,eAAe5H,cAEzC8I,EAAkBC,YAAU/D,EAAY6D,GACxCG,EAAmBhM,KAAKgC,UAAU8J,GAExCG,6BAAW,WAAOnN,wFAERhC,QAAQgN,IAAI,CAChBnL,EACEqI,EACA6E,EACA/M,EACAC,EACAC,EACAC,EACAuI,EAAItI,uBAENP,EACKqI,EAtea,OAuehBgF,EACAlN,EACA,oCAfAoN,SAkBJ,IACG1E,EAAItI,uBAAyBgN,EAAcjN,OAC9CqK,EAAYG,MAAOzC,GAAQkF,EAAcjN,KACzCuH,EAAKM,YAAYyC,MAAMG,eAAeJ,sBAEjC4C,EAAcC,uIAKlB3E,EAAI0D,SAAY1D,EAAI/F,sBAGvB2K,EAAmBd,EAAchH,uCAM/B8F,EADyB,iBAAhB5C,EAAI0D,QACD1D,EAAI0D,QAEJlK,0BADiB,iBAAbwG,EAAI/F,KACgB+F,EAAI/F,KAEJjI,KAAKsN,YAAY8D,eAAe5H,yBAE5CsI,EAAc5E,sBAAlCmF,mBACmBrS,KAAKsN,YAAYuF,eAAeR,EAAa,CACpEzB,UAAAA,EACA7F,UAAW+G,EAAc/G,UACzB4G,mBAAoB3D,EAAI2D,mBACxB1J,KAAM+F,EAAI/F,eAJZ2K,SAMArN,EAAc,2BAGhBkN,6BAAW,WAAOnN,wFACYH,EAC1BqI,EACAoF,EACAtN,EACAC,EACAC,EACAC,EACAuI,EAAItI,qCAPAgN,UASYjN,OAChBqK,EAAYG,MAAOzC,GAAQkF,EAAcjN,KACzCuH,EAAKM,YAAYyC,MAAMG,eAAeJ,sBAEjC4C,EAAcC,+IAKVF,EAASlD,mFAIlBuD,gCACFvG,QAAQpL,YACRoL,QAAQpL,MAAM,wEACenB,KAAK+S,2CAA5BC,mBACOP,EAASO,sLAetBC,sCAAN,WACEzF,EACAH,gGAI4BrN,KAAKsP,2CAA3BC,SACAJ,EAAO1S,OAAOwR,OAAO,GAAIZ,GACzByC,EAAc9P,KAAKsN,YAAYyC,MAAMC,kBACvCb,EAAK+D,oDAGCxM,EAAkB8G,EAAM+B,2BACxB7I,EAAqB8G,EAtkBL,OAskBqC+B,kBACpDO,EAAYG,MAAOzC,QACrBF,YAAYyC,MAAMG,eAAeJ,sEAET9P,KAAK+S,2CAA5BC,mBACAtM,EAAkB8G,EAAMwF,4BACxBtM,EAAqB8G,EA5kBL,OA4kBqC+B,kBACpDO,EAAYG,MAAOzC,QACrBF,YAAYyC,MAAMG,eAAeJ,8DAIhCpJ,EAAkB8G,EAAM+B,kBACvBO,EAAYG,MAAOzC,QACrBF,YAAYyC,MAAMG,eAAeJ,uEAET9P,KAAK+S,2CAA5BC,mBACAtM,EAAkB8G,EAAMwF,kBACvBlD,EAAYG,MAAOzC,QACrBF,YAAYyC,MAAMG,eAAeJ,+HAY5CqD,gBAAA,SAAgBnK,EAAoBQ,UAC3BD,EAAaP,EAAYQ,MAgB5B4J,yCAAN,WACE9N,EACA+N,EACAC,EACAC,EACAC,2FAEIF,EAAY,6BAGR,IAAI1U,MAAM,2CAGN0G,uCAAoBtF,KAAKsP,kEAArChK,gBAGQmO,EAAcjN,KAAKgC,UAAU,CAAE6K,KAAAA,IAC/BK,EAAe,CACnBhV,OAAQ,OACRoH,QAAS,gBACS,uCACK2N,EAAYjR,OACjCuD,wBAAyBT,EAAUU,OAErCG,KAAMsN,aAESxN,eACZX,EAAUO,sBAAqBP,EAAUY,QAC5CwN,eAFFtN,UAIcC,qCACAC,EAA+BF,EAAU,oBAAqBd,qFAK1D,IAAdgO,oCAC2BtT,KAAK+S,6DAC3B/S,KAAKoT,qBAA8BC,EAAMC,EAAY,EAAG,EAAGE,gDAK3CpN,EAASG,kBAC9BqD,EAAepD,KAAKC,cAEpBkN,EAAW/J,EAAayJ,YADxBO,EAAUhK,EAAagK,gCAKrB,IAAIhV,MAAM,8CAEdiV,EAAgB,EACXpR,EAAI,eAAGA,EAAImR,EAAQpR,4BAGP,OAAfoR,EAAQnR,uBACVoR,IACWL,EAASI,EAAQnR,8CAGnB8Q,EAAY9Q,WARWA,iCAYhCkR,GAAYC,EAAQpR,OAAS,6CAExBxC,KAAKoT,cACV9N,EACAqO,EACAL,EAAY,EACZC,EAAYM,EACZL,qCAIKD,EAAYM,6HAcvBC,UAAA,SAAUN,UACDxT,KAAKoT,cAAc,KAAM,KAAM,EAAG,EAAGI,MAMxClE,0DAAN,yFACQQ,EAAc9P,KAAKsN,YAAYyC,MAAMC,iBACrC+D,EAAWjE,EAAYiE,+BAErB,IAAIC,oBAAkB,gCAExB1O,EAAYyO,EAASxE,wDAElBjM,QAAQ1C,QAAQ0E,oCAElBtF,KAAK+S,oIAURA,qDAAN,yFACQgB,EAAW/T,KAAKsN,YAAY8D,qCAG1B,IAAI4C,oBAAkB,kCAGzBD,EAAS/M,SACZ+M,EAAS/M,OAASiN,4CAGKlL,EACvBgL,EAAS/M,OACT+M,EAASvK,cACTuK,EAASG,oCAGXH,EAASxE,cANH4E,UAQArE,EAAc9P,KAAKsN,YAAYyC,MAAMC,kBAC/B+D,SAAUxE,cAAgB4E,OACjC7G,YAAYyC,MAAMG,eAAeJ,qBAE/BqE,8GAYX,SAAS/E,EACP9B,EACAD,OAMM8B,EAAO1S,OAAOwR,OAAO,GAAIZ,MAC3B8B,EAAKf,SAAU,KACZe,EAAKvB,IAAK,KACRN,EAAY8G,gBACT,IAAIJ,oBAAkB,qBAE9B7E,EAAKvB,IAAMN,EAAY8G,UAAUC,cAE9BlF,EAAKd,kBAAmB,KACtBf,EAAY8G,gBACT,IAAIJ,oBAAkB,yBAEzB1G,EAAYyC,YACT,IAAIiE,oBAAkB,iCAIxBM,EAFchH,EAAYyC,MAAMC,iBAEC+D,SAAUQ,UAAYjH,EAAY8G,UAAUG,SAC/ED,IACFnF,EAAKd,qBAAuBiG,EAAqBE,4BAIhDrF,EAOT,SAAS2D,EAAuB3R,OACzBA,IAAUA,EAAMsT,WAAatT,EAAMsT,SAASC,kBACxC,MAEHA,EAAavT,EAAMsT,SAASC,kBAEf,MAAfA,GAIe,MAAfA,GAIAA,GAAc,KAAOA,GAAc,sCFl2BA"}