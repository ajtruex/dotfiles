"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("bitcoinjs-lib"),r=require("jsontokens"),t=require("@stacks/common"),n=require("@stacks/encryption"),o=require("zone-file"),i=require("schema-inspector");function a(e,n,o,i,a,s,u){if(void 0===a&&(a="ES256K"),void 0===s&&(s=new Date),void 0===u&&(u=t.nextYear()),"ES256K"!==a)throw new Error("Signing algorithm not supported");var l=r.SECP256K1Client.derivePublicKey(n);o||(o={publicKey:l}),i||(i={publicKey:l});var c=new r.TokenSigner(a,n),f={jti:t.makeUUID4(),iat:s.toISOString(),exp:u.toISOString(),subject:o,issuer:i,claim:e};return c.sign(f)}function s(t,o){var i=r.decodeToken(t),a=i.payload;if("string"==typeof a)throw new Error("Unexpected token payload type of string");if(!a.hasOwnProperty("subject")||!a.subject)throw new Error("Token doesn't have a subject");if(!a.subject.hasOwnProperty("publicKey"))throw new Error("Token doesn't have a subject public key");if(!a.hasOwnProperty("issuer")||!a.issuer)throw new Error("Token doesn't have an issuer");if(!a.issuer.hasOwnProperty("publicKey"))throw new Error("Token doesn't have an issuer public key");if(!a.hasOwnProperty("claim"))throw new Error("Token doesn't have a claim");var s=a.issuer.publicKey,u=Buffer.from(s,"hex"),l=e.ECPair.fromPublicKey(u,{compressed:!0}),c=n.ecPairToAddress(l),f=e.ECPair.fromPublicKey(u,{compressed:!1}),p=n.ecPairToAddress(f);if(o===s);else if(o===c);else if(o!==p)throw new Error("Token issuer public key does not match the verifying value");var h=new r.TokenVerifier(i.header.alg,s);if(!h)throw new Error("Invalid token verifier");if(!h.verify(t))throw new Error("Token verification failed");return i}function u(e,t){var n;void 0===t&&(t=null);var o={};if((n=t?s(e,t):r.decodeToken(e)).hasOwnProperty("payload")){var i=n.payload;if("string"==typeof i)throw new Error("Unexpected token payload type of string");i.hasOwnProperty("claim")&&(o=i.claim)}return o}function l(e,r){var t;return r.proof&&r.proof.url&&(t=r.proof.url),{"@type":"Account",service:e,identifier:r.username,proofType:"http",proofUrl:t}}var c={type:"object",properties:{"@context":{type:"string",optional:!0},"@type":{type:"string"}}},f=function(){function e(e){void 0===e&&(e={}),this._profile=Object.assign({},{"@context":"http://schema.org/"},e)}var r=e.prototype;return r.toJSON=function(){return Object.assign({},this._profile)},r.toToken=function(e){return a(this.toJSON(),e)},e.validateSchema=function(e,r){return void 0===r&&(r=!1),c.strict=r,i.validate(c,e)},e.fromToken=function(r,t){return void 0===t&&(t=null),new e(u(r,t))},e.makeZoneFile=function(e,r){return h(e,r)},e}(),p=function(e){var r,t;function n(r){var t;return void 0===r&&(r={}),(t=e.call(this,r)||this)._profile=Object.assign({},{"@type":"Person"},t._profile),t}t=e,(r=n).prototype=Object.create(t.prototype),r.prototype.constructor=r,r.__proto__=t,n.validateSchema=function(e,r){return i.validate(c,e)},n.fromToken=function(e,r){return void 0===r&&(r=null),new n(u(e,r))},n.fromLegacyFormat=function(e){return new n(function(e){var r={"@type":"Person"};if(e){e.name&&e.name.formatted&&(r.name=e.name.formatted),e.bio&&(r.description=e.bio),e.location&&e.location.formatted&&(r.address={"@type":"PostalAddress",addressLocality:e.location.formatted});var t=[];e.avatar&&e.avatar.url&&t.push({"@type":"ImageObject",name:"avatar",contentUrl:e.avatar.url}),e.cover&&e.cover.url&&t.push({"@type":"ImageObject",name:"cover",contentUrl:e.cover.url}),t.length&&(r.image=t),e.website&&(r.website=[{"@type":"WebSite",url:e.website}]);var n=[];e.bitcoin&&e.bitcoin.address&&n.push({"@type":"Account",role:"payment",service:"bitcoin",identifier:e.bitcoin.address}),e.twitter&&e.twitter.username&&n.push(l("twitter",e.twitter)),e.facebook&&e.facebook.username&&n.push(l("facebook",e.facebook)),e.github&&e.github.username&&n.push(l("github",e.github)),e.auth&&e.auth.length>0&&e.auth[0]&&e.auth[0].publicKeychain&&n.push({"@type":"Account",role:"key",service:"bip32",identifier:e.auth[0].publicKeychain}),e.pgp&&e.pgp.url&&n.push({"@type":"Account",role:"key",service:"pgp",identifier:e.pgp.fingerprint,contentUrl:e.pgp.url}),r.account=n}return r}(e))};var o=n.prototype;return o.toJSON=function(){return{profile:this.profile(),name:this.name(),givenName:this.givenName(),familyName:this.familyName(),description:this.description(),avatarUrl:this.avatarUrl(),verifiedAccounts:this.verifiedAccounts(),address:this.address(),birthDate:this.birthDate(),connections:this.connections(),organizations:this.organizations()}},o.profile=function(){return Object.assign({},this._profile)},o.name=function(){return function(e){if(!e)return null;var r=null;return e.name?r=e.name:(e.givenName||e.familyName)&&(r="",e.givenName&&(r=e.givenName),e.familyName&&(r+=" "+e.familyName)),r}(this.profile())},o.givenName=function(){return function(e){if(!e)return null;var r=null;return e.givenName?r=e.givenName:e.name&&(r=e.name.split(" ").slice(0,-1).join(" ")),r}(this.profile())},o.familyName=function(){return function(e){if(!e)return null;var r=null;return e.familyName?r=e.familyName:e.name&&(r=e.name.split(" ").pop()),r}(this.profile())},o.description=function(){return function(e){if(!e)return null;var r=null;return e.description&&(r=e.description),r}(this.profile())},o.avatarUrl=function(){return function(e){if(!e)return null;var r=null;return e.image&&e.image.map((function(e){return"avatar"===e.name?r=e.contentUrl:null})),r}(this.profile())},o.verifiedAccounts=function(e){return function(e,r){if(!e)return null;var t=[];return e.hasOwnProperty("account")&&r&&e.account.map((function(e){var n=!1,o=null;return r.map((function(r){return r.hasOwnProperty("proof_url")&&(r.proofUrl=r.proof_url),!(!r.valid||r.service!==e.service||r.identifier!==e.identifier||!r.proofUrl||(n=!0,o=r.proofUrl,0))})),n?(e.proofUrl=o,t.push(e),e):null})),t}(this.profile(),e)},o.address=function(){return function(e){if(!e)return null;var r=null;if(e.hasOwnProperty("address")){var t=[];e.address.hasOwnProperty("streetAddress")&&t.push(e.address.streetAddress),e.address.hasOwnProperty("addressLocality")&&t.push(e.address.addressLocality),e.address.hasOwnProperty("postalCode")&&t.push(e.address.postalCode),e.address.hasOwnProperty("addressCountry")&&t.push(e.address.addressCountry),t.length&&(r=t.join(", "))}return r}(this.profile())},o.birthDate=function(){return function(e){if(!e)return null;var r=null;if(e.hasOwnProperty("birthDate")){var t=new Date(e.birthDate);r=["January","February","March","April","May","June","July","August","September","October","November","December"][t.getMonth()]+" "+t.getDate()+", "+t.getFullYear()}return r}(this.profile())},o.connections=function(){return function(e){if(!e)return null;var r=[];return e.hasOwnProperty("knows")&&(r=e.knows),r}(this.profile())},o.organizations=function(){return(e=this.profile())?e.hasOwnProperty("worksFor")?e.worksFor:[]:null;var e},n}(f);function h(e,r){if(!r.includes("://"))throw new Error("Invalid token file url");var t=r.split("://")[0],n=r.split("://")[1].split("/"),i=n[0],a="/"+n.slice(1).join("/");return o.makeZoneFile({$origin:e,$ttl:3600,uri:[{name:"_http._tcp",priority:10,weight:1,target:t+"://"+i+a}]},"{$origin}\n{$ttl}\n{uri}\n")}function d(e){if(!e.hasOwnProperty("uri"))return null;if(!Array.isArray(e.uri))return null;if(e.uri.length<1)return null;var r=e.uri[0];if(!r.hasOwnProperty("target"))return null;var t=r.target;return t.startsWith("https")||t.startsWith("http")||(t="https://"+t),t}exports.Person=p,exports.Profile=f,exports.extractProfile=u,exports.getTokenFileUrl=d,exports.makeProfileZoneFile=h,exports.resolveZoneFileToPerson=function(e,r,n){var i=null;try{if(!(i=o.parseZoneFile(e)).hasOwnProperty("$origin"))throw i=null,new Error("zone file is missing an origin")}catch(e){console.error(e)}var a=null;if(i&&Object.keys(i).length>0)(a=d(i))?t.fetchPrivate(a).then((function(e){return e.text()})).then((function(e){return JSON.parse(e)})).then((function(e){var t=u(e[0].token,r);n(t)})).catch((function(e){console.warn(e)})):(console.warn("Token file url not found"),n({}));else{var s=null;try{s=JSON.parse(e),s=p.fromLegacyFormat(s).profile()}catch(e){console.warn(e)}n(s)}},exports.resolveZoneFileToProfile=function(e,r){return new Promise((function(n,i){var a=null;try{(a=o.parseZoneFile(e)).hasOwnProperty("$origin")||(a=null)}catch(e){i(e)}var s=null;if(a&&Object.keys(a).length>0)(s=d(a))?t.fetchPrivate(s).then((function(e){return e.text()})).then((function(e){return JSON.parse(e)})).then((function(e){var t=u(e[0].token,r);n(t)})).catch((function(e){t.Logger.error("resolveZoneFileToProfile: error fetching token file "+s+": "+e),i(e)})):(t.Logger.debug("Token file url not found. Resolving to blank profile."),n({}));else{var l=null;try{l=JSON.parse(e),l=p.fromLegacyFormat(l).profile()}catch(e){i(e)}n(l)}}))},exports.signProfileToken=a,exports.verifyProfileToken=s,exports.wrapProfileToken=function(e){return{token:e,decodedToken:r.decodeToken(e)}};
//# sourceMappingURL=profile.cjs.production.min.js.map
