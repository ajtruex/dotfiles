{"version":3,"file":"profile.esm.js","sources":["../src/profile.ts"],"sourcesContent":["import { signProfileToken, extractProfile } from './profileTokens';\n\nimport { getPersonFromLegacyFormat } from './profileSchemas';\nimport {\n  getName,\n  getFamilyName,\n  getGivenName,\n  getAvatarUrl,\n  getDescription,\n  getVerifiedAccounts,\n  getAddress,\n  getBirthDate,\n  getConnections,\n  getOrganizations,\n} from './profileSchemas/personUtils';\n\n// TODO: bring into this monorepo/convert to ts\n// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\nimport { makeZoneFile, parseZoneFile } from 'zone-file';\n\n// Could not find a declaration file for module\n// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\nimport * as inspector from 'schema-inspector';\n\nimport { Logger, fetchPrivate } from '@stacks/common';\n\nconst schemaDefinition: { [key: string]: any } = {\n  type: 'object',\n  properties: {\n    '@context': { type: 'string', optional: true },\n    '@type': { type: 'string' },\n  },\n};\n\n/**\n * Represents a user profile\n *\n */\nexport class Profile {\n  _profile: { [key: string]: any };\n\n  constructor(profile = {}) {\n    this._profile = Object.assign(\n      {},\n      {\n        '@context': 'http://schema.org/',\n      },\n      profile\n    );\n  }\n\n  toJSON() {\n    return Object.assign({}, this._profile);\n  }\n\n  toToken(privateKey: string): string {\n    return signProfileToken(this.toJSON(), privateKey);\n  }\n\n  static validateSchema(profile: any, strict = false): any {\n    schemaDefinition.strict = strict;\n    return inspector.validate(schemaDefinition, profile);\n  }\n\n  static fromToken(token: string, publicKeyOrAddress: string | null = null): Profile {\n    const profile = extractProfile(token, publicKeyOrAddress);\n    return new Profile(profile);\n  }\n\n  static makeZoneFile(domainName: string, tokenFileURL: string): string {\n    return makeProfileZoneFile(domainName, tokenFileURL);\n  }\n}\n\nconst personSchemaDefinition = {\n  type: 'object',\n  strict: false,\n  properties: {\n    '@context': { type: 'string', optional: true },\n    '@type': { type: 'string' },\n    '@id': { type: 'string', optional: true },\n    name: { type: 'string', optional: true },\n    givenName: { type: 'string', optional: true },\n    familyName: { type: 'string', optional: true },\n    description: { type: 'string', optional: true },\n    image: {\n      type: 'array',\n      optional: true,\n      items: {\n        type: 'object',\n        properties: {\n          '@type': { type: 'string' },\n          name: { type: 'string', optional: true },\n          contentUrl: { type: 'string', optional: true },\n        },\n      },\n    },\n    website: {\n      type: 'array',\n      optional: true,\n      items: {\n        type: 'object',\n        properties: {\n          '@type': { type: 'string' },\n          url: { type: 'string', optional: true },\n        },\n      },\n    },\n    account: {\n      type: 'array',\n      optional: true,\n      items: {\n        type: 'object',\n        properties: {\n          '@type': { type: 'string' },\n          service: { type: 'string', optional: true },\n          identifier: { type: 'string', optional: true },\n          proofType: { type: 'string', optional: true },\n          proofUrl: { type: 'string', optional: true },\n          proofMessage: { type: 'string', optional: true },\n          proofSignature: { type: 'string', optional: true },\n        },\n      },\n    },\n    worksFor: {\n      type: 'array',\n      optional: true,\n      items: {\n        type: 'object',\n        properties: {\n          '@type': { type: 'string' },\n          '@id': { type: 'string', optional: true },\n        },\n      },\n    },\n    knows: {\n      type: 'array',\n      optional: true,\n      items: {\n        type: 'object',\n        properties: {\n          '@type': { type: 'string' },\n          '@id': { type: 'string', optional: true },\n        },\n      },\n    },\n    address: {\n      type: 'object',\n      optional: true,\n      properties: {\n        '@type': { type: 'string' },\n        streetAddress: { type: 'string', optional: true },\n        addressLocality: { type: 'string', optional: true },\n        postalCode: { type: 'string', optional: true },\n        addressCountry: { type: 'string', optional: true },\n      },\n    },\n    birthDate: { type: 'string', optional: true },\n    taxID: { type: 'string', optional: true },\n  },\n};\n\n/**\n * @ignore\n */\nexport class Person extends Profile {\n  constructor(profile = {}) {\n    super(profile);\n    this._profile = Object.assign(\n      {},\n      {\n        '@type': 'Person',\n      },\n      this._profile\n    );\n  }\n\n  static validateSchema(profile: any, strict = false) {\n    personSchemaDefinition.strict = strict;\n    return inspector.validate(schemaDefinition, profile);\n  }\n\n  static fromToken(token: string, publicKeyOrAddress: string | null = null): Person {\n    const profile = extractProfile(token, publicKeyOrAddress);\n    return new Person(profile);\n  }\n\n  static fromLegacyFormat(legacyProfile: any) {\n    const profile = getPersonFromLegacyFormat(legacyProfile);\n    return new Person(profile);\n  }\n\n  toJSON() {\n    return {\n      profile: this.profile(),\n      name: this.name(),\n      givenName: this.givenName(),\n      familyName: this.familyName(),\n      description: this.description(),\n      avatarUrl: this.avatarUrl(),\n      verifiedAccounts: this.verifiedAccounts(),\n      address: this.address(),\n      birthDate: this.birthDate(),\n      connections: this.connections(),\n      organizations: this.organizations(),\n    };\n  }\n\n  profile() {\n    return Object.assign({}, this._profile);\n  }\n\n  name() {\n    return getName(this.profile());\n  }\n\n  givenName() {\n    return getGivenName(this.profile());\n  }\n\n  familyName() {\n    return getFamilyName(this.profile());\n  }\n\n  description() {\n    return getDescription(this.profile());\n  }\n\n  avatarUrl() {\n    return getAvatarUrl(this.profile());\n  }\n\n  verifiedAccounts(verifications?: any[]) {\n    return getVerifiedAccounts(this.profile(), verifications);\n  }\n\n  address() {\n    return getAddress(this.profile());\n  }\n\n  birthDate() {\n    return getBirthDate(this.profile());\n  }\n\n  connections() {\n    return getConnections(this.profile());\n  }\n\n  organizations() {\n    return getOrganizations(this.profile());\n  }\n}\n\n/**\n *\n * @param origin\n * @param tokenFileUrl\n *\n * @ignore\n */\nexport function makeProfileZoneFile(origin: string, tokenFileUrl: string): string {\n  if (!tokenFileUrl.includes('://')) {\n    throw new Error('Invalid token file url');\n  }\n\n  const urlScheme = tokenFileUrl.split('://')[0];\n  const urlParts = tokenFileUrl.split('://')[1].split('/');\n  const domain = urlParts[0];\n  const pathname = `/${urlParts.slice(1).join('/')}`;\n\n  const zoneFile = {\n    $origin: origin,\n    $ttl: 3600,\n    uri: [\n      {\n        name: '_http._tcp',\n        priority: 10,\n        weight: 1,\n        target: `${urlScheme}://${domain}${pathname}`,\n      },\n    ],\n  };\n\n  const zoneFileTemplate = '{$origin}\\n{$ttl}\\n{uri}\\n';\n\n  return makeZoneFile(zoneFile, zoneFileTemplate);\n}\n\n/**\n *\n * @param zoneFileJson\n *\n * @ignore\n */\nexport function getTokenFileUrl(zoneFileJson: any): string | null {\n  if (!zoneFileJson.hasOwnProperty('uri')) {\n    return null;\n  }\n  if (!Array.isArray(zoneFileJson.uri)) {\n    return null;\n  }\n  if (zoneFileJson.uri.length < 1) {\n    return null;\n  }\n  const firstUriRecord = zoneFileJson.uri[0];\n\n  if (!firstUriRecord.hasOwnProperty('target')) {\n    return null;\n  }\n  let tokenFileUrl = firstUriRecord.target;\n\n  if (tokenFileUrl.startsWith('https')) {\n    // pass\n  } else if (tokenFileUrl.startsWith('http')) {\n    // pass\n  } else {\n    tokenFileUrl = `https://${tokenFileUrl}`;\n  }\n\n  return tokenFileUrl;\n}\n\n/**\n *\n * @param zoneFile\n * @param publicKeyOrAddress\n *\n * @ignore\n */\nexport function resolveZoneFileToProfile(zoneFile: any, publicKeyOrAddress: string) {\n  return new Promise((resolve, reject) => {\n    let zoneFileJson = null;\n    try {\n      zoneFileJson = parseZoneFile(zoneFile);\n      if (!zoneFileJson.hasOwnProperty('$origin')) {\n        zoneFileJson = null;\n      }\n    } catch (e) {\n      reject(e);\n    }\n\n    let tokenFileUrl: string | null = null;\n    if (zoneFileJson && Object.keys(zoneFileJson).length > 0) {\n      tokenFileUrl = getTokenFileUrl(zoneFileJson);\n    } else {\n      let profile = null;\n      try {\n        profile = JSON.parse(zoneFile);\n        profile = Person.fromLegacyFormat(profile).profile();\n      } catch (error) {\n        reject(error);\n      }\n      resolve(profile);\n      return;\n    }\n\n    if (tokenFileUrl) {\n      fetchPrivate(tokenFileUrl)\n        .then(response => response.text())\n        .then(responseText => JSON.parse(responseText))\n        .then(responseJson => {\n          const tokenRecords = responseJson;\n          const profile = extractProfile(tokenRecords[0].token, publicKeyOrAddress);\n          resolve(profile);\n        })\n        .catch(error => {\n          Logger.error(\n            `resolveZoneFileToProfile: error fetching token file ${tokenFileUrl}: ${error}`\n          );\n          reject(error);\n        });\n    } else {\n      Logger.debug('Token file url not found. Resolving to blank profile.');\n      resolve({});\n    }\n  });\n}\n"],"names":["schemaDefinition","type","properties","optional","Profile","profile","_profile","Object","assign","toJSON","toToken","privateKey","signProfileToken","validateSchema","strict","inspector","fromToken","token","publicKeyOrAddress","extractProfile","makeZoneFile","domainName","tokenFileURL","makeProfileZoneFile","Person","fromLegacyFormat","legacyProfile","getPersonFromLegacyFormat","name","givenName","familyName","description","avatarUrl","verifiedAccounts","address","birthDate","connections","organizations","getName","getGivenName","getFamilyName","getDescription","getAvatarUrl","verifications","getVerifiedAccounts","getAddress","getBirthDate","getConnections","getOrganizations","origin","tokenFileUrl","includes","Error","urlScheme","split","urlParts","domain","pathname","slice","join","zoneFile","$origin","$ttl","uri","priority","weight","target","zoneFileTemplate","getTokenFileUrl","zoneFileJson","hasOwnProperty","Array","isArray","length","firstUriRecord","startsWith","resolveZoneFileToProfile","Promise","resolve","reject","parseZoneFile","e","keys","JSON","parse","error","fetchPrivate","then","response","text","responseText","responseJson","tokenRecords","Logger","debug"],"mappings":"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"}