/// <reference types="node" />
import { ec as EC, BNInput } from 'elliptic';
export declare class SECP256K1Client {
    static ec: EC;
    static algorithmName: string;
    constructor();
    static loadPrivateKey(rawPrivateKey: string): EC.KeyPair;
    static loadPublicKey(rawPublicKey: string | Buffer): EC.KeyPair;
    static derivePublicKey(privateKey: string, compressed?: boolean): string;
    static signHash(signingInputHash: string | Buffer, rawPrivateKey: string, format?: string): string;
    static loadSignature(joseSignature: string | Buffer): Buffer;
    static verifyHash(signingInputHash: BNInput, derSignatureBuffer: string | Buffer, rawPublicKey: string | Buffer): boolean;
}
