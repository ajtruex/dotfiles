var GLOBAL_DETECTION_CACHE_KEY = '_blockstackDidCheckEchoReply';
var ECHO_REPLY_PARAM = 'echoReply';
var AUTH_CONTINUATION_PARAM = 'authContinuation';

function getQueryStringParams(query) {
  if (!query) {
    return {};
  }

  var trimmed = /^[?#]/.test(query) ? query.slice(1) : query;
  return trimmed.split('&').reduce(function (params, param) {
    var _param$split = param.split('='),
        key = _param$split[0],
        value = _param$split[1];

    params[key] = value ? decodeURIComponent(value.replace(/\+/g, ' ')) : '';
    return params;
  }, {});
}

function protocolEchoReplyDetection() {
  var globalScope;

  if (typeof self !== 'undefined') {
    globalScope = self;
  } else if (typeof window !== 'undefined') {
    globalScope = window;
  } else {
    return false;
  }

  if (!globalScope.location || !globalScope.localStorage) {
    return false;
  }

  var existingDetection = globalScope[GLOBAL_DETECTION_CACHE_KEY];

  if (typeof existingDetection === 'boolean') {
    return existingDetection;
  }

  var searchParams = getQueryStringParams(globalScope.location.search);
  var echoReplyParam = searchParams[ECHO_REPLY_PARAM];

  if (echoReplyParam) {
    globalScope[GLOBAL_DETECTION_CACHE_KEY] = true;
    var echoReplyKey = "echo-reply-" + echoReplyParam;
    globalScope.localStorage.setItem(echoReplyKey, 'success');
    globalScope.setTimeout(function () {
      var authContinuationParam = searchParams[AUTH_CONTINUATION_PARAM];
      globalScope.location.href = authContinuationParam;
    }, 10);
    return true;
  }

  return false;
}

export { protocolEchoReplyDetection };
//# sourceMappingURL=protocolEchoDetection.esm.js.map
