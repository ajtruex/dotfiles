{"version":3,"file":"dids.esm.js","sources":["../src/dids.ts"],"sourcesContent":["import { InvalidDIDError } from '@stacks/common';\n\n/**\n * @ignore\n */\nexport function makeDIDFromAddress(address: string) {\n  return `did:btc-addr:${address}`;\n}\n\n/**\n * @ignore\n */\nexport function makeDIDFromPublicKey(publicKey: string) {\n  return `did:ecdsa-pub:${publicKey}`;\n}\n\n/**\n * @ignore\n */\nexport function getDIDType(decentralizedID: string) {\n  const didParts = decentralizedID.split(':');\n\n  if (didParts.length !== 3) {\n    throw new InvalidDIDError('Decentralized IDs must have 3 parts');\n  }\n\n  if (didParts[0].toLowerCase() !== 'did') {\n    throw new InvalidDIDError('Decentralized IDs must start with \"did\"');\n  }\n\n  return didParts[1].toLowerCase();\n}\n\n/**\n * @ignore\n */\nexport function getAddressFromDID(decentralizedID?: string): string | undefined {\n  if (decentralizedID) {\n    const didType = getDIDType(decentralizedID);\n    if (didType === 'btc-addr') {\n      return decentralizedID.split(':')[2];\n    } else {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n\n/*\nexport function getPublicKeyOrAddressFromDID(decentralizedID) {\n  const didParts = decentralizedID.split(':')\n\n  if (didParts.length !== 3) {\n    throw new InvalidDIDError('Decentralized IDs must have 3 parts')\n  }\n\n  if (didParts[0].toLowerCase() !== 'did') {\n    throw new InvalidDIDError('Decentralized IDs must start with \"did\"')\n  }\n\n  if (didParts[1].toLowerCase() === 'ecdsa-pub') {\n    return didParts[2]\n  } else if (didParts[1].toLowerCase() === 'btc-addr') {\n    return didParts[2]\n  } else {\n    throw new InvalidDIDError('Decentralized ID format not supported')\n  }\n}\n*/\n"],"names":["makeDIDFromAddress","address","makeDIDFromPublicKey","publicKey","getDIDType","decentralizedID","didParts","split","length","InvalidDIDError","toLowerCase","getAddressFromDID","didType","undefined"],"mappings":";;SAKgBA,mBAAmBC;AACjC,2BAAuBA,OAAvB;AACD;SAKeC,qBAAqBC;AACnC,4BAAwBA,SAAxB;AACD;SAKeC,WAAWC;AACzB,MAAMC,QAAQ,GAAGD,eAAe,CAACE,KAAhB,CAAsB,GAAtB,CAAjB;;AAEA,MAAID,QAAQ,CAACE,MAAT,KAAoB,CAAxB,EAA2B;AACzB,UAAM,IAAIC,eAAJ,CAAoB,qCAApB,CAAN;AACD;;AAED,MAAIH,QAAQ,CAAC,CAAD,CAAR,CAAYI,WAAZ,OAA8B,KAAlC,EAAyC;AACvC,UAAM,IAAID,eAAJ,CAAoB,yCAApB,CAAN;AACD;;AAED,SAAOH,QAAQ,CAAC,CAAD,CAAR,CAAYI,WAAZ,EAAP;AACD;SAKeC,kBAAkBN;AAChC,MAAIA,eAAJ,EAAqB;AACnB,QAAMO,OAAO,GAAGR,UAAU,CAACC,eAAD,CAA1B;;AACA,QAAIO,OAAO,KAAK,UAAhB,EAA4B;AAC1B,aAAOP,eAAe,CAACE,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAP;AACD,KAFD,MAEO;AACL,aAAOM,SAAP;AACD;AACF;;AACD,SAAOA,SAAP;AACD;;;;"}