{"version":3,"file":"protocolEchoDetection.esm.js","sources":["../src/protocolEchoDetection.ts"],"sourcesContent":["/**\n * This logic is in a separate file with no dependencies so that it can be\n * loaded and executed as soon as possible to fulfill the purpose of the protocol\n * detection technique. The effectiveness of this is obviously subject to how web\n * apps bundle/consume the blockstack.js lib.\n */\n\nconst GLOBAL_DETECTION_CACHE_KEY = '_blockstackDidCheckEchoReply';\nconst ECHO_REPLY_PARAM = 'echoReply';\nconst AUTH_CONTINUATION_PARAM = 'authContinuation';\n\nfunction getQueryStringParams(query: string): Record<string, string> {\n  if (!query) {\n    return {};\n  }\n  // Trim a starting `?` character if exists\n  const trimmed = /^[?#]/.test(query) ? query.slice(1) : query;\n  return trimmed.split('&').reduce((params, param) => {\n    const [key, value] = param.split('=');\n    params[key] = value ? decodeURIComponent(value.replace(/\\+/g, ' ')) : '';\n    return params;\n  }, {} as Record<string, string>);\n}\n\n/**\n * Checks if the current window location URL contains an 'echoReply' parameter\n * which indicates that this page was only opened to signal back to the originating\n * tab that the protocol handler is installed.\n * If found, then localStorage events are used to notify the other tab,\n * and this page is redirected back to the Blockstack authenticator URL.\n * This function caches its result and will not trigger multiple redirects when\n * invoked multiple times.\n * @returns True if detected and the page will be automatically redirected.\n * @hidden\n */\nexport function protocolEchoReplyDetection(): boolean {\n  // Check that the `window` APIs exist\n  let globalScope: Window;\n  if (typeof self !== 'undefined') {\n    globalScope = self;\n  } else if (typeof window !== 'undefined') {\n    globalScope = window;\n  } else {\n    // Exit detection function - we are not running in a browser environment.\n    return false;\n  }\n\n  if (!globalScope.location || !globalScope.localStorage) {\n    // Exit detection function - we are not running in a browser environment.\n    return false;\n  }\n\n  // Avoid performing the check twice and triggered multiple redirect timers.\n  const existingDetection = (globalScope as any)[GLOBAL_DETECTION_CACHE_KEY];\n  if (typeof existingDetection === 'boolean') {\n    return existingDetection;\n  }\n\n  const searchParams = getQueryStringParams(globalScope.location.search);\n  const echoReplyParam = searchParams[ECHO_REPLY_PARAM];\n  if (echoReplyParam) {\n    (globalScope as any)[GLOBAL_DETECTION_CACHE_KEY] = true;\n\n    // Use localStorage to notify originated tab that protocol handler is available and working.\n    const echoReplyKey = `echo-reply-${echoReplyParam}`;\n\n    // Set the echo-reply result in localStorage for the other window to see.\n    globalScope.localStorage.setItem(echoReplyKey, 'success');\n\n    // Redirect back to the localhost auth url, as opposed to another protocol launch.\n    // This will re-use the same tab rather than creating another useless one.\n    globalScope.setTimeout(() => {\n      const authContinuationParam = searchParams[AUTH_CONTINUATION_PARAM];\n      globalScope.location.href = authContinuationParam;\n    }, 10);\n\n    return true;\n  }\n\n  return false;\n}\n"],"names":["GLOBAL_DETECTION_CACHE_KEY","ECHO_REPLY_PARAM","AUTH_CONTINUATION_PARAM","getQueryStringParams","query","trimmed","test","slice","split","reduce","params","param","key","value","decodeURIComponent","replace","protocolEchoReplyDetection","globalScope","self","window","location","localStorage","existingDetection","searchParams","search","echoReplyParam","echoReplyKey","setItem","setTimeout","authContinuationParam","href"],"mappings":"AAOA,IAAMA,0BAA0B,GAAG,8BAAnC;AACA,IAAMC,gBAAgB,GAAG,WAAzB;AACA,IAAMC,uBAAuB,GAAG,kBAAhC;;AAEA,SAASC,oBAAT,CAA8BC,KAA9B;AACE,MAAI,CAACA,KAAL,EAAY;AACV,WAAO,EAAP;AACD;;AAED,MAAMC,OAAO,GAAG,QAAQC,IAAR,CAAaF,KAAb,IAAsBA,KAAK,CAACG,KAAN,CAAY,CAAZ,CAAtB,GAAuCH,KAAvD;AACA,SAAOC,OAAO,CAACG,KAAR,CAAc,GAAd,EAAmBC,MAAnB,CAA0B,UAACC,MAAD,EAASC,KAAT;uBACVA,KAAK,CAACH,KAAN,CAAY,GAAZ;QAAdI;QAAKC;;AACZH,IAAAA,MAAM,CAACE,GAAD,CAAN,GAAcC,KAAK,GAAGC,kBAAkB,CAACD,KAAK,CAACE,OAAN,CAAc,KAAd,EAAqB,GAArB,CAAD,CAArB,GAAmD,EAAtE;AACA,WAAOL,MAAP;AACD,GAJM,EAIJ,EAJI,CAAP;AAKD;;SAaeM;AAEd,MAAIC,WAAJ;;AACA,MAAI,OAAOC,IAAP,KAAgB,WAApB,EAAiC;AAC/BD,IAAAA,WAAW,GAAGC,IAAd;AACD,GAFD,MAEO,IAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACxCF,IAAAA,WAAW,GAAGE,MAAd;AACD,GAFM,MAEA;AAEL,WAAO,KAAP;AACD;;AAED,MAAI,CAACF,WAAW,CAACG,QAAb,IAAyB,CAACH,WAAW,CAACI,YAA1C,EAAwD;AAEtD,WAAO,KAAP;AACD;;AAGD,MAAMC,iBAAiB,GAAIL,WAAmB,CAACjB,0BAAD,CAA9C;;AACA,MAAI,OAAOsB,iBAAP,KAA6B,SAAjC,EAA4C;AAC1C,WAAOA,iBAAP;AACD;;AAED,MAAMC,YAAY,GAAGpB,oBAAoB,CAACc,WAAW,CAACG,QAAZ,CAAqBI,MAAtB,CAAzC;AACA,MAAMC,cAAc,GAAGF,YAAY,CAACtB,gBAAD,CAAnC;;AACA,MAAIwB,cAAJ,EAAoB;AACjBR,IAAAA,WAAmB,CAACjB,0BAAD,CAAnB,GAAkD,IAAlD;AAGD,QAAM0B,YAAY,mBAAiBD,cAAnC;AAGAR,IAAAA,WAAW,CAACI,YAAZ,CAAyBM,OAAzB,CAAiCD,YAAjC,EAA+C,SAA/C;AAIAT,IAAAA,WAAW,CAACW,UAAZ,CAAuB;AACrB,UAAMC,qBAAqB,GAAGN,YAAY,CAACrB,uBAAD,CAA1C;AACAe,MAAAA,WAAW,CAACG,QAAZ,CAAqBU,IAArB,GAA4BD,qBAA5B;AACD,KAHD,EAGG,EAHH;AAKA,WAAO,IAAP;AACD;;AAED,SAAO,KAAP;AACD;;;;"}