{"version":3,"file":"sha2Hash.esm.js","sources":["../src/sha2Hash.ts"],"sourcesContent":["import { sha256, sha512 } from 'sha.js';\nimport { getCryptoLib } from './cryptoUtils';\n\ntype NodeCryptoCreateHash = typeof import('crypto').createHash;\n\nexport interface Sha2Hash {\n  digest(data: Buffer, algorithm?: 'sha256' | 'sha512'): Promise<Buffer>;\n}\n\nexport class NodeCryptoSha2Hash {\n  createHash: NodeCryptoCreateHash;\n\n  constructor(createHash: NodeCryptoCreateHash) {\n    this.createHash = createHash;\n  }\n\n  async digest(data: Buffer, algorithm = 'sha256'): Promise<Buffer> {\n    try {\n      const result = this.createHash(algorithm)\n        .update(data)\n        .digest();\n      return Promise.resolve(result);\n    } catch (error) {\n      console.log(error);\n      console.log(\n        `Error performing ${algorithm} digest with Node.js 'crypto.createHash', falling back to JS implementation.`\n      );\n      return Promise.resolve(algorithm === 'sha256' ? hashSha256Sync(data) : hashSha512Sync(data));\n    }\n  }\n}\n\nexport class WebCryptoSha2Hash implements Sha2Hash {\n  subtleCrypto: SubtleCrypto;\n\n  constructor(subtleCrypto: SubtleCrypto) {\n    this.subtleCrypto = subtleCrypto;\n  }\n\n  async digest(data: Buffer, algorithm = 'sha256'): Promise<Buffer> {\n    let algo: string;\n    if (algorithm === 'sha256') {\n      algo = 'SHA-256';\n    } else if (algorithm === 'sha512') {\n      algo = 'SHA-512';\n    } else {\n      throw new Error(`Unsupported hash algorithm ${algorithm}`);\n    }\n    try {\n      const hash = await this.subtleCrypto.digest(algo, data);\n      return Buffer.from(hash);\n    } catch (error) {\n      console.log(error);\n      console.log(\n        `Error performing ${algorithm} digest with WebCrypto, falling back to JS implementation.`\n      );\n      return Promise.resolve(algorithm === 'sha256' ? hashSha256Sync(data) : hashSha512Sync(data));\n    }\n  }\n}\n\nexport async function createSha2Hash(): Promise<Sha2Hash> {\n  const cryptoLib = await getCryptoLib();\n  if (cryptoLib.name === 'subtleCrypto') {\n    return new WebCryptoSha2Hash(cryptoLib.lib);\n  } else {\n    return new NodeCryptoSha2Hash(cryptoLib.lib.createHash);\n  }\n}\n\nexport function hashSha256Sync(data: Buffer) {\n  const hash = new sha256();\n  hash.update(data);\n  return hash.digest();\n}\n\nexport function hashSha512Sync(data: Buffer) {\n  const hash = new sha512();\n  hash.update(data);\n  return hash.digest();\n}\n"],"names":["NodeCryptoSha2Hash","createHash","digest","data","algorithm","result","update","Promise","resolve","console","log","hashSha256Sync","hashSha512Sync","WebCryptoSha2Hash","subtleCrypto","algo","Error","hash","Buffer","from","createSha2Hash","getCryptoLib","cryptoLib","name","lib","sha256","sha512"],"mappings":"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"}