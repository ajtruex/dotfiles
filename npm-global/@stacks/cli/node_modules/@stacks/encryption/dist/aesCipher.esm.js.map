{"version":3,"file":"aesCipher.esm.js","sources":["../src/aesCipher.ts"],"sourcesContent":["import { getCryptoLib } from './cryptoUtils';\n\ntype NodeCryptoCreateCipher = typeof import('crypto').createCipheriv;\ntype NodeCryptoCreateDecipher = typeof import('crypto').createDecipheriv;\n\nexport type CipherAlgorithm = 'aes-256-cbc' | 'aes-128-cbc';\n\nexport interface AesCipher {\n  encrypt(algorithm: CipherAlgorithm, key: Buffer, iv: Buffer, data: Buffer): Promise<Buffer>;\n\n  decrypt(algorithm: CipherAlgorithm, key: Buffer, iv: Buffer, data: Buffer): Promise<Buffer>;\n}\n\nexport class NodeCryptoAesCipher implements AesCipher {\n  createCipher: NodeCryptoCreateCipher;\n\n  createDecipher: NodeCryptoCreateDecipher;\n\n  constructor(createCipher: NodeCryptoCreateCipher, createDecipher: NodeCryptoCreateDecipher) {\n    this.createCipher = createCipher;\n    this.createDecipher = createDecipher;\n  }\n\n  async encrypt(\n    algorithm: CipherAlgorithm,\n    key: Buffer,\n    iv: Buffer,\n    data: Buffer\n  ): Promise<Buffer> {\n    if (algorithm !== 'aes-128-cbc' && algorithm !== 'aes-256-cbc') {\n      throw new Error(`Unsupported cipher algorithm \"${algorithm}\"`);\n    }\n    const cipher = this.createCipher(algorithm, key, iv);\n    const result = Buffer.concat([cipher.update(data), cipher.final()]);\n    return Promise.resolve(result);\n  }\n\n  async decrypt(\n    algorithm: CipherAlgorithm,\n    key: Buffer,\n    iv: Buffer,\n    data: Buffer\n  ): Promise<Buffer> {\n    if (algorithm !== 'aes-128-cbc' && algorithm !== 'aes-256-cbc') {\n      throw new Error(`Unsupported cipher algorithm \"${algorithm}\"`);\n    }\n    const cipher = this.createDecipher(algorithm, key, iv);\n    const result = Buffer.concat([cipher.update(data), cipher.final()]);\n    return Promise.resolve(result);\n  }\n}\n\nexport class WebCryptoAesCipher implements AesCipher {\n  subtleCrypto: SubtleCrypto;\n\n  constructor(subtleCrypto: SubtleCrypto) {\n    this.subtleCrypto = subtleCrypto;\n  }\n\n  async encrypt(\n    algorithm: CipherAlgorithm,\n    key: Buffer,\n    iv: Buffer,\n    data: Buffer\n  ): Promise<Buffer> {\n    let algo: string;\n    let length: number;\n    if (algorithm === 'aes-128-cbc') {\n      algo = 'AES-CBC';\n      length = 128;\n    } else if (algorithm === 'aes-256-cbc') {\n      algo = 'AES-CBC';\n      length = 256;\n    } else {\n      throw new Error(`Unsupported cipher algorithm \"${algorithm}\"`);\n    }\n    const cryptoKey = await this.subtleCrypto.importKey('raw', key, { name: algo, length }, false, [\n      'encrypt',\n    ]);\n    const result = await this.subtleCrypto.encrypt({ name: algo, iv }, cryptoKey, data);\n    return Buffer.from(result);\n  }\n\n  async decrypt(\n    algorithm: CipherAlgorithm,\n    key: Buffer,\n    iv: Buffer,\n    data: Buffer\n  ): Promise<Buffer> {\n    let algo: string;\n    let length: number;\n    if (algorithm === 'aes-128-cbc') {\n      algo = 'AES-CBC';\n      length = 128;\n    } else if (algorithm === 'aes-256-cbc') {\n      algo = 'AES-CBC';\n      length = 256;\n    } else {\n      throw new Error(`Unsupported cipher algorithm \"${algorithm}\"`);\n    }\n    const cryptoKey = await this.subtleCrypto.importKey('raw', key, { name: algo, length }, false, [\n      'decrypt',\n    ]);\n    const result = await this.subtleCrypto.decrypt({ name: algo, iv }, cryptoKey, data);\n    return Buffer.from(result);\n  }\n}\n\nexport async function createCipher(): Promise<AesCipher> {\n  const cryptoLib = await getCryptoLib();\n  if (cryptoLib.name === 'subtleCrypto') {\n    return new WebCryptoAesCipher(cryptoLib.lib);\n  } else {\n    return new NodeCryptoAesCipher(cryptoLib.lib.createCipheriv, cryptoLib.lib.createDecipheriv);\n  }\n}\n"],"names":["NodeCryptoAesCipher","createCipher","createDecipher","encrypt","algorithm","key","iv","data","Error","cipher","result","Buffer","concat","update","Promise","resolve","decrypt","WebCryptoAesCipher","subtleCrypto","algo","length","importKey","name","cryptoKey","from","getCryptoLib","cryptoLib","lib","createCipheriv","createDecipheriv"],"mappings":"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"}