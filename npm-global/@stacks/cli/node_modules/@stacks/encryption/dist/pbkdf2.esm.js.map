{"version":3,"file":"pbkdf2.esm.js","sources":["../src/pbkdf2.ts"],"sourcesContent":["import { getCryptoLib } from './cryptoUtils';\n\nexport type Pbkdf2Digests = 'sha512' | 'sha256';\n\nexport interface Pbkdf2 {\n  derive(\n    password: string,\n    salt: Buffer,\n    iterations: number,\n    keyLength: number,\n    digest: Pbkdf2Digests\n  ): Promise<Buffer>;\n}\n\ntype NodePbkdf2Fn = typeof import('crypto').pbkdf2;\n\nexport class NodeCryptoPbkdf2 implements Pbkdf2 {\n  nodePbkdf2: NodePbkdf2Fn;\n\n  constructor(nodePbkdf2: NodePbkdf2Fn) {\n    this.nodePbkdf2 = nodePbkdf2;\n  }\n\n  async derive(\n    password: string,\n    salt: Buffer,\n    iterations: number,\n    keyLength: number,\n    digest: Pbkdf2Digests\n  ): Promise<Buffer> {\n    if (digest !== 'sha512' && digest !== 'sha256') {\n      throw new Error(`Unsupported digest \"${digest}\" for Pbkdf2`);\n    }\n    return new Promise((resolve, reject) => {\n      this.nodePbkdf2(password, salt, iterations, keyLength, digest, (error, result) => {\n        if (error) {\n          reject(error);\n        }\n        resolve(result);\n      });\n    });\n  }\n}\n\nexport class WebCryptoPbkdf2 implements Pbkdf2 {\n  subtleCrypto: SubtleCrypto;\n\n  constructor(subtleCrypto: SubtleCrypto) {\n    this.subtleCrypto = subtleCrypto;\n  }\n\n  async derive(\n    password: string,\n    salt: Buffer,\n    iterations: number,\n    keyLength: number,\n    digest: Pbkdf2Digests\n  ): Promise<Buffer> {\n    let algo: string;\n    if (digest === 'sha256') {\n      algo = 'SHA-256';\n    } else if (digest === 'sha512') {\n      algo = 'SHA-512';\n    } else {\n      throw new Error(`Unsupported Pbkdf2 digest algorithm \"${digest}\"`);\n    }\n    let result: ArrayBuffer;\n    const passwordBytes = Buffer.from(password, 'utf8');\n    try {\n      const key = await this.subtleCrypto.importKey('raw', passwordBytes, 'PBKDF2', false, [\n        'deriveBits',\n      ]);\n      result = await this.subtleCrypto.deriveBits(\n        {\n          name: 'PBKDF2',\n          salt,\n          iterations,\n          hash: { name: algo },\n        },\n        key,\n        keyLength * 8\n      );\n    } catch (error) {\n      // Browser appears to support WebCrypto but missing pbkdf2 support.\n      const partialWebCrypto = new WebCryptoPartialPbkdf2(this.subtleCrypto);\n      return partialWebCrypto.derive(password, salt, iterations, keyLength, digest);\n    }\n    return Buffer.from(result);\n  }\n}\n\nexport class WebCryptoPartialPbkdf2 implements Pbkdf2 {\n  // An async implementation for browsers that support WebCrypto hmac\n  // but not pbkdf2. Extracted from crypto-browserify/pbkdf2 and modified to\n  // use WebCrypto for hmac operations.\n  // Original: https://github.com/crypto-browserify/pbkdf2/tree/v3.0.17/lib\n\n  subtleCrypto: SubtleCrypto;\n\n  constructor(subtleCrypto: SubtleCrypto) {\n    this.subtleCrypto = subtleCrypto;\n  }\n\n  async derive(\n    password: string,\n    salt: Buffer,\n    iterations: number,\n    keyLength: number,\n    digest: Pbkdf2Digests\n  ): Promise<Buffer> {\n    if (digest !== 'sha512' && digest !== 'sha256') {\n      throw new Error(`Unsupported digest \"${digest}\" for Pbkdf2`);\n    }\n    const key = Buffer.from(password, 'utf8');\n    const algo = digest === 'sha512' ? 'SHA-512' : 'SHA-256';\n    const algoOpts = { name: 'HMAC', hash: algo };\n    const hmacDigest = (key: ArrayBuffer, data: ArrayBuffer) =>\n      this.subtleCrypto\n        .importKey('raw', key, algoOpts, true, ['sign'])\n        .then(cryptoKey => this.subtleCrypto.sign(algoOpts, cryptoKey, data))\n        .then(result => new Uint8Array(result));\n\n    const DK = new Uint8Array(keyLength);\n    const saltLength = salt.length;\n    const block1 = new Uint8Array(saltLength + 4);\n    block1.set(salt);\n    let destPos = 0;\n    const hLen = digest === 'sha512' ? 64 : 32;\n    const l = Math.ceil(keyLength / hLen);\n\n    function writeUInt32BE(data: Uint8Array, value: number, offset: number) {\n      value = +value;\n      offset >>>= 0;\n      data[offset] = value >>> 24;\n      data[offset + 1] = value >>> 16;\n      data[offset + 2] = value >>> 8;\n      data[offset + 3] = value & 0xff;\n      return offset + 4;\n    }\n\n    for (let i = 1; i <= l; i++) {\n      writeUInt32BE(block1, i, saltLength);\n      // eslint-disable-next-line no-await-in-loop\n      const T = await hmacDigest(key, block1);\n      let U = T;\n      for (let j = 1; j < iterations; j++) {\n        // eslint-disable-next-line no-await-in-loop\n        U = await hmacDigest(key, U);\n        for (let k = 0; k < hLen; k++) {\n          T[k] ^= U[k];\n        }\n      }\n      DK.set(T.subarray(0, DK.byteLength - destPos), destPos);\n      destPos += hLen;\n    }\n    return Buffer.from(DK.buffer);\n  }\n}\n\nexport async function createPbkdf2(): Promise<Pbkdf2> {\n  const cryptoLib = await getCryptoLib();\n  if (cryptoLib.name === 'subtleCrypto') {\n    return new WebCryptoPbkdf2(cryptoLib.lib);\n  } else {\n    return new NodeCryptoPbkdf2(cryptoLib.lib.pbkdf2);\n  }\n}\n"],"names":["NodeCryptoPbkdf2","nodePbkdf2","derive","password","salt","iterations","keyLength","digest","Error","Promise","resolve","reject","error","result","WebCryptoPbkdf2","subtleCrypto","algo","passwordBytes","Buffer","from","importKey","key","deriveBits","name","hash","partialWebCrypto","WebCryptoPartialPbkdf2","writeUInt32BE","data","value","offset","algoOpts","hmacDigest","then","cryptoKey","sign","Uint8Array","DK","saltLength","length","block1","set","destPos","hLen","l","Math","ceil","i","T","U","j","k","subarray","byteLength","buffer","createPbkdf2","getCryptoLib","cryptoLib","lib","pbkdf2"],"mappings":"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"}