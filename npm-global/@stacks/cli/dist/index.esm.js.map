{"version":3,"file":"index.esm.js","sources":["../src/index.ts"],"sourcesContent":["#!/usr/bin/env node\n\nimport { CLIMain } from './cli';\n\nexport { CLIMain };\n// implement just enough of window to be useful to blockstack.js.\n// do this here, so we can be *sure* it's in RAM.\nconst localStorageRAM: Record<string, any> = {};\n\n// @ts-ignore\ndeclare let global: any;\n\nglobal['window'] = {\n  location: {\n    origin: 'localhost',\n  },\n  localStorage: {\n    getItem: function(itemName: string) {\n      return localStorageRAM[itemName];\n    },\n    setItem: function(itemName: string, itemValue: any) {\n      localStorageRAM[itemName] = itemValue;\n    },\n    removeItem: function(itemName: string) {\n      delete localStorageRAM[itemName];\n    },\n  },\n};\n\nglobal['localStorage'] = global['window'].localStorage;\n\nCLIMain();\n"],"names":["localStorageRAM","global","location","origin","localStorage","getItem","itemName","setItem","itemValue","removeItem","CLIMain"],"mappings":";;;AAOA,IAAMA,eAAe,GAAwB,EAA7C;AAKAC,MAAM,CAAC,QAAD,CAAN,GAAmB;AACjBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,EAAE;AADA,GADO;AAIjBC,EAAAA,YAAY,EAAE;AACZC,IAAAA,OAAO,EAAE,iBAASC,QAAT;AACP,aAAON,eAAe,CAACM,QAAD,CAAtB;AACD,KAHW;AAIZC,IAAAA,OAAO,EAAE,iBAASD,QAAT,EAA2BE,SAA3B;AACPR,MAAAA,eAAe,CAACM,QAAD,CAAf,GAA4BE,SAA5B;AACD,KANW;AAOZC,IAAAA,UAAU,EAAE,oBAASH,QAAT;AACV,aAAON,eAAe,CAACM,QAAD,CAAtB;AACD;AATW;AAJG,CAAnB;AAiBAL,MAAM,CAAC,cAAD,CAAN,GAAyBA,MAAM,CAAC,QAAD,CAAN,CAAiBG,YAA1C;AAEAM,OAAO"}