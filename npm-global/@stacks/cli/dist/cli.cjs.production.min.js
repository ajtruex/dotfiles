"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("blockstack"),t=require("bitcoinjs-lib"),n=require("process"),r=require("fs"),a=require("winston"),o=require("cors"),i=require("bn.js"),s=require("crypto"),c=require("bip39"),p=require("express"),u=require("path"),l=require("inquirer"),d=require("node-fetch"),f=require("@stacks/transactions"),h=require("@stacks/network"),m=require("cross-fetch"),y=require("@stacks/stacking"),g=require("@stacks/blockchain-api-client"),b=require("url"),k=require("readline"),w=require("stream"),v=require("jsontokens"),_=require("ajv"),x=require("bip32"),A=require("blockstack/lib/network"),I=require("@stacks/storage");function E(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var P=E(e),S=E(o),T=E(i),N=E(p),$=E(d),B=E(m),U=E(_);function C(e,t,n,r,a,o,i){try{var s=e[o](i),c=s.value}catch(e){return void n(e)}s.done?t(c):Promise.resolve(c).then(r,a)}function R(e){return function(){var t=this,n=arguments;return new Promise((function(r,a){var o=e.apply(t,n);function i(e){C(o,r,a,i,s,"next",e)}function s(e){C(o,r,a,i,s,"throw",e)}i(void 0)}))}}function D(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}function K(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function G(e,t){var n;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(n=function(e,t){if(e){if("string"==typeof e)return K(e,void 0);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?K(e,void 0):void 0}}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var r=0;return function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}return(n=e[Symbol.iterator]()).next.bind(n)}function O(e,t){return e(t={exports:{}},t.exports),t.exports}var M=O((function(e){var t=function(e){var t=Object.prototype,n=t.hasOwnProperty,r="function"==typeof Symbol?Symbol:{},a=r.iterator||"@@iterator",o=r.asyncIterator||"@@asyncIterator",i=r.toStringTag||"@@toStringTag";function s(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{s({},"")}catch(e){s=function(e,t,n){return e[t]=n}}function c(e,t,n,r){var a=Object.create((t&&t.prototype instanceof l?t:l).prototype),o=new x(r||[]);return a._invoke=function(e,t,n){var r="suspendedStart";return function(a,o){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===a)throw o;return{value:void 0,done:!0}}for(n.method=a,n.arg=o;;){var i=n.delegate;if(i){var s=w(i,n);if(s){if(s===u)continue;return s}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===r)throw r="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r="executing";var c=p(e,t,n);if("normal"===c.type){if(r=n.done?"completed":"suspendedYield",c.arg===u)continue;return{value:c.arg,done:n.done}}"throw"===c.type&&(r="completed",n.method="throw",n.arg=c.arg)}}}(e,n,o),a}function p(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}e.wrap=c;var u={};function l(){}function d(){}function f(){}var h={};h[a]=function(){return this};var m=Object.getPrototypeOf,y=m&&m(m(A([])));y&&y!==t&&n.call(y,a)&&(h=y);var g=f.prototype=l.prototype=Object.create(h);function b(e){["next","throw","return"].forEach((function(t){s(e,t,(function(e){return this._invoke(t,e)}))}))}function k(e,t){var r;this._invoke=function(a,o){function i(){return new t((function(r,i){!function r(a,o,i,s){var c=p(e[a],e,o);if("throw"!==c.type){var u=c.arg,l=u.value;return l&&"object"==typeof l&&n.call(l,"__await")?t.resolve(l.__await).then((function(e){r("next",e,i,s)}),(function(e){r("throw",e,i,s)})):t.resolve(l).then((function(e){u.value=e,i(u)}),(function(e){return r("throw",e,i,s)}))}s(c.arg)}(a,o,r,i)}))}return r=r?r.then(i,i):i()}}function w(e,t){var n=e.iterator[t.method];if(void 0===n){if(t.delegate=null,"throw"===t.method){if(e.iterator.return&&(t.method="return",t.arg=void 0,w(e,t),"throw"===t.method))return u;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return u}var r=p(n,e.iterator,t.arg);if("throw"===r.type)return t.method="throw",t.arg=r.arg,t.delegate=null,u;var a=r.arg;return a?a.done?(t[e.resultName]=a.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,u):a:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,u)}function v(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function _(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function x(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(v,this),this.reset(!0)}function A(e){if(e){var t=e[a];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var r=-1,o=function t(){for(;++r<e.length;)if(n.call(e,r))return t.value=e[r],t.done=!1,t;return t.value=void 0,t.done=!0,t};return o.next=o}}return{next:I}}function I(){return{value:void 0,done:!0}}return d.prototype=g.constructor=f,f.constructor=d,d.displayName=s(f,i,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===d||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,f):(e.__proto__=f,s(e,i,"GeneratorFunction")),e.prototype=Object.create(g),e},e.awrap=function(e){return{__await:e}},b(k.prototype),k.prototype[o]=function(){return this},e.AsyncIterator=k,e.async=function(t,n,r,a,o){void 0===o&&(o=Promise);var i=new k(c(t,n,r,a),o);return e.isGeneratorFunction(n)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},b(g),s(g,i,"Generator"),g[a]=function(){return this},g.toString=function(){return"[object Generator]"},e.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var r=t.pop();if(r in e)return n.value=r,n.done=!1,n}return n.done=!0,n}},e.values=A,x.prototype={constructor:x,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(_),!e)for(var t in this)"t"===t.charAt(0)&&n.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function r(n,r){return i.type="throw",i.arg=e,t.next=n,r&&(t.method="next",t.arg=void 0),!!r}for(var a=this.tryEntries.length-1;a>=0;--a){var o=this.tryEntries[a],i=o.completion;if("root"===o.tryLoc)return r("end");if(o.tryLoc<=this.prev){var s=n.call(o,"catchLoc"),c=n.call(o,"finallyLoc");if(s&&c){if(this.prev<o.catchLoc)return r(o.catchLoc,!0);if(this.prev<o.finallyLoc)return r(o.finallyLoc)}else if(s){if(this.prev<o.catchLoc)return r(o.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return r(o.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var a=this.tryEntries[r];if(a.tryLoc<=this.prev&&n.call(a,"finallyLoc")&&this.prev<a.finallyLoc){var o=a;break}}o&&("break"===e||"continue"===e)&&o.tryLoc<=t&&t<=o.finallyLoc&&(o=null);var i=o?o.completion:{};return i.type=e,i.arg=t,o?(this.method="next",this.next=o.finallyLoc,u):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),u},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),_(n),u}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var a=r.arg;_(n)}return a}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,n){return this.delegate={iterator:A(e),resultName:t,nextLoc:n},"next"===this.method&&(this.arg=void 0),u}},e}(e.exports);try{regeneratorRuntime=t}catch(e){Function("r","regeneratorRuntime = r")(t)}})),Y="^([0-9a-z_.+-]{3,37})$",H="[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{1,35}",L="^("+H+")$",F="^ID-"+H+"$",z="^([0123456789ABCDEFGHJKMNPQRSTVWXYZ]+)$",W="^([0-9a-f]{64,66})$|^([0-9]+),([0-9a-f]{64,66},)*([0-9a-f]{64,66})$|^segwit:p2sh:([0-9]+),([0-9a-f]{64,66},)*([0-9a-f]{64,66})$|^nosign:[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{1,35}$",j="^http[s]?://.+$",Z="^([0-9a-z_+-]{1,37}).([0-9a-z_.+-]{3,37})$",Q={level:"info",handleExceptions:!0,timestamp:!0,stringify:!0,colorize:!0,json:!0},q={blockstackAPIUrl:"http://stacks-node-api.stacks.co",blockstackNodeUrl:"http://stacks-node-api.stacks.co",broadcastServiceUrl:"http://stacks-node-api.stacks.co/v2/transactions",utxoServiceUrl:"https://blockchain.info",logConfig:Q},J={blockstackAPIUrl:"http://localhost:16268",blockstackNodeUrl:"http://localhost:16264",broadcastServiceUrl:"http://localhost:16269",utxoServiceUrl:"http://localhost:18332",logConfig:Q,bitcoindPassword:"blockstacksystem",bitcoindUsername:"blockstack"},V={blockstackAPIUrl:"http://testnet-master.blockstack.org:20443",blockstackNodeUrl:"http://testnet-master.blockstack.org:20443",broadcastServiceUrl:"http://testnet-master.blockstack.org:20443/v2/transactions",utxoServiceUrl:"http://testnet-master.blockstack.org:18332",logConfig:Object.assign({},Q,{level:"debug"})},X={type:"object",properties:{announce:{type:"array",items:[{name:"message_hash",type:"string",realtype:"zonefile_hash",pattern:"^([0-9a-f]{40})$"},{name:"owner_key",type:"string",realtype:"private_key",pattern:""+W}],minItems:2,maxItems:2,help:'Broadcast a message on the blockchain for subscribers to read.  The `MESSAGE_HASH` argument must be the hash of a previously-announced zone file.  The `OWNER_KEY` used to sign the transaction must correspond to the Blockstack ID to which other users have already subscribed.  `OWNER_KEY` can be a single private key or a serialized multisig private key bundle.\n\nIf this command succeeds, it will print a transaction ID.  The rest of the Blockstack peer network will process it once the transaction reaches 7 confirmations.\n\nExamples:\n\n    $ # Tip: You can obtain the owner key with the get_owner_keys command\n    $ export OWNER_KEY="136ff26efa5db6f06b28f9c8c7a0216a1a52598045162abfe435d13036154a1b01"\n    $ stx announce 737c631c7c5d911c6617993c21fba731363f1cfe "$OWNER_KEY"\n    d51749aeec2803e91a2f8bdec8d3e413491fd816b4962372b214ab74acb0bba8\n\n    $ export OWNER_KEY="2,136ff26efa5db6f06b28f9c8c7a0216a1a52598045162abfe435d13036154a1b01,1885cba486a42960499d1f137ef3a475725ceb11f45d74631f9928280196f67401,2418981c7f3a91d4467a65a518e14fafa30e07e6879c11fab7106ea72b49a7cb01"\n    $ stx announce 737c631c7c5d911c6617993c21fba731363f1cfe "$OWNER_KEY"\n    8136a1114098893b28a693e8d84451abf99ee37ef8766f4bc59808eed76968c9\n\n',group:"Peer Services"},authenticator:{type:"array",items:[{name:"app_gaia_hub",type:"string",realtype:"url",pattern:j},{name:"backup_phrase",type:"string",realtype:"12_words_or_ciphertext",pattern:".+"},{name:"profile_gaia_hub",type:"string",realtype:"url",pattern:j},{name:"port",type:"string",realtype:"portnum",pattern:"^[0-9]+"}],minItems:2,maxItems:4,help:'Run an authentication endpoint for the set of names owned by the given backup phrase.  Send applications the given Gaia hub URL on sign-in, so the application will use it to read/write user data.\n\nYou can supply your encrypted backup phrase instead of the raw backup phrase.  If so, then you will be prompted for your password before any authentication takes place.\n\nExample:\n\n    $ export BACKUP_PHRASE="oak indicate inside poet please share dinner monitor glow hire source perfect"\n    $ export APP_GAIA_HUB="https://1.2.3.4"\n    $ export PROFILE_GAIA_HUB="https://hub.blockstack.org"\n    $ stx authenticator "$APP_GAIA_HUB" "$BACKUP_PHRASE" "$PROFILE_GAIA_HUB" 8888\n    Press Ctrl+C to exit\n    Authentication server started on 8888\n',group:"Authentication"},balance:{type:"array",items:[{name:"address",type:"string",realtype:"address",pattern:L+"|"+z}],minItems:1,maxItems:1,help:'Query the balance of an account.  Returns the balances of each kind of token that the account owns.  The balances will be in the *smallest possible units* of the token (i.e. satoshis for BTC, microStacks for Stacks, etc.).\n\nExample:\n\n    $ stx balance 16pm276FpJYpm7Dv3GEaRqTVvGPTdceoY4\n    {\n      "BTC": "123456"\n      "STACKS": "123456"\n    }\n    $ stx balance SPZY1V53Z4TVRHHW9Z7SFG8CZNRAG7BD8WJ6SXD0\n    {\n      "BTC": "123456"\n      "STACKS": "123456"\n    }\n',group:"Account Management"},can_stack:{type:"array",items:[{name:"amount",type:"string",realtype:"integer",pattern:"^[0-9]+$"},{name:"cycles",type:"string",realtype:"integer",pattern:"^[0-9]+$"},{name:"pox_address",type:"string",realtype:"address",pattern:""+L},{name:"stx_address",type:"string",realtype:"address",pattern:""+z}],minItems:4,maxItems:4,help:'Check if specified account can stack a number of Stacks tokens for given number of cycles.\n\nExample:\n\n    $ stx can_stack 10000000 20 16pm276FpJYpm7Dv3GEaRqTVvGPTdceoY4 SPZY1V53Z4TVRHHW9Z7SFG8CZNRAG7BD8WJ6SXD0\n    {\n      "eligible": true\n    }\n',group:"Account Management"},call_contract_func:{type:"array",items:[{name:"contract_address",type:"string",realtype:"address",pattern:""+z},{name:"contract_name",type:"string",realtype:"string",pattern:"^[a-zA-Z]([a-zA-Z0-9]|[-_])*$"},{name:"function_name",type:"string",realtype:"string",pattern:"^[a-zA-Z]([a-zA-Z0-9]|[-_!?])*$"},{name:"fee",type:"string",realtype:"integer",pattern:"^[0-9]+$"},{name:"nonce",type:"string",realtype:"integer",pattern:"^[0-9]+$"},{name:"payment_key",type:"string",realtype:"private_key",pattern:""+W}],minItems:6,maxItems:6,help:'Call a function in a deployed Clarity smart contract.\n\nIf the command succeeds, it prints out a transaction ID.\nExample:\n    $ export PAYMENT="bfeffdf57f29b0cc1fab9ea197bb1413da2561fe4b83e962c7f02fbbe2b1cd5401"\n    $ stx call_contract_func SPBMRFRPPGCDE3F384WCJPK8PQJGZ8K9QKK7F59X contract_name      contract_function 1 0 "$PAYMENT"\n    a9d387a925fb0ba7a725fb1e11f2c3f1647473699dd5a147c312e6453d233456\n\n',group:"Account Management"},call_read_only_contract_func:{type:"array",items:[{name:"contract_address",type:"string",realtype:"address",pattern:""+z},{name:"contract_name",type:"string",realtype:"string",pattern:"^[a-zA-Z]([a-zA-Z0-9]|[-_])*$"},{name:"function_name",type:"string",realtype:"string",pattern:"^[a-zA-Z]([a-zA-Z0-9]|[-_!?])*$"},{name:"sender_address",type:"string",realtype:"address",pattern:""+z}],minItems:4,maxItems:4,help:"Call a read-only function in a deployed Clarity smart contract.\n\nIf the command succeeds, it prints out a Clarity value.\nExample:\n    $ stx call_read_only_contract_func SPBMRFRPPGCDE3F384WCJPK8PQJGZ8K9QKK7F59X contract_name     contract_function SPBMRFRPPGCDE3F384WCJPK8PQJGZ8K9QKK7F59X\n\n",group:"Account Management"},convert_address:{type:"array",items:[{name:"address",type:"string",realtype:"address",pattern:L+"|"+z}],minItems:1,maxItems:1,help:'Convert a Bitcoin address to a Stacks address and vice versa.\n\nExample:\n\n    $ stx convert_address 12qdRgXxgNBNPnDeEChy3fYTbSHQ8nfZfD\n    {\n      "STACKS": "SPA2MZWV9N67TBYVWTE0PSSKMJ2F6YXW7CBE6YPW",\n      "BTC": "12qdRgXxgNBNPnDeEChy3fYTbSHQ8nfZfD"\n    }\n    $ stx convert_address SPA2MZWV9N67TBYVWTE0PSSKMJ2F6YXW7CBE6YPW\n    {\n      "STACKS": "SPA2MZWV9N67TBYVWTE0PSSKMJ2F6YXW7CBE6YPW",\n      "BTC": "12qdRgXxgNBNPnDeEChy3fYTbSHQ8nfZfD"\n    }\n',group:"Account Management"},decrypt_keychain:{type:"array",items:[{name:"encrypted_backup_phrase",type:"string",realtype:"encrypted_backup_phrase",pattern:"^[^ ]+$"},{name:"password",type:"string",realtype:"password",pattern:".+"}],minItems:1,maxItems:2,help:'Decrypt an encrypted backup phrase with a password.  Decrypts to a 12-word backup phrase if done correctly.  The password will be prompted if not given.\n\nExample:\n\n    $ # password is "asdf"\n    $ stx decrypt_keychain "bfMDtOucUGcJXjZo6vkrZWgEzue9fzPsZ7A6Pl4LQuxLI1xsVF0VPgBkMsnSLCmYS5YHh7R3mNtMmX45Bq9sNGPfPsseQMR0fD9XaHi+tBg=\n    Enter password:\n    section amount spend resemble spray verify night immune tattoo best emotion parrot',group:"Key Management"},deploy_contract:{type:"array",items:[{name:"source_file",type:"string",realtype:"path",pattern:".+"},{name:"contract_name",type:"string",realtype:"string",pattern:"^[a-zA-Z]([a-zA-Z0-9]|[-_])*$"},{name:"fee",type:"string",realtype:"integer",pattern:"^[0-9]+$"},{name:"nonce",type:"string",realtype:"integer",pattern:"^[0-9]+$"},{name:"payment_key",type:"string",realtype:"private_key",pattern:""+W}],minItems:5,maxItems:5,help:'Deploys a Clarity smart contract on the network.\n\nIf the command succeeds, it prints out a transaction ID.\nExample:\n    $ export PAYMENT="bfeffdf57f29b0cc1fab9ea197bb1413da2561fe4b83e962c7f02fbbe2b1cd5401"\n    $ stx deploy_contract ./my_contract.clar my_contract 1 0 "$PAYMENT"\n    a9d387a925fb0ba7a725fb1e11f2c3f1647473699dd5a147c312e6453d233456\n\n',group:"Account Management"},docs:{type:"array",items:[{name:"format",type:"string",realtype:"output_format",pattern:"^json$"}],minItems:0,maxItems:1,help:"Dump the documentation for all commands as JSON to standard out.",group:"CLI"},encrypt_keychain:{type:"array",items:[{name:"backup_phrase",type:"string",realtype:"backup_phrase",pattern:".+"},{name:"password",type:"string",realtype:"password",pattern:".+"}],minItems:1,maxItems:2,help:'Encrypt a 12-word backup phrase, which can be decrypted later with the `decrypt_backup_phrase` command.  The password will be prompted if not given.\n\nExample:\n\n     $ # password is "asdf"\n     $ stx encrypt_keychain "section amount spend resemble spray verify night immune tattoo best emotion parrot"\n     Enter password:\n     Enter password again:\n     M+DnBHYb1fgw4N3oZ+5uTEAua5bAWkgTW/SjmmBhGGbJtjOtqVV+RrLJEJOgT35hBon4WKdGWye2vTdgqDo7+HIobwJwkQtN2YF9g3zPsKk=',group:"Key Management"},faucet:{type:"array",items:[{name:"address",type:"string",realtype:"address",pattern:L+"|"+z}],minItems:1,maxItems:1,help:'Encrypt a 12-word backup phrase, which can be decrypted later with the `decrypt_backup_phrase` command.  The password will be prompted if not given.\n\nExample:\n\n     $ # password is "asdf"\n     $ blockstack-cli encrypt_keychain "section amount spend resemble spray verify night immune tattoo best emotion parrot"\n     Enter password:\n     Enter password again:\n     M+DnBHYb1fgw4N3oZ+5uTEAua5bAWkgTW/SjmmBhGGbJtjOtqVV+RrLJEJOgT35hBon4WKdGWye2vTdgqDo7+HIobwJwkQtN2YF9g3zPsKk=',group:"Key Management"},gaia_dump_bucket:{type:"array",items:[{name:"name_or_id_address",type:"string",realtype:"name_or_id_address",pattern:F+"|"+Y+"|"+Z},{name:"app_origin",type:"string",realtype:"url",pattern:j},{name:"gaia_hub",type:"string",realtype:"url",pattern:j},{name:"backup_phrase",type:"string",realtype:"12_words_or_ciphertext"},{name:"dump_dir",type:"string",realtype:"path",pattern:".+"}],minItems:5,maxItems:5,help:'Download the contents of a Gaia hub bucket to a given directory.  The `GAIA_HUB` argument must correspond to the *write* endpoint of the Gaia hub -- that is, you should be able to fetch `$GAIA_HUB/hub_info`.  If `DUMP_DIR` does not exist, it will be created.\n\nExample:\n\n    $ export BACKUP_PHRASE="section amount spend resemble spray verify night immune tattoo best emotion parrot\n    $ stx gaia_dump_bucket hello.id.blockstack https://sample.app https://hub.blockstack.org "$BACKUP_PHRASE" ./backups\n    Download 3 files...\n    Download hello_world to ./backups/hello_world\n    Download dir/format to ./backups/dir\\x2fformat\n    Download /.dotfile to ./backups/\\x2f.dotfile\n    3\n',group:"Gaia"},gaia_getfile:{type:"array",items:[{name:"blockstack_id",type:"string",realtype:"blockstack_id",pattern:Y+"|"+Z+"$"},{name:"app_origin",type:"string",realtype:"url",pattern:j},{name:"filename",type:"string",realtype:"filename",pattern:".+"},{name:"app_private_key",type:"string",realtype:"private_key",pattern:"^([0-9a-f]{64})$"},{name:"decrypt",type:"string",realtype:"boolean",pattern:"^(0|1|true|false)$"},{name:"verify",type:"string",realtype:"boolean",pattern:"^(0|1|true|false)$"}],minItems:3,maxItems:6,help:'Get a file from another user\'s Gaia hub.  Prints the file data to stdout.  If you want to read an encrypted file, and/or verify a signed file, then you must pass an app private key, and pass 1 for `DECRYPT` and/or `VERIFY`.  If the file is encrypted, and you do not pass an app private key, then this command downloads the ciphertext.  If the file is signed, and you want to download its data and its signature, then you must run this command twice -- once to get the file contents at `FILENAME`, and once to get the signature (whose name will be `FILENAME`.sig).\n\nGaia is a key-value store, so it does not have any built-in notion of directories.  However, most underlying storage systems do -- directory separators in the name of a file in Gaia may be internally treated as first-class directories (it depends on the Gaia hub\'s driver).As such, repeated directory separators will be treated as a single directory separator by this command.  For example, the file name `a/b.txt`, `/a/b.txt`, and `///a////b.txt` will be treated as identical.\n\nExample without encryption:\n\n    $ # Get an unencrypted, unsigned file\n    $ stx gaia_getfile ryan.id http://public.ykliao.com statuses.json\n    [{"id":0,"text":"Hello, Blockstack!","created_at":1515786983492}]\n\nExample with encryption:\n\n    $ # Get an encrypted file without decrypting\n    $ stx gaia_getfile ryan.id https://app.graphitedocs.com documentscollection.json\n        $ # Get an encrypted file, and decrypt it\n    $ # Tip: You can obtain the app key with the get_app_keys command\n    $ export APP_KEY="3ac770e8c3d88b1003bf4a0a148ceb920a6172bdade8e0325a1ed1480ab4fb19"\n    $ stx gaia_getfile ryan.id https://app.graphitedocs.com documentscollection.json "$APP_KEY" 1 0\n',group:"Gaia"},gaia_putfile:{type:"array",items:[{name:"gaia_hub",type:"string",realtype:"url",pattern:j},{name:"app_private_key",type:"string",realtype:"private_key",pattern:"^([0-9a-f]{64})$"},{name:"data_path",type:"string",realtype:"path",pattern:".+"},{name:"gaia_filename",type:"string",realtype:"filename",pattern:".+"},{name:"encrypt",type:"string",realtype:"boolean",pattern:"^(0|1|true|false)$"},{name:"sign",type:"string",realtype:"boolean",pattern:"^(0|1|true|false)$"}],minItems:4,maxItems:6,help:'Put a file into a given Gaia hub, authenticating with the given app private key.  Optionally encrypt and/or sign the data with the given app private key.  If the file is successfully stored, this command prints out the URLs at which it can be fetched.\n\nGaia is a key-value store, so it does not have any built-in notion of directories.  However, most underlying storage systems do -- directory separators in the name of a file in Gaia may be internally treated as first-class directories (it depends on the Gaia hub\'s driver).As such, repeated directory separators will be treated as a single directory separator by this command.  For example, the file name `a/b.txt`, `/a/b.txt`, and `///a////b.txt` will be treated as identical.\n\nExample:\n\n    $ # Store 4 versions of a file: plaintext, encrypted, signed, and encrypted+signed\n    $ # Tip: You can obtain the app key with the get_app_keys command.\n    $ export APP_KEY="3ac770e8c3d88b1003bf4a0a148ceb920a6172bdade8e0325a1ed1480ab4fb19"\n    $ stx gaia_putfile https://hub.blockstack.org "$APP_KEY" /path/to/file.txt file.txt\n    {\n       "urls": "https://gaia.blockstack.org/hub/19KAzYp4kSKozeAGMUsnuqkEGdgQQLEvwo/file.txt"\n    }\n    $ stx gaia_putfile https://hub.blockstack.org "$APP_KEY" /path/to/file.txt file-encrypted.txt 1\n    {\n       "urls": "https://gaia.blockstack.org/hub/19KAzYp4kSKozeAGMUsnuqkEGdgQQLEvwo/file-encrypted.txt"\n    }\n    $ stx gaia_putfile https://hub.blockstack.org "$APP_KEY" /path/to/file.txt file-signed.txt 0 1\n    {\n       "urls": "https://gaia.blockstack.org/hub/19KAzYp4kSKozeAGMUsnuqkEGdgQQLEvwo/file-signed.txt"\n    }\n    $ stx gaia_putfile https://hub.blockstack.org "$APP_KEY" /path/to/file.txt file-encrypted-signed.txt 1 1\n    {\n       "urls": "https://gaia.blockstack.org/hub/19KAzYp4kSKozeAGMUsnuqkEGdgQQLEvwo/file-encrypted-signed.txt"\n    }\n',group:"Gaia"},gaia_deletefile:{type:"array",items:[{name:"gaia_hub",type:"string",realtype:"url",pattern:j},{name:"app_private_key",type:"string",realtype:"private_key",pattern:"^([0-9a-f]{64})$"},{name:"gaia_filename",type:"string",realtype:"filename",pattern:".+"},{name:"was_signed",type:"string",realtype:"boolean",pattern:"^(0|1|true|false)$"}],minItems:3,maxItems:4,help:'Delete a file in a Gaia hub, as well as its signature metadata (which is stored in a separate file).\nExample:\n\n    $ # Tip: You can obtain the app key with the get_app_keys command.\n    $ export APP_KEY="3ac770e8c3d88b1003bf4a0a148ceb920a6172bdade8e0325a1ed1480ab4fb19"\n    $ stx gaia_deletefile https://hub.blockstack.org "$APP_KEY" file.txt false\n    ok',group:"Gaia"},gaia_listfiles:{type:"array",items:[{name:"gaia_hub",type:"string",realtype:"url",pattern:j},{name:"app_private_key",type:"string",realtype:"private_key",pattern:"^([0-9a-f]{64})$"}],minItems:2,maxItems:3,help:'List all the files in a Gaia hub bucket.  You must have the private key for the bucket in order to list its contents.  The command prints each file name on its own line, and when finished, it prints the number of files listed.\n\nExample:\n\n    $ # Tip: You can obtain the app key with the get_app_keys command.\n    $ export APP_KEY="3ac770e8c3d88b1003bf4a0a148ceb920a6172bdade8e0325a1ed1480ab4fb19"\n    $ stx gaia_listfiles "https://hub.blockstack.org" "$APP_KEY"\n    hello_world\n    dir/format\n    /.dotfile\n    3\n',group:"Gaia"},gaia_restore_bucket:{type:"array",items:[{name:"name_or_id_address",type:"string",realtype:"name_or_id_address",pattern:F+"|"+Y+"|"+Z},{name:"app_origin",type:"string",realtype:"url",pattern:j},{name:"gaia_hub",type:"string",realtype:"url",pattern:j},{name:"backup_phrase",type:"string",realtype:"12_words_or_ciphertext"},{name:"dump_dir",type:"string",realtype:"path",pattern:".+"}],minItems:5,maxItems:5,help:'Upload the contents of a previously-dumped Gaia bucket to a new Gaia hub.  The `GAIA_HUB` argument must correspond to the *write* endpoint of the Gaia hub -- that is, you should be able to fetch `$GAIA_HUB/hub_info`.  `DUMP_DIR` must contain the file contents created by a previous successful run of the gaia_dump_bucket command, and both `NAME_OR_ID_ADDRESS` and `APP_ORIGIN` must be the same as they were when it was run.\n\nExample:\n\n    $ export BACKUP_PHRASE="section amount spend resemble spray verify night immune tattoo best emotion parrot"\n    $ stx gaia_restore_bucket hello.id.blockstack https://sample.app https://new.gaia.hub "$BACKUP_PHRASE" ./backups\n    Uploaded ./backups/hello_world to https://new.gaia.hub/hub/1Lr8ggSgdmfcb4764woYutUfFqQMjEoKHc/hello_world\n    Uploaded ./backups/dir\\x2fformat to https://new.gaia.hub/hub/1Lr8ggSgdmfcb4764woYutUfFqQMjEoKHc/dir/format\n    Uploaded ./backups/\\x2f.dotfile to https://new.gaia.hub/hub/1Lr8ggSgdmfcb4764woYutUfFqQMjEoKHc//.dotfile\n    3\n',group:"Gaia"},gaia_sethub:{type:"array",items:[{name:"blockstack_id",type:"string",realtype:"blockstack_id",pattern:"^"+Y+"|"+Z+"$"},{name:"owner_gaia_hub",type:"string",realtype:"url",pattern:j},{name:"app_origin",type:"string",realtype:"url",pattern:j},{name:"app_gaia_hub",type:"string",realtype:"url",pattern:j},{name:"backup_phrase",type:"string",realtype:"12_words_or_ciphertext"}],minItems:5,maxItems:5,help:'Set the Gaia hub for a particular application for a Blockstack ID.  If the command succeeds, the URLs to your updated profile will be printed and your profile will contain an entry in its "apps" key that links the given `APP_ORIGIN` to the given `APP_GAIA_HUB`.\n\nNOTE: Both `OWNER_GAIA_HUB` and `APP_GAIA_HUB` must be the *write* endpoints of their respective Gaia hubs.\n\nYour 12-word phrase (in either raw or encrypted form) is required to re-sign and store your profile and to generate an app-specific key and Gaia bucket.  If you give the encrypted backup phrase, you will be prompted for a password.\n\nExample:\n\n    $ export BACKUP_PHRASE="soap fog wealth upon actual blossom neither timber phone exile monkey vocal"\n    $ stx gaia_sethub hello_world.id https://hub.blockstack.org https://my.cool.app https://my.app.gaia.hub "$BACKUP_PHRASE"\n    {\n      "profileUrls": {\n        "error": null,\n        "dataUrls": [\n          "https://gaia.blockstack.org/hub/1ArdkA2oLaKnbNbLccBaFhEV4pYju8hJ82/profile.json"\n        ]\n      }\n    }\n    \n    $ # You can check the new apps entry with curl and jq as follows:\n    $ curl -sL https://gaia.blockstack.org/hub/1ArdkA2oLaKnbNbLccBaFhEV4pYju8hJ82/profile.json | jq ".[0].decodedToken.payload.claim.apps"\n    {\n      "https://my.cool.app": "https://my.app.gaia.hub/hub/1EqzyQLJ15KG1WQmi5cf1HtmSeqS1Wb8tY/"\n    }\n\n',group:"Gaia"},get_account_history:{type:"array",items:[{name:"address",type:"string",realtype:"address",pattern:z},{name:"page",type:"string",realtype:"integer",pattern:"^[0-9]+$"}],minItems:2,maxItems:2,help:'Query the history of account debits and credits over a given block range.  Returns the history one page at a time.  An empty result indicates that the page number has exceeded the number of historic operations in the given block range.\n\nExample:\n\n    $ stx get_account_history SP2H7VMY13ESQDAD5808QEY1EMGESMHZWBJRTN2YA 0\n    [\n      {\n        "address": "SP2H7VMY13ESQDAD5808QEY1EMGESMHZWBJRTN2YA",\n        "block_id": 56789\n        "credit_value": "100000000000",\n        "debit_value": "0",\n        "lock_transfer_block_id": 0,\n        "txid": "0e5db84d94adff5b771262b9df015164703b39bb4a70bf499a1602b858a0a5a1",\n        "type": "STACKS",\n        "vtxindex": 0\n      },\n      {\n        "address": "SP2H7VMY13ESQDAD5808QEY1EMGESMHZWBJRTN2YA",\n        "block_id": 56790,\n        "credit_value": "100000000000",\n        "debit_value": "64000000000",\n        "lock_transfer_block_id": 0,\n        "txid": "5a0c67144626f7bd4514e4de3f3bbf251383ca13887444f326bac4bc8b8060ee",\n        "type": "STACKS",\n        "vtxindex": 1\n      },\n      {\n        "address": "SP2H7VMY13ESQDAD5808QEY1EMGESMHZWBJRTN2YA",\n        "block_id": 56791,\n        "credit_value": "100000000000",\n        "debit_value": "70400000000",\n        "lock_transfer_block_id": 0,\n        "txid": "e54c271d6a9feb4d1859d32bc99ffd713493282adef5b4fbf50bca9e33fc0ecc",\n        "type": "STACKS",\n        "vtxindex": 2\n      },\n      {\n        "address": "SP2H7VMY13ESQDAD5808QEY1EMGESMHZWBJRTN2YA",\n        "block_id": 56792,\n        "credit_value": "100000000000",\n        "debit_value": "76800000000",\n        "lock_transfer_block_id": 0,\n        "txid": "06e0d313261baefec1e59783e256ab487e17e0e776e2fdab0920cc624537e3c8",\n        "type": "STACKS",\n        "vtxindex": 3\n      }\n    ]\n\n',group:"Account Management"},get_account_at:{type:"array",items:[{name:"address",type:"string",realtype:"address",pattern:z},{name:"blocknumber",type:"string",realtype:"integer",pattern:"^[0-9]+$"}],minItems:2,maxItems:2,help:'Query the list of token debits and credits on a given address that occurred at a particular block height.  Does not include BTC debits and credits; only Stacks.\n\nExample\n\n    $ stx -t get_account_at SP2NTAQFECYGSTE1W47P71FG21H8F00KZZWFGEVKQ 56789\n    [\n      {\n        "debit_value": "0",\n        "block_id": 56789\n        "lock_transfer_block_id": 0,\n        "txid": "291817c78a865c1f72938695218a48174265b2358e89b9448edc89ceefd66aa0",\n        "address": "SP2NTAQFECYGSTE1W47P71FG21H8F00KZZWFGEVKQ",\n        "credit_value": "1000000000000000000",\n        "type": "STACKS",\n        "vtxindex": 0\n      }\n    ]\n\n',group:"Account Management"},get_address:{type:"array",items:[{name:"private_key",type:"string",realtype:"private_key",pattern:""+W}],minItems:1,maxItems:1,help:'Get the address of a private key or multisig private key bundle.  Gives the BTC and STACKS addresses\n\nExample:\n\n    $ stx get_address f5185b9ca93bdcb5753fded3b097dab8547a8b47d2be578412d0687a9a0184cb01\n    {\n      "BTC": "1JFhWyVPpZQjbPcXFtpGtTmU22u4fhBVmq",\n      "STACKS": "SP2YM3J4KQK09V670TD6ZZ1XYNYCNGCWCVVKSDFWQ"\n    }\n    $ stx get_address 1,f5185b9ca93bdcb5753fded3b097dab8547a8b47d2be578412d0687a9a0184cb01,ff2ff4f4e7f8a1979ffad4fc869def1657fd5d48fc9cf40c1924725ead60942c01\n    {\n      "BTC": "363pKBhc5ipDws1k5181KFf6RSxhBZ7e3p",\n      "STACKS": "SMQWZ30EXVG6XEC1K4QTDP16C1CAWSK1JSWMS0QN"\n    }',group:"Key Management"},get_blockchain_record:{type:"array",items:[{name:"blockstack_id",type:"string",realtype:"blockstack_id",pattern:"^"+Y+"|"+Z+"$"}],minItems:1,maxItems:1,help:"Get the low-level blockchain-hosted state for a Blockstack ID.  This command is used mainly for debugging and diagnostics.  You should not rely on it to be stable.",group:"Querying Blockstack IDs"},get_blockchain_history:{type:"array",items:[{name:"blockstack_id",type:"string",realtype:"blockstack_id",pattern:Y+"|"+Z+"$"},{name:"page",type:"string",realtype:"page_number",pattern:"^[0-9]+$"}],minItems:1,maxItems:2,help:"Get the low-level blockchain-hosted history of operations on a Blockstack ID.  This command is used mainly for debugging and diagnostics, and is not guaranteed to be stable across releases.",group:"Querying Blockstack IDs"},get_confirmations:{type:"array",items:[{name:"txid",type:"string",realtype:"transaction_id",pattern:"^([0-9a-f]{64})$"}],minItems:1,maxItems:1,help:'Get the block height and number of confirmations for a transaction.\n\nExample:\n\n    $ stx get_confirmations e41ce043ab64fd5a5fd382fba21acba8c1f46cbb1d7c08771ada858ce7d29eea\n    {\n      "blockHeight": 567890,\n      "confirmations": 7,\n    }\n\n',group:"Peer Services"},get_namespace_blockchain_record:{type:"array",items:[{name:"namespace_id",type:"string",realtype:"namespace_id",pattern:"^([0-9a-z_-]{1,19})$"}],minItems:1,maxItems:1,help:"Get the low-level blockchain-hosted state for a Blockstack namespace.  This command is used mainly for debugging and diagnostics, and is not guaranteed to be stable across releases.",group:"Namespace Operations"},get_app_keys:{type:"array",items:[{name:"backup_phrase",type:"string",realtype:"12_words_or_ciphertext"},{name:"name_or_id_address",type:"string",realtype:"name-or-id-address",pattern:Y+"|"+Z+"|"+F},{name:"app_origin",type:"string",realtype:"url",pattern:j}],minItems:3,maxItems:3,help:'Get the application private key from a 12-word backup phrase and a name or ID-address.  This is the private key used to sign data in Gaia, and its address is the Gaia bucket address.  If you provide your encrypted backup phrase, you will be asked to decrypt it.  If you provide a name instead of an ID-address, its ID-address will be queried automatically (note that this means that the name must already be registered).\n\nNOTE: This command does NOT verify whether or not the name or ID-address was created by the backup phrase. You should do this yourself via the `get_owner_keys` command if you are not sure.\n\nThere are two derivation paths emitted by this command:  a `keyInfo` path and a `legacyKeyInfo`path.  You should use the one that matches the Gaia hub read URL\'s address, if you have already signed in before.  If not, then you should use the `keyInfo` path when possible.\n\nExample:\n\n    $ export BACKUP_PHRASE="one race buffalo dynamic icon drip width lake extra forest fee kit"\n    $ stx get_app_keys "$BACKUP_PHRASE" example.id.blockstack https://my.cool.dapp\n    {\n      "keyInfo": {\n        "privateKey": "TODO",\n        "address": "TODO"\n      },\n      "legacyKeyInfo": {\n        "privateKey": "90f9ec4e13fb9a00243b4c1510075157229bda73076c7c721208c2edca28ea8b",\n        "address": "1Lr8ggSgdmfcb4764woYutUfFqQMjEoKHc"\n      },\n      "ownerKeyIndex": 0\n    }',group:"Key Management"},get_owner_keys:{type:"array",items:[{name:"backup_phrase",type:"string",realtype:"12_words_or_ciphertext"},{name:"index",type:"string",realtype:"integer",pattern:"^[0-9]+$"}],minItems:1,maxItems:2,help:'Get the list of owner private keys and ID-addresses from a 12-word backup phrase.  Pass non-zero values for INDEX to generate the sequence of ID-addresses that can be used to own Blockstack IDs.  If you provide an encrypted 12-word backup phrase, you will be asked for your password to decrypt it.\n\nExample:\n\n    $ # get the first 3 owner keys and addresses for a backup phrase\n    $ export BACKUP_PHRASE="soap fog wealth upon actual blossom neither timber phone exile monkey vocal"\n    $ stx get_owner_keys "$BACKUP_PHRASE" 3\n    [\n      {\n        "privateKey": "14b0811d5cd3486d47279d8f3a97008647c64586b121e99862c18863e2a4183501",\n        "version": "v0.10-current",\n        "index": 0,\n        "idAddress": "ID-1ArdkA2oLaKnbNbLccBaFhEV4pYju8hJ82"\n      },\n      {\n        "privateKey": "1b3572d8dd6866828281ac6cf135f04153210c1f9b123743eccb795fd3095e4901",\n        "version": "v0.10-current",\n        "index": 1,\n        "idAddress": "ID-18pR3UpD1KFrnk88a3MGZmG2dLuZmbJZ25"\n      },\n      {\n        "privateKey": "b19b6d62356db96d570fb5f08b78f0aa7f384525ba3bdcb96fbde29b8e11710d01",\n        "version": "v0.10-current",\n        "index": 2,\n        "idAddress": "ID-1Gx4s7ggkjENw3wSY6bNd1CwoQKk857AqN"\n      }\n    ]\n\n',group:"Key Management"},get_payment_key:{type:"array",items:[{name:"backup_phrase",type:"string",realtype:"12_words_or_ciphertext"}],minItems:1,maxItems:1,help:'Get the payment private key from a 12-word backup phrase.  If you provide an encrypted backup phrase, you will be asked for your password to decrypt it.  This command will tell you your Bitcoin and Stacks token addresses as well.\n\nExample\n\n    $ stx get_payment_key "soap fog wealth upon actual blossom neither timber phone exile monkey vocal"\n    [\n      {\n        "privateKey": "4023435e33da4aff0775f33e7b258f257fb20ecff039c919b5782313ab73afb401",\n        "address": {\n          "BTC": "1ybaP1gaRwRSWRE4f8JXo2W8fiTZmA4rV",\n          "STACKS": "SP5B89ZJAQHBRXVYP15YB5PAY5E24FEW9K4Q63PE"\n        },\n        "index": 0\n      }\n    ]\n\n',group:"Key Management"},get_stacks_wallet_key:{type:"array",items:[{name:"backup_phrase",type:"string",realtype:"24_words_or_ciphertext"}],minItems:1,maxItems:1,help:'Get the payment private key from a 24-word backup phrase used by the Stacks wallet.  If you provide an encrypted backup phrase, you will be asked for your password to decrypt it.  This command will tell you your Bitcoin and Stacks token addresses as well.\n\nExample\n\n    $ stx get_stacks_payment_key "toast canal educate tissue express melody produce later gospel victory meadow outdoor hollow catch liberty annual gasp hat hello april equip thank neck cruise"\n    [\n      {\n        "privateKey": "a25cea8d310ce656c6d427068c77bad58327334f73e39c296508b06589bc4fa201",\n        "address": {\n          "BTC": "1ATAW6TAbTCKgU3xPgAcWQwjW9Q26Eambx",\n          "STACKS": "SP1KTQR7CTQNA20SV2VNTF9YABMR6RJERSES3KC6Z"\n        },\n        "index": 0\n      }\n    ]\n\n',group:"Key Management"},get_zonefile:{type:"array",items:[{name:"zonefile_hash",type:"string",realtype:"zonefile_hash",pattern:"^([0-9a-f]{40})$"}],minItems:1,maxItems:1,help:'Get a zone file by hash.\n\nExample:\n\n    $ stx get_zonefile ee77ad484b7b229f09461e4c2b6d3bd3e152ba95\n    $ORIGIN ryanshea.id\n    $TTL 3600\n    _http._tcp URI 10 1 "https://gaia.blockstack.org/hub/15BcxePn59Y6mYD2fRLCLCaaHScefqW2No/1/profile.json"\n\n',group:"Peer Services"},help:{type:"array",items:[{name:"command",type:"string",realtype:"command"}],minItems:0,maxItems:1,help:"Get the usage string for a CLI command",group:"CLI"},lookup:{type:"array",items:[{name:"blockstack_id",type:"string",realtype:"blockstack_id",pattern:Y+"|"+Z+"$"}],minItems:1,maxItems:1,help:"Get and authenticate the profile and zone file for a Blockstack ID.\n\nExample:\n\n    $ stx lookup example.id\n\n",group:"Querying Blockstack IDs"},names:{type:"array",items:[{name:"id_address",type:"string",realtype:"id-address",pattern:F}],minItems:1,maxItems:1,help:"Get the list of Blockstack IDs owned by an ID-address.\n\nExample:\n\n    $ stx names ID-1FpBChfzHG3TdQQRKWAipbLragCUArueG9\n\n",group:"Querying Blockstack IDs"},make_keychain:{type:"array",items:[{name:"backup_phrase",type:"string",realtype:"12_words_or_ciphertext"}],minItems:0,maxItems:1,help:'Generate the owner and payment private keys, optionally from a given 12-word backup phrase.  If no backup phrase is given, a new one will be generated.  If you provide your encrypted backup phrase, you will be asked to decrypt it.\n\nExample:\n\n    $ stx make_keychain\n    {\n      "mnemonic": "apart spin rich leader siren foil dish sausage fee pipe ethics bundle",\n      "keyInfo": {\n        "address": "SP3G19B6J50FH6JGXAKS06N6WA1XPJCKKM4JCHC2D"\n        "index": 0,\n        "privateKey": "56d30f2b605ed114c7dc45599ae521c525d07e1286fbab67452a6586ea49332a01"\n      }\n    }\n\n',group:"Key Management"},make_zonefile:{type:"array",items:[{name:"blockstack_id",type:"string",realtype:"blockstack_id",pattern:"^"+Y+"|"+Z+"$"},{name:"id_address",type:"string",realtype:"ID-address",pattern:F},{name:"gaia_url_prefix",type:"string",realtype:"url",pattern:".+"},{name:"resolver_url",type:"string",realtype:"url",pattern:".+"}],minItems:3,maxItems:4,help:"Generate a zone file for a Blockstack ID with the given profile URL.  If you know the ID-address for the Blockstack ID, the profile URL usually takes the form of:\n\n     {GAIA_URL_PREFIX}/{ADDRESS}/profile.json\n\nwhere `{GAIA_URL_PREFIX}` is the *read* endpoint of your Gaia hub (e.g. https://gaia.blockstack.org/hub) and `{ADDRESS}` is the base58check part of your ID-address (i.e. the string following 'ID-').\n\nExample:\n\n     $ stx make_zonefile example.id ID-1ArdkA2oLaKnbNbLccBaFhEV4pYju8hJ82 https://my.gaia.hub/hub\n     $ORIGIN example.id\n     $TTL 3600\n     _http._tcp      IN      URI     10      1       \"https://my.gaia.hub/hub/1ArdkA2oLaKnbNbLccBaFhEV4pYju8hJ82/profile.json\"\n\n",group:"Peer Services"},name_import:{type:"array",items:[{name:"blockstack_id",type:"string",realtype:"blockstack_id",pattern:Y},{name:"id_address",type:"string",realtype:"id-address",pattern:F},{name:"gaia_url_prefix",type:"string",realtype:"url",pattern:".+"},{name:"reveal_key",type:"string",realtype:"private_key",pattern:""+W},{name:"zonefile",type:"string",realtype:"path",pattern:".+"},{name:"zonefile_hash",type:"string",realtype:"zonefile_hash",pattern:"^([0-9a-f]{40})$"}],minItems:4,maxItems:6,help:'Import a name into a namespace you revealed.  The `REVEAL_KEY` must be the same as the key that revealed the namespace.  You can only import a name into a namespace if the namespace has not yet been launched (i.e. via `namespace_ready`), and if the namespace was revealed less than a year ago (52595 blocks ago).\n\nA zone file will be generated for this name automatically, if "ZONEFILE" is not given.  By default, the zone file will have a URL to the name owner\'s profile prefixed by `GAIA_URL_PREFIX`.  If you know the *write* endpoint for the name owner\'s Gaia hub, you can find out the `GAIA_URL_PREFIX` to use with `curl $GAIA_HUB/hub_info`".\n\nIf you specify an argument for `ZONEFILE`, then the `GAIA_URL_PREFIX` argument is ignored in favor of your custom zone file on disk.\n\nIf you specify a valid zone file hash for `ZONEFILE_HASH` then it will be used in favor of both `ZONEFILE` and `GAIA_URL_PREFIX`.  The zone file hash will be incorporated directly into the name-import transaction.\n\nThis command prints out a transaction ID if it succeeds, and it replicates the zone file (if given) to a transaction broadcaster (you can choose which one with -T).  The zone file will be automatically broadcast to the Blockstack peer network when the transaction confirms.  Alternatively, you can do so yourself with the `zonefile_push` command.\n\nExample:\n\n    $ export REVEAL_KEY="bfeffdf57f29b0cc1fab9ea197bb1413da2561fe4b83e962c7f02fbbe2b1cd5401"\n    $ export ID_ADDRESS="ID-18e1bqU7B5qUPY3zJgMLxDnexyStTeSnvV"\n    $ stx name_import example.id "$ID_ADDRESS" https://gaia.blockstack.org/hub "$REVEAL_KEY"\n    f726309cea7a9db364307466dc0e0e759d5c0d6bad1405e2fd970740adc7dc45\n\n',group:"Namespace Operations"},namespace_preorder:{type:"array",items:[{name:"namespace_id",type:"string",realtype:"namespace_id",pattern:"^([0-9a-z_-]{1,19})$"},{name:"reveal_address",type:"string",realtype:"address",pattern:L},{name:"payment_key",type:"string",realtype:"private_key",pattern:""+W}],minItems:3,maxItems:3,help:"Preorder a namespace.  This is the first of three steps to creating a namespace.  Once this transaction is confirmed, you will need to use the `namespace_reveal` command to reveal the namespace (within 24 hours, or 144 blocks).",group:"Namespace Operations"},namespace_reveal:{type:"array",items:[{name:"namespace_id",type:"string",realtype:"namespace_id",pattern:"^([0-9a-z_-]{1,19})$"},{name:"reveal_address",type:"string",realtype:"address",pattern:L},{name:"version",type:"string",realtype:"2-byte-integer",pattern:"^-?[0-9]+$"},{name:"lifetime",type:"string",realtype:"4-byte-integer",pattern:"^-?[0-9]+$"},{name:"coefficient",type:"string",realtype:"1-byte-integer",pattern:"^-?[0-9]+$"},{name:"base",type:"string",realtype:"1-byte-integer",pattern:"^-?[0-9]+$"},{name:"price_buckets",type:"string",realtype:"csv-of-16-nybbles",pattern:"^([0-9]{1,2},){15}[0-9]{1,2}$"},{name:"nonalpha_discount",type:"string",realtype:"nybble",pattern:"^-?[0-9]+$"},{name:"no_vowel_discount",type:"string",realtype:"nybble",pattern:"^-?[0-9]+$"},{name:"payment_key",type:"string",realtype:"private_key",pattern:""+W}],minItems:10,maxItems:10,help:"Reveal a preordered namespace, and set the price curve and payment options.  This is the second of three steps required to create a namespace, and must be done shortly after the associated `namespace_preorder` command.",group:"Namespace Operations"},namespace_ready:{type:"array",items:[{name:"namespace_id",type:"string",realtype:"namespace_id",pattern:"^([0-9a-z_-]{1,19})$"},{name:"reveal_key",type:"string",realtype:"private_key",pattern:""+W}],minItems:2,maxItems:2,help:"Launch a revealed namespace.  This is the third and final step of creating a namespace.  Once launched, you will not be able to import names anymore.",group:"Namespace Operations"},price:{type:"array",items:[{name:"blockstack_id",type:"string",realtype:"blockstack_id",pattern:Y}],minItems:1,maxItems:1,help:'Get the price of an on-chain Blockstack ID.  Its namespace must already exist.\n\nExample:\n\n    $ stx price example.id\n    {\n      "units": "BTC",\n      "amount": "5500"\n    }\n\n',group:"Querying Blockstack IDs"},price_namespace:{type:"array",items:[{name:"namespace_id",type:"string",realtype:"namespace_id",pattern:"^([0-9a-z_-]{1,19})$"}],minItems:1,maxItems:1,help:'Get the price of a namespace.\n\nExample:\n\n    $ # get the price of the .hello namespace\n    $ stx price_namespace hello\n    {\n      "units": "BTC",\n      "amount": "40000000"\n    }\n\n',group:"Namespace Operations"},profile_sign:{type:"array",items:[{name:"profile",type:"string",realtype:"path"},{name:"owner_key",type:"string",realtype:"private_key",pattern:"^([0-9a-f]{64,66})$"}],minItems:2,maxItems:2,help:"Sign a profile on disk with a given owner private key.  Print out the signed profile JWT.\n\nExample:\n\n    $ # Tip: you can get the owner key from your 12-word backup phrase using the get_owner_keys command\n    $ stx profile_sign /path/to/profile.json 0ffd299af9c257173be8486ef54a4dd1373407d0629ca25ca68ff24a76be09fb01\n\n",group:"Profiles"},profile_store:{type:"array",items:[{name:"user_id",type:"string",realtype:"name-or-id-address",pattern:Y+"|"+Z+"|"+F},{name:"profile",type:"string",realtype:"path"},{name:"owner_key",type:"string",realtype:"private_key",pattern:"^([0-9a-f]{64,66})$"},{name:"gaia_hub",type:"string",realtype:"url"}],minItems:4,maxItems:4,help:'Store a profile on disk to a Gaia hub.  `USER_ID` can be either a Blockstack ID or an ID-address.  The `GAIA_HUB` argument must be the *write* endpoint for the user\'s Gaia hub (e.g. https://hub.blockstack.org).  You can verify this by ensuring that you can run `curl "$GAIA_HUB/hub_info"` successfully.',group:"Profiles"},profile_verify:{type:"array",items:[{name:"profile",type:"string",realtype:"path"},{name:"id_address",type:"string",realtype:"id-address",pattern:F+"|^([0-9a-f]{66,130})$"}],minItems:2,maxItems:2,help:'Verify a JWT encoding a profile on disk using an ID-address.  Prints out the contained profile on success.\n\nExample:\n\n    $ # get the raw profile JWT\n    $ curl -sL https://raw.githubusercontent.com/jcnelson/profile/master/judecn.id > /tmp/judecn.id.jwt\n    $ # Tip: you can get the ID-address for a name with the "whois" command\n    $ stx profile_verify /tmp/judecn.id.jwt ID-16EMaNw3pkn3v6f2BgnSSs53zAKH4Q8YJg\n\n',group:"Profiles"},renew:{type:"array",items:[{name:"blockstack_id",type:"string",realtype:"on-chain-blockstack_id",pattern:Y},{name:"owner_key",type:"string",realtype:"private_key",pattern:""+W},{name:"payment_key",type:"string",realtype:"private_key",pattern:""+W},{name:"new_id_address",type:"string",realtype:"id-address",pattern:F},{name:"zonefile",type:"string",realtype:"path"},{name:"zonefile_hash",type:"string",realtype:"zonefile_hash",pattern:"^([0-9a-f]{40})$"}],minItems:3,maxItems:6,help:'Renew a name.  Optionally transfer it to a new owner address (`NEW_ID_ADDRESS`), and optionally load up and give it a new zone file on disk (`ZONEFILE`).  If the command succeeds, it prints out a transaction ID.  You can use with the `get_confirmations` command to track its confirmations on the underlying blockchain -- once it reaches 7 confirmations, the rest of the Blockstack peer network will process it.\n\nIf you create a new zonefile for your name, you will need to later use `zonefile_push` to replicate the zone file to the Blockstack peer network once the transaction reaches 7 confirmations.\n\nExample:\n\n    $ # Tip: you can get your owner key from your backup phrase with "get_owner_keys".\n    $ # Tip: you can get your payment key from your backup phrase with "get_payment_key".\n    $ export OWNER="136ff26efa5db6f06b28f9c8c7a0216a1a52598045162abfe435d13036154a1b01"\n    $ export PAYMENT="bfeffdf57f29b0cc1fab9ea197bb1413da2561fe4b83e962c7f02fbbe2b1cd5401"\n    $ stx renew hello_world.id "$OWNER" "$PAYMENT"\n    3d8945ce76d4261678d76592b472ed639a10d4298f9d730af4edbbc3ec02882e\n\n    $ # Renew with a new owner\n    $ export NEW_OWNER="ID-141BcmFVbEuuMb7Bd6umXyV6ZD1WYomYDE"\n    $ stx renew hello_world.id "$OWNER" "$PAYMENT" "$NEW_OWNER"\n    33865625ef3f1b607111c0dfba9e58604927173bd2e299a343e19aa6d2cfb263\n\n    $ # Renew with a new zone file.\n    $ # Tip: you can create a new zonefile with the "make_zonefile" command.\n    $ export ZONEFILE_PATH="/path/to/new/zonefile.txt"\n    $ stx renew hello_world.id "$OWNER" "$PAYMENT" --zonefile "$ZONEFILE_PATH"\n    e41ce043ab64fd5a5fd382fba21acba8c1f46cbb1d7c08771ada858ce7d29eea\n    $ # wait 7 confirmations\n    $ stx get_confirmations e41ce043ab64fd5a5fd382fba21acba8c1f46cbb1d7c08771ada858ce7d29eea\n    {\n      "blockHeight": 567890,\n      "confirmations": 7,\n    }\n    $ stx -H https://core.blockstack.org zonefile_push "$ZONEFILE_PATH"\n    [\n      "https://core.blockstack.org"\n    ]\n\n',group:"Blockstack ID Management"},register:{type:"array",items:[{name:"blockstack_id",type:"string",realtype:"on-chain-blockstack_id",pattern:Y},{name:"owner_key",type:"string",realtype:"private_key",pattern:"^([0-9a-f]{64,66})$"},{name:"payment_key",type:"string",realtype:"private_key",pattern:""+W},{name:"gaia_hub",type:"string",realtype:"url"},{name:"zonefile",type:"string",realtype:"path"}],minItems:4,maxItems:5,help:'If you are trying to register a name for a *private key*, use this command.\n\nRegister a name to a single name-owning private key.  After successfully running this command, and after waiting a couple hours, your name will be ready to use and will resolve to a signed empty profile hosted on the given Gaia hub (`GAIA_HUB`).\n\nBehind the scenes, this will generate and send two transactions and generate and replicate a zone file with the given Gaia hub URL (`GAIA_HUB`).  Note that the `GAIA_HUB` argument must correspond to the *write* endpoint of the Gaia hub (i.e. you should be able to run \'curl "$GAIA_HUB/hub_info"\' and get back data).  If you are using Blockstack PBC\'s default Gaia hub, pass "https://hub.blockstack.org" for this argument.\n\nBy default, this command generates a zone file automatically that points to the Gaia hub\'s read endpoint (which is queried on-the-fly from `GAIA_HUB`).  If you instead want to have a custom zone file for this name, you can specify a path to it on disk with the `ZONEFILE` argument.\n\nIf this command completes successfully, your name will be ready to use once both transactions have 7+ confirmations.  You can use the `get_confirmations` command to track the confirmations on the transaction IDs returned by this command.\n\nWARNING: You should *NOT* use the payment private key (`PAYMENT_KEY`) while the name is being confirmed.  If you do so, you could double-spend one of the pending transactions and lose your name.\n\nExample:\n\n    $ export OWNER="136ff26efa5db6f06b28f9c8c7a0216a1a52598045162abfe435d13036154a1b01"\n    $ export PAYMENT="bfeffdf57f29b0cc1fab9ea197bb1413da2561fe4b83e962c7f02fbbe2b1cd5401"\n    $ stx register example.id "$OWNER" "$PAYMENT" https://hub.blockstack.org\n    9bb908bfd4ab221f0829167a461229172184fc825a012c4e551533aa283207b1\n\n',group:"Blockstack ID Management"},register_addr:{type:"array",items:[{name:"blockstack_id",type:"string",realtype:"blockstack_id",pattern:Y},{name:"id-address",type:"string",realtype:"id-address",pattern:F},{name:"payment_key",type:"string",realtype:"private_key",pattern:""+W},{name:"gaia_url_prefix",type:"string",realtype:"url"},{name:"zonefile",type:"string",realtype:"path"}],minItems:4,maxItems:5,help:'If you are trying to register a name for an *ID-address*, use this command.\n\nRegister a name to someone\'s ID-address.  After successfully running this command and waiting a couple of hours, the name will be registered on-chain and have a zone file with a URL to where the owner\'s profile should be.  This command does NOT generate, sign, or replicate a profile for the name---the name owner will need to do this separately, once the name is registered.\n\nBehind the scenes, this command will generate two transactions, and generate and replicate a zone file with the given Gaia hub read URL (`GAIA_URL_PREFIX`).  Note that the `GAIA_URL_PREFIX` argument must correspond to the *read* endpoint of the Gaia hub (e.g. if you are using Blockstack PBC\'s default Gaia hub, this is "https://gaia.blockstack.org/hub"). If you know the *write* endpoint of the name owner\'s Gaia hub, you can find the right value for `GAIA_URL_PREFIX` by running "curl $GAIA_HUB/hub_info".\n\nNo profile will be generated or uploaded by this command.  Instead, this command generates a zone file that will include the URL to a profile based on the `GAIA_URL_PREFIX` argument.\n\nThe zone file will be generated automatically from the `GAIA_URL_PREFIX` argument.  If you need to use a custom zone file, you can pass the path to it on disk via the `ZONEFILE` argument.\n\nIf this command completes successfully, the name will be ready to use in a couple of hours---that is, once both transactions have 7+ confirmations. You can use the `get_confirmations` command to track the confirmations.\n\nWARNING: You should *NOT* use the payment private key (`PAYMENT_KEY`) while the name is being confirmed.  If you do so, you could double-spend one of the pending transactions and lose the name.\n\nExample:\n\n    $ export ID_ADDRESS="ID-18e1bqU7B5qUPY3zJgMLxDnexyStTeSnvV"\n    $ export PAYMENT="bfeffdf57f29b0cc1fab9ea197bb1413da2561fe4b83e962c7f02fbbe2b1cd5401"\n    $ stx register_addr example.id "$ID_ADDRESS" "$PAYMENT" https://gaia.blockstack.org/hub',group:"Blockstack ID Management"},register_subdomain:{type:"array",items:[{name:"blockstack_id",type:"string",realtype:"blockstack_id",pattern:Z},{name:"owner_key",type:"string",realtype:"private_key",pattern:"^([0-9a-f]{64,66})$"},{name:"gaia_hub",type:"string",realtype:"url"},{name:"registrar",type:"string",realtype:"url"},{name:"zonefile",type:"string",realtype:"path"}],minItems:4,maxItems:5,help:'Register a subdomain.  This will generate and sign a subdomain zone file record with the given `GAIA_HUB` URL and send it to the given subdomain registrar (`REGISTRAR`).\n\nThis command generates, signs, and uploads a profile to the `GAIA_HUB` url.  Note that the `GAIA_HUB` argument must correspond to the *write* endpoint of your Gaia hub (i.e. you should be able to run \'curl "$GAIA_HUB/hub_info"\' successfully).  If you are using Blockstack PBC\'s default Gaia hub, this argument should be "https://hub.blockstack.org".\n\nWARNING: At this time, no validation will occur on the registrar URL.  Be sure that the URL corresponds to the registrar for the on-chain name before running this command!\n\nExample:\n\n    $ export OWNER="6e50431b955fe73f079469b24f06480aee44e4519282686433195b3c4b5336ef01"\n    $ # NOTE: https://registrar.blockstack.org is the registrar for personal.id!\n    $ stx register_subdomain hello.personal.id "$OWNER" https://hub.blockstack.org https://registrar.blockstack.org\n',group:"Blockstack ID Management"},revoke:{type:"array",items:[{name:"blockstack_id",type:"string",realtype:"on-chain-blockstack_id",pattern:Y},{name:"owner_key",type:"string",realtype:"private_key",pattern:""+W},{name:"payment_key",type:"string",realtype:"private_key",pattern:""+W}],minItems:3,maxItems:3,help:'Revoke a name.  This renders it unusable until it expires (if ever).  This command prints out the transaction ID if it succeeds.  Once the transaction confirms, the name will be revoked by each node in the peer network.  This command only works for on-chain names, not subdomains.\n\nExample:\n\n    $ # Tip: you can get your owner and payment keys from your 12-word backup phrase using the get_owner_keys and get_payment_key commands.\n    $ export OWNER="6e50431b955fe73f079469b24f06480aee44e4519282686433195b3c4b5336ef01"\n    $ export PAYMENT="bfeffdf57f29b0cc1fab9ea197bb1413da2561fe4b83e962c7f02fbbe2b1cd5401"\n    $ stx revoke example.id "$OWNER" "$PAYMENT"\n    233b559c97891affa010567bd582110508d0236b4e3f88d3b1d0731629e030b0\n\n',group:"Blockstack ID Management"},send_btc:{type:"array",items:[{name:"recipient_address",type:"string",realtype:"address",pattern:L},{name:"amount",type:"string",realtype:"satoshis",pattern:"^-?[0-9]+$"},{name:"payment_key",type:"string",realtype:"private_key",pattern:""+W}],minItems:3,maxItems:3,help:'Send some Bitcoin (in satoshis) from a payment key to an address.  Up to the given amount will be spent, but likely less---the actual amount sent will be the amount given, minus the transaction fee.  For example, if you want to send 10000 satoshis but the transaction fee is 2000 satoshis, then the resulting transaction will send 8000 satoshis to the given address.  This is to ensure that this command does not *over*-spend your Bitcoin.  If you want to check the amount before spending, pass the `-x` flag to see the raw transaction.\n\nIf the command succeeds, it prints out the transaction ID.  You can track its confirmations with the `get_confirmations` command.\n\nExample:\n\n    $ export PAYMENT="bfeffdf57f29b0cc1fab9ea197bb1413da2561fe4b83e962c7f02fbbe2b1cd5401"\n    $ stx send_btc 18qTSE5PPQmypwKKej7QX5Db2XAttgYeA1 123456 "$PAYMENT"\n    c7e239fd24da30e36e011e6bc7db153574a5b40a3a8dc3b727adb54ad038acc5\n\n',group:"Account Management"},send_tokens:{type:"array",items:[{name:"address",type:"string",realtype:"address",pattern:z},{name:"amount",type:"string",realtype:"integer",pattern:"^[0-9]+$"},{name:"fee",type:"string",realtype:"integer",pattern:"^[0-9]+$"},{name:"nonce",type:"string",realtype:"integer",pattern:"^[0-9]+$"},{name:"payment_key",type:"string",realtype:"private_key",pattern:""+W},{name:"memo",type:"string",realtype:"string",pattern:"^.{0,34}$"}],minItems:5,maxItems:6,help:'Send a particular type of tokens to the given `ADDRESS`.  Right now, only supported `TOKEN-TYPE` is `STACKS`.  Optionally include a memo string (`MEMO`) up to 34 characters long.\n\nIf the command succeeds, it prints out a transaction ID.  You can track the confirmations on the transaction via the `get_confirmations` command.  Once the transaction has 7 confirmations, the Blockstack peer network will have processed it, and your payment key balance and recipient balance will be updated.\n\nExample:\n\n    $ # check balances of sender and recipient before sending.\n    $ # address of the key below is SP2SC16ASH76GX549PT7J5WQZA4GHMFBKYMBQFF9V\n    $ export PAYMENT="bfeffdf57f29b0cc1fab9ea197bb1413da2561fe4b83e962c7f02fbbe2b1cd5401"\n    $ stx balance SP2SC16ASH76GX549PT7J5WQZA4GHMFBKYMBQFF9V\n    {\n      "STACKS": "10000000"\n    }\n    $ stx balance SP1P10PS2T517S4SQGZT5WNX8R00G1ECTRKYCPMHY\n    {\n      "STACKS": "0"\n    }\n\n    $ # send tokens\n    $ stx send_tokens SP1P10PS2T517S4SQGZT5WNX8R00G1ECTRKYCPMHY 12345 1 0 "$PAYMENT"\n    a9d387a925fb0ba7a725fb1e11f2c3f1647473699dd5a147c312e6453d233456\n\n    $ # wait for transaction to be confirmed\n\n    $ stx balance SP2SC16ASH76GX549PT7J5WQZA4GHMFBKYMBQFF9V\n    {\n      "STACKS": "9987655"\n    }\n    $ stx balance SP1P10PS2T517S4SQGZT5WNX8R00G1ECTRKYCPMHY\n    {\n      "STACKS": "12345"\n    }\n\n',group:"Account Management"},stack:{type:"array",items:[{name:"amount",type:"string",realtype:"integer",pattern:"^[0-9]+$"},{name:"cycles",type:"string",realtype:"integer",pattern:"^[0-9]+$"},{name:"pox_address",type:"string",realtype:"integer",pattern:""+L},{name:"private_key",type:"string",realtype:"private_key",pattern:""+W},{name:"fee",type:"string",realtype:"integer",pattern:"^[0-9]+$"},{name:"nonce",type:"string",realtype:"integer",pattern:"^[0-9]+$"}],minItems:4,maxItems:6,help:'Stack the specified number of Stacks tokens for given number of cycles.\n\nExample:\n\n    $ stx stack 10000000 20 16pm276FpJYpm7Dv3GEaRqTVvGPTdceoY4 136ff26efa5db6f06b28f9c8c7a0216a1a52598045162abfe435d13036154a1b01\n    {\n      "txid": true\n    }\n',group:"Account Management"},stacking_status:{type:"array",items:[{name:"pox_address",type:"string",realtype:"integer",pattern:""+z}],minItems:1,maxItems:1,help:"Get stacking status for specified address.\n\nExample:\n\n    $ stx stacking_status SPZY1V53Z4TVRHHW9Z7SFG8CZNRAG7BD8WJ6SXD0\n",group:"Account Management"},transfer:{type:"array",items:[{name:"blockstack_id",type:"string",realtype:"on-chain-blockstack_id",pattern:Y},{name:"new_id_address",type:"string",realtype:"id-address",pattern:F},{name:"keep_zonefile",type:"string",realtype:"true-or-false",pattern:"^true$|^false$"},{name:"owner_key",type:"string",realtype:"private_key",pattern:""+W},{name:"payment_key",type:"string",realtype:"private_key",pattern:""+W}],minItems:5,maxItems:5,help:'Transfer a Blockstack ID to a new address (`NEW_ID_ADDRESS`).  Optionally preserve its zone file (`KEEP_ZONEFILE`).  If the command succeeds, it will print a transaction ID.  Once the transaction reaches 7 confirmations, the Blockstack peer network will transfer the Blockstack ID to the new ID-address.  You can track the transaction\'s confirmations with the `get_confirmations` command.\n\nNOTE: This command only works for on-chain Blockstack IDs.  It does not yet work for subdomains.\n\nAn ID-address can only own up to 25 Blockstack IDs.  In practice, you should generate a new owner key and ID-address for each name you receive (via the `get_owner_keys` command).\n\nExample:\n\n    $ # Tip: you can get your owner key from your backup phrase with "get_owner_keys".\n    $ # Tip: you can get your payment key from your backup phrase with "get_payment_key".\n    $ export OWNER="136ff26efa5db6f06b28f9c8c7a0216a1a52598045162abfe435d13036154a1b01"\n    $ export PAYMENT="bfeffdf57f29b0cc1fab9ea197bb1413da2561fe4b83e962c7f02fbbe2b1cd5401"\n    $ stx transfer example.id ID-1HJA1AJvWef21XbQVL2AcTv71b6JHGPfDX true "$OWNER" "$PAYMENT"\n    e09dc158e586d0c09dbcdcba917ec394e6c6ac2b9c91c4b55f32f5973e4f08fc\n\n',group:"Blockstack ID Management"},tx_preorder:{type:"array",items:[{name:"blockstack_id",type:"string",realtype:"on-chain-blockstack_id",pattern:Y},{name:"id_address",type:"string",realtype:"id-address",pattern:F},{name:"payment_key",type:"string",realtype:"private_key",pattern:""+W}],minItems:3,maxItems:3,help:'Generate and send `NAME_PREORDER` transaction, for a Blockstack ID to be owned by a given `ID_ADDRESS`.  The name cost will be paid for by the gven `PAYMENT_KEY`.  The ID-address should be a never-before-seen address, since it will be used as a salt when generating the name preorder hash.\n\nThis is a low-level command that only experienced Blockstack developers should use.  If you just want to register a name, use the "register" command.\n',group:"Blockstack ID Management"},tx_register:{type:"array",items:[{name:"blockstack_id",type:"string",realtype:"on-chain-blockstack_id",pattern:Y},{name:"id_address",type:"string",realtype:"id-address",pattern:F},{name:"payment_key",type:"string",realtype:"private_key",pattern:""+W},{name:"zonefile",type:"string",realtype:"path"},{name:"zonefile_hash",type:"string",realtype:"zoenfile_hash",pattern:"^([0-9a-f]{40})$"}],minItems:3,maxItems:5,help:"Generate and send a NAME_REGISTRATION transaction, assigning the given `BLOCKSTACK_ID` to the given `ID_ADDRESS`.  Optionally pair the Blockstack ID with a zone file (`ZONEFILE`) or the hash of the zone file (`ZONEFILE_HASH`).  You will need to push the zone file to the peer network after the transaction confirms (i.e. with `zonefile_push`).\n\nThis is a low-level command that only experienced Blockstack developers should use.  If you just want to register a name, you should use the `register` command.",group:"Blockstack ID Management"},update:{type:"array",items:[{name:"blockstack_id",type:"string",realtype:"on-chain-blockstack_id",pattern:Y},{name:"zonefile",type:"string",realtype:"path"},{name:"owner_key",type:"string",realtype:"private_key",pattern:""+W},{name:"payment_key",type:"string",realtype:"private_key",pattern:""+W},{name:"zonefile_hash",type:"string",realtype:"zonefile_hash",pattern:"^([0-9a-f]{40})$"}],minItems:4,maxItems:5,help:'Update the zonefile for an on-chain Blockstack ID.  You can generate a well-formed zone file using the `make_zonefile` command, or you can supply your own.  Zone files can be up to 40Kb.  Alternatively, if you only want to announce the hash of a zone file (or any arbitrary 20-byte hex string), you can do so by passing a value for `ZONEFILE_HASH`.  If `ZONEFILE_HASH` is given, then the value for `ZONEFILE` will be ignored.\n\nIf this command succeeds, it prints out a transaction ID.  Once the transaction has 7 confirmations, the Blockstack peer network will set the name\'s zone file hash to the `RIPEMD160`(SHA256) hash of the given zone file (or it will simply set it to the hash given in `ZONEFILE_HASH`).\n\nOnce the transaction confirms, you will need to replicate the zone file to the Blockstack peer network.  This can be done with the `zonefile_push` command.  Until you do so, no Blockstack clients will be able to obtain the zone file announced by this command.\n\nExample:\n\n    $ # Tip: you can get your owner and payment keys from your 12-word backup phrase using the get_owner_keys and get_payment_key commands.\n    $ export OWNER="6e50431b955fe73f079469b24f06480aee44e4519282686433195b3c4b5336ef01"\n    $ export PAYMENT="bfeffdf57f29b0cc1fab9ea197bb1413da2561fe4b83e962c7f02fbbe2b1cd5401"\n    $ # make a new zone file\n    $ stx make_zonefile example.id ID-1ArdkA2oLaKnbNbLccBaFhEV4pYju8hJ82 https://my.gaia.hub/hub > /tmp/zonefile.txt\n    \n    $ # update the name to reference this new zone file\n    $ stx update example.id /tmp/zonefile.txt "$OWNER" "$PAYMENT"\n    8e94a5b6647276727a343713d3213d587836e1322b1e38bc158406f5f8ebe3fd\n    \n    $ # check confirmations\n    $ stx get_confirmations e41ce043ab64fd5a5fd382fba21acba8c1f46cbb1d7c08771ada858ce7d29eea\n    {\n      "blockHeight": 567890,\n      "confirmations": 7,\n    }\n    \n    $ # send out the new zone file to a Blockstack peer\n    $ stx -H https://core.blockstack.org zonefile_push /tmp/zonefile.txt\n    [\n      "https://core.blockstack.org"\n    ]\n\n',group:"Blockstack ID Management"},whois:{type:"array",items:[{name:"blockstack_id",type:"string",realtype:"blockstack_id",pattern:Y+"|"+Z}],minItems:1,maxItems:1,help:'Look up the zone file and owner of a Blockstack ID.  Works with both on-chain and off-chain names.\n\nExample:\n\n    $ stx whois example.id\n    {\n      "address": "1ArdkA2oLaKnbNbLccBaFhEV4pYju8hJ82",\n      "block_renewed_at": 567890,\n      "blockchain": "bitcoin",\n      "expire_block": 687010,\n      "grace_period": false,\n      "last_transaction_height": "567891",\n      "last_txid": "a564aa482ee43eb2bdfb016e01ea3b950bab0cfa39eace627d632e73c7c93e48",\n      "owner_script": "76a9146c1c2fc3cf74d900c51e9b5628205130d7b98ae488ac",\n      "renewal_deadline": 692010,\n      "resolver": null,\n      "status": "registered",\n      "zonefile": "$ORIGIN example.id\\n$TTL 3600\\n_http._tcp URI 10 1 \\"https://gaia.blockstack.org/hub/1ArdkA2oLaKnbNbLccBaFhEV4pYju8hJ82/profile.json\\"\\n",\n      "zonefile_hash": "ae4ee8e7f30aa890468164e667e2c203266f726e"\n    }\n\n',group:"Querying Blockstack IDs"},zonefile_push:{type:"array",items:[{name:"zonefile",type:"string",realtype:"path"}],minItems:1,maxItems:1,help:'Push a zone file on disk to the Blockstack peer network.  The zone file must correspond to a zone file hash that has already been announced.  That is, you use this command in conjunction with the `register`, `update`, `renew`, or `name_import` commands.\n\nExample:\n\n    $ stx -H https://core.blockstack.org zonefile_push /path/to/zonefile.txt\n    [\n      "https://core.blockstack.org"\n    ]\n\n',group:"Peer Services"},get_did_configuration:{type:"array",items:[{name:"blockstack_id",type:"string",realtype:"blockstack_id",pattern:Y+"|"+Z},{name:"domain",type:"string",realtype:"domain",pattern:Y+"|"+Z},{name:"owner_key",type:"string",realtype:"private_key",pattern:"^([0-9a-f]{64,66})$"}],minItems:3,maxItems:3,help:'Creates a DID configuration for the given blockstack id and domain to create a link between both.The specification is define by the Decentralized Identity Foundation at https://identity.foundation/specs/did-configuration/\nThe DID configuration should be placed in the json file ".well_known/did_configuration"\nExample:\n\n    $ # Tip: you can get your owner keys from your 12-word backup phrase using the get_owner_keys command.\n    $ export PRIVATE_OWNER_KEY="6e50431b955fe73f079469b24f06480aee44e4519282686433195b3c4b5336ef01"\n    $ stx get_did_configuration public_profile_for_testing.id.blockstack helloblockstack.com PRIVATE_OWNER_KEY\n    {\n       "entries": [\n          {\n            "did": "did:stack:v0:SewTRvPZUEQGdr45QvEnVMGHZBhx3FT1Jj-0",\n            "jwt": "eyJ0eXAiOiJKV1QiL...."\n          }\n       ]\n    }\n\nThe decoded content of the jwt above is \n    {\n       "header": {\n          "typ": "JWT", "alg": "ES256K"\n       },\n       "payload": {\n           "iss": "did:stack:v0:SewTRvPZUEQGdr45QvEnVMGHZBhx3FT1Jj-0",\n           "domain": "helloblockstack.com",\n           "exp": "2020-12-07T13:05:28.375Z"\n       },\n       "signature": "NDY7ISzgAHKcZDvbxzTxQdVnf6xWMZ46w5vHcDpNx_1Fsyip0M6E6GMq_2YZ-gUcwmwlo8Ag9jgnfOkaBIFpoQ"\n    }\n\n',group:"DID"}},additionalProperties:!1,strict:!0},ee="Usage: "+n.argv[1]+' [options] command [command arguments]\nOptions can be:\n    -c                  Path to a config file (defaults to\n                        ~/.blockstack-cli.conf)\n\n    -d                  Print verbose debugging output\n\n    -e                  Estimate the BTC cost of an transaction (in satoshis).\n                        Do not generate or send any transactions.\n\n    -m MAGIC_BYTES      Use an alternative magic byte string instead of "id".\n\n    -t                  Use the public testnet instead of mainnet.\n\n    -i                  Use integration test framework instead of mainnet.\n\n    -U                  Unsafe mode.  No safety checks will be performed.\n\n    -x                  Do not broadcast a transaction.  Only generate and\n                        print them to stdout.\n\n    -B BURN_ADDR        Use the given namespace burn address instead of the one\n                        obtained from the Blockstack network (DANGEROUS)\n\n    -D DENOMINATION     Denominate the price to pay in the given units\n                        (DANGEROUS)\n\n    -C CONSENSUS_HASH   Use the given consensus hash instead of one obtained\n                        from the network\n\n    -F FEE_RATE         Use the given transaction fee rate instead of the one\n                        obtained from the Bitcoin network\n\n    -G GRACE_PERIOD     Number of blocks in which a name can be renewed after it\n                        expires (DANGEROUS)\n\n    -H URL              Use an alternative Blockstack Core API endpoint.\n\n    -I URL              Use an alternative Blockstack Core Indexer endpoint.\n\n    -M MAX_INDEX        Maximum keychain index to use when searching for an identity address\n                        (default is 256).\n\n    -N PAY2NS_PERIOD    Number of blocks in which a namespace receives the registration\n                        and renewal fees after it is created (DANGEROUS)\n\n    -P PRICE            Use the given price to pay for names or namespaces\n                        (DANGEROUS)\n\n    -T URL              Use an alternative Blockstack transaction broadcaster.\n    \n    -X URL              Use an alternative UTXO service endpoint.\n\n    -u USERNAME         A username to be passed to bitcoind RPC endpoints\n\n    -p PASSWORD         A password to be passed to bitcoind RPC endpoints\n';function te(e,t,n){for(var r=n.split("\n"),a="",o="",i=0;i<e;i++)o+=" ";for(var s=0;s<r.length;s++){var c=o.slice(),p=r[s].split(/ /).filter((function(e){return e.length>0}));if(0!=p.length)if("$"!==p[0]&&"    "!==r[s].substring(0,4)){for(var u=0;u<p.length;u++){if(0===p[u].length){c+="\n";break}c.split("\n").slice(-1)[0].length+1+p[u].length>t&&(c+="\n",c+=o),c+=p[u]+" "}a+=c+"\n"}else a+=r[s]+"\n";else a+="\n"}return a}function ne(){for(var e={},t=Object.keys(X.properties),n=0;n<t.length;n++){var r=t[n],a=X.properties[r].group;e.hasOwnProperty(a)?e[a].push({command:r,help:X.properties[r].help}):e[a]=[{command:r,help:X.properties[r].help}]}return e}function re(){for(var e=ne(),t=Object.keys(e).sort(),r="All commands (run '"+n.argv[1]+" help COMMAND' for details):\n",a=0;a<t.length;a++){r+="  "+t[a]+": ";for(var o=[],i=0;i<e[t[a]].length;i++)o.push(e[t[a]][i].command);r+="\n    "+te(4,70,o.join(" ")).split("\n    ").map((function(e){return e.trim().replace(/ /g,", ")})).join("\n    ")+"\n",r+="\n"}return r.trim()}function ae(e){var t="";if("all"===e)return function(){for(var e=ne(),t=Object.keys(e).sort(),n=[],r=[],a=0;a<t.length;a++)for(var o=0;o<e[t[a]].length;o++)r.push(e[t[a]][o].command);r=r.sort();for(var i=0;i<r.length;i++)n.push(ae(r[i]).trim());return n.join("\n\n")}();if(!e)return re();var n=X.properties[e];if(!n||"help"===e)return re();var r=n.help,a=function(e,t){var n="",r="",a="",o=X.properties[e];n="  "+e+" ";for(var i=0;i<t.length;i++){if(!t[i].name)throw console.log(e),console.log(t[i]),new Error('BUG: command info is missing a "name" field');n+=i+1<=o.minItems?t[i].name.toUpperCase()+" ":"["+t[i].name.toUpperCase()+"] "}r="  "+e+" ";for(var s=0;s<e.length+3;s++)a+=" ";for(var c=0;c<t.length;c++){if(!t[c].realtype)throw console.log(e),console.log(t[c]),new Error('BUG: command info is missing a "realtype" field');r+=c+1<=o.minItems?"--"+t[c].name+" "+t[c].realtype.toUpperCase():"[--"+t[c].name+" "+t[c].realtype.toUpperCase()+"]",r+="\n",r+=a}return{raw:n,kw:r}}(e,n.items),o=te(2,78,r);return t+="Command: "+e+"\n",t+="Usage:\n",t+=a.raw+"\n",t+=a.kw+"\n",(t+=o).trim()+"\n"}function oe(e,t){if(null==e[t])return null;if("string"==typeof e[t])return""+e[t];throw new Error("Option '"+t+"' is not a string")}function ie(e,t){if("boolean"==typeof e[t]||null===e[t])return!!e[t];throw new Error("Option '"+t+"' is not a boolean")}function se(e,t){var n=e[t];if(null==n)return null;if(function(e){return e instanceof Array&&e.map((function(e){return"string"==typeof e})).reduce((function(e,t){return e&&t}),!0)}(n))return n;throw new Error("Option '"+t+"' is not a string array")}function ce(t,n){return e.decryptMnemonic(t,n)}var pe=require("zone-file"),ue=function(){function e(e){void 0===e&&(e=""),this.address=e,this.isComplete=!1}var t=e.prototype;return t.getAddress=function(){var e=this;return Promise.resolve().then((function(){return e.address}))},t.signTransaction=function(e,t){return Promise.resolve().then((function(){}))},t.signerVersion=function(){return 0},e}(),le=function(e){function t(){return e.apply(this,arguments)||this}return D(t,e),t}(ue),de=function(n){function r(r,o){var i;(i=n.call(this)||this).redeemScript=Buffer.from(r,"hex"),i.privateKeys=o,i.isComplete=!0;try{var s=t.script.decompile(i.redeemScript);i.m=parseInt(t.script.toASM([s[0]]).slice(3),10),i.address=t.address.toBase58Check(t.crypto.hash160(i.redeemScript),e.config.network.layer1.scriptHash)}catch(e){throw a.error(e),new Error("Improper redeem script for multi-sig input.")}return i}D(r,n);var o=r.prototype;return o.getAddress=function(){var e=this;return Promise.resolve().then((function(){return e.address}))},o.signTransaction=function(t,n){var r=this;return Promise.resolve().then((function(){r.privateKeys.slice(0,r.m).forEach((function(a){var o=e.hexStringToECPair(a);t.sign(n,o,r.redeemScript)}))}))},o.signerVersion=function(){return 0},r}(ue),fe=function(n){function r(r,a,o,i){var s;return(s=n.call(this)||this).redeemScript=Buffer.from(r,"hex"),s.witnessScript=Buffer.from(a,"hex"),s.address=t.address.toBase58Check(t.crypto.hash160(s.redeemScript),e.config.network.layer1.scriptHash),s.privateKeys=i,s.m=o,s.isComplete=!0,s}D(r,n);var a=r.prototype;return a.getAddress=function(){var e=this;return Promise.resolve().then((function(){return e.address}))},a.findUTXO=function(e,t,n){var r=e.__TX,a=new Buffer(r.ins[t].hash.slice()),o=r.ins[t].index;a.reverse();for(var i=a.toString("hex"),s=0;s<n.length;s++)if(n[s].tx_hash===i&&n[s].tx_output_n===o){if(!n[s].value)throw new Error("UTXO for hash="+i+" vout="+o+" has no value");return n[s]}throw new Error("No UTXO for input hash="+i+" vout="+o)},a.signTransaction=function(t,n){var r=this;return Promise.resolve().then((function(){return r.getAddress()})).then((function(t){return e.config.network.getUTXOs(t)})).then((function(a){var o=r.findUTXO(t,n,a);if(1===r.m){var i=e.hexStringToECPair(r.privateKeys[0]);t.sign(n,i,r.redeemScript,void 0,o.value)}else r.privateKeys.slice(0,r.m).forEach((function(a){var i=e.hexStringToECPair(a);t.sign(n,i,r.redeemScript,void 0,o.value,r.witnessScript)}))}))},a.signerVersion=function(){return 0},r}(ue);function he(e){if(e.match("^nosign:[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{1,35}$"))return function(e){if(!e.startsWith("nosign:"))throw new Error("Invalid nosign string");var t=e.slice("nosign:".length);return new le(t)}(e);if(e.match("^([0-9a-f]{64,66})$"))return e;if(e.match("^([0-9]+),([0-9a-f]{64,66},)*([0-9a-f]{64,66})$"))return function(e){var n=e.match("^([0-9]+),([0-9a-f]{64,66},)*([0-9a-f]{64,66})$");if(!n)throw new Error("Invalid multisig private key string");for(var r=parseInt(n[1]),a=e.split(","),o=[],i=1;i<256;i++){var s=a[i];if(!s)break;if(!s.match("^([0-9a-f]{64,66})$"))throw new Error("Invalid private key string");o.push(s)}var c=o.map((function(e){return Buffer.from(ye(e),"hex")})),p=t.payments.p2ms({m:r,pubkeys:c});return new de(p.output.toString("hex"),o)}(e);if(e.match("^segwit:p2sh:([0-9]+),([0-9a-f]{64,66},)*([0-9a-f]{64,66})$"))return function(e){var n=e.match("^segwit:p2sh:([0-9]+),([0-9a-f]{64,66},)*([0-9a-f]{64,66})$");if(!n)throw new Error("Invalid segwit p2sh private key string");for(var r=parseInt(n[1]),a=e.split(","),o=[],i=1;i<256;i++){var s=a[i];if(!s)break;if(!s.match("^([0-9a-f]{64,66})$"))throw new Error("Invalid private key string");o.push(s)}var c,p=o.map((function(e){return Buffer.from(ye(e),"hex")})),u="";if(1===r){var l=t.payments.p2wpkh({pubkey:p[0]});c=t.payments.p2sh({redeem:l}).redeem.output.toString("hex")}else{var d=t.payments.p2ms({m:r,pubkeys:p}),f=t.payments.p2wsh({redeem:d});c=t.payments.p2sh({redeem:f}).redeem.output.toString("hex"),u=f.redeem.output.toString("hex")}return new fe(c,u,r,o)}(e);throw new Error("Unparseable private key")}function me(e,t){return void 0===t&&(t=!1),!t&&process.stdout.isTTY||t&&process.stderr.isTTY?JSON.stringify(e,null,2):JSON.stringify(e)}function ye(t){return e.hexStringToECPair(t).publicKey.toString("hex")}function ge(t,n){if(void 0!==n.signerVersion)return n.address;var r=e.hexStringToECPair(n);return t.coerceAddress(e.ecPairToAddress(r))}function be(e){return 66==e.length&&"01"===e.slice(-2)?e.substring(0,64):e}function ke(t,n){var r=e.signProfileToken(t,n);return me([e.wrapProfileToken(r)])}function we(e,t){return e.getNameInfo(t).then((function(e){return e})).catch((function(e){if("Name not found"===e.message)return null;throw e}))}function ve(e,t,n){return _e.apply(this,arguments)}function _e(){return(_e=R(M.mark((function t(n,r,a){var o,i,s,c,p,u,l,d,f;return M.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return void 0===a&&(a=!0),o=we(n,r),i=a?e.lookupProfile(r).catch((function(){return null})):Promise.resolve().then((function(){return null})),s=o.then((function(e){return e?e.zonefile:null})),t.next=6,Promise.all([i,s,o]);case 6:if(p=(c=t.sent)[1],l=c[0],u=c[2]){t.next=13;break}throw new Error("Name not found");case 13:if(!u.hasOwnProperty("grace_period")||!u.grace_period){t.next=15;break}throw new Error("Name is expired at block "+u.expire_block+" and must be renewed by block "+u.renewal_deadline);case 15:d=null;try{(f=pe.parseZoneFile(p)).uri&&f.hasOwnProperty("$origin")&&(d=e.getTokenFileUrl(f))}catch(e){l=null}return t.abrupt("return",{zonefile:p,profile:l,profileUrl:d});case 19:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function xe(e,t){var n=new w.Writable({write:function(e,t,n){n()}}),r=k.createInterface({input:process.stdin,output:n,terminal:!0});process.stderr.write(e),r.question("",(function(e){r.close(),process.stderr.write("\n"),t(e)}))}function Ae(e,t){return Ie.apply(this,arguments)}function Ie(){return(Ie=R(M.mark((function e(t,n){var r;return M.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!(t.split(/ +/g).length>1)){e.next=4;break}return e.abrupt("return",t);case 4:return e.next=6,new Promise((function(e,t){process.stdin.isTTY||n?xe("Enter password: ",(function(t){e(t)})):t(new Error("Password argument required in non-interactive mode"))}));case 6:return r=e.sent,e.next=9,ce(Buffer.from(t,"base64"),r);case 9:return e.abrupt("return",e.sent);case 10:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function Ee(e,t){return Pe.apply(this,arguments)}function Pe(){return(Pe=R(M.mark((function e(t,n){return M.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!n.match(F)){e.next=4;break}return e.abrupt("return",n);case 4:return e.next=6,t.getNameInfo(n);case 6:return e.abrupt("return","ID-"+e.sent.address);case 8:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function Se(e,t,n){return Te.apply(this,arguments)}function Te(){return(Te=R(M.mark((function e(t,n,r){var a,o;return M.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:a=0;case 1:return e.next=4,Ye(t,n,a);case 4:if((o=e.sent).idAddress!==r){e.next=7;break}return e.abrupt("return",o.privateKey);case 7:a++,e.next=1;break;case 10:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function Ne(e,t,n,r){return $e.apply(this,arguments)}function $e(){return($e=R(M.mark((function e(t,n,r,a){var o,i,s;return M.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Ae(a);case 2:return o=e.sent,e.next=5,Ee(t,n);case 5:return i=e.sent,e.next=8,Qe(t,o,i,r);case 8:return s=Je(t,e.sent),e.next=12,Se(t,o,i);case 12:return e.abrupt("return",{appPrivateKey:s,ownerPrivateKey:e.sent,mnemonic:o});case 15:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function Be(e){for(var t=[],n=0;n<e.length;n++)t.push(Ue(e[n]));return t}function Ue(e){var t=e.name,n=e.type,r=f.getTypeString(n);if(f.isClarityAbiPrimitive(n)){if("uint128"===n)return{type:"input",name:t,message:'Enter value for function argument "'+t+'" of type '+r};if("int128"===n)return{type:"input",name:t,message:'Enter value for function argument "'+t+'" of type '+r};if("bool"===n)return{type:"list",name:t,message:'Enter value for function argument "'+t+'" of type '+r,choices:["True","False"]};if("principal"===n)return{type:"input",name:t,message:'Enter value for function argument "'+t+'" of type '+r};throw new Error("Contract function contains unsupported Clarity ABI type: "+r)}if(f.isClarityAbiBuffer(n))return{type:"input",name:t,message:'Enter value for function argument "'+t+'" of type '+r};throw f.isClarityAbiResponse(n)||f.isClarityAbiOptional(n)||f.isClarityAbiTuple(n)||f.isClarityAbiList(n),new Error("Contract function contains unsupported Clarity ABI type: "+r)}function Ce(e,t){for(var n=[],r=0;r<t.length;r++){var a=t[r];n.push(Re(e[a.name],a))}return n}function Re(e,t){var n=t.type,r=f.getTypeString(n);if(f.isClarityAbiPrimitive(n)){if("uint128"===n)return f.uintCV(e);if("int128"===n)return f.intCV(e);if("bool"===n)return"True"==e?f.trueCV():f.falseCV();if("principal"===n)return f.standardPrincipalCV(e);throw new Error("Contract function contains unsupported Clarity ABI type: "+r)}if(f.isClarityAbiBuffer(n))return f.bufferCVFromString(e);throw f.isClarityAbiResponse(n)||f.isClarityAbiOptional(n)||f.isClarityAbiTuple(n)||f.isClarityAbiList(n),new Error("Contract function contains unsupported Clarity ABI type: "+r)}function De(e,t){return t.version===f.TransactionVersion.Testnet?"https://testnet-explorer.now.sh/txid/0x"+e:"https://explorer.blockstack.org/txid/0x"+e}var Ke=require("c32check");function Ge(e){return Oe.apply(this,arguments)}function Oe(){return(Oe=R(M.mark((function t(n){return M.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,c.mnemonicToSeed(n);case 2:return t.abrupt("return",new e.BlockstackWallet(x.fromSeed(t.sent)));case 4:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function Me(n){return e.ecPairToHexString(t.ECPair.fromPrivateKey(n.privateKey))}function Ye(e,t,n,r){return He.apply(this,arguments)}function He(){return(He=R(M.mark((function t(n,r,a,o){var i,s,c;return M.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return void 0===o&&(o="v0.10-current"),t.next=3,Ge(r);case 3:return i=t.sent.getIdentityAddressNode(a),s=n.coerceAddress(e.BlockstackWallet.getAddressFromBIP32Node(i)),c=Me(i),t.abrupt("return",{privateKey:c,version:o,index:a,idAddress:"ID-"+s});case 8:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function Le(e,t){return Fe.apply(this,arguments)}function Fe(){return(Fe=R(M.mark((function e(t,n){var r,a,o;return M.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Ge(n);case 2:return r=e.sent.getBitcoinPrivateKey(0),a=ge(t,r),o={privateKey:r,address:{BTC:a,STACKS:Ke.b58ToC32(a)},index:0},e.abrupt("return",o);case 7:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function ze(e,t){return We.apply(this,arguments)}function We(){return(We=R(M.mark((function n(r,a){var o,i,s,p,u,l,d,f,h;return M.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,c.mnemonicToSeed(a);case 2:return o=x.fromSeed(n.sent),i=o.derivePath("m/44'/5757'/0'/0/0"),s=t.ECPair.fromPrivateKey(i.privateKey),p=e.ecPairToHexString(s),u=ge(r,p),r.isTestnet()?(d=t.payments.p2pkh({pubkey:s.publicKey,network:t.networks.regtest}),l=d.address):(f=t.payments.p2pkh({pubkey:s.publicKey,network:t.networks.bitcoin}),l=f.address),h={privateKey:p,address:Ke.b58ToC32(u),btcAddress:l,index:0},n.abrupt("return",h);case 11:case"end":return n.stop()}}),n)})))).apply(this,arguments)}function je(e,t,n,r){return Ze.apply(this,arguments)}function Ze(){return(Ze=R(M.mark((function t(n,r,a,o){var i,s,c,p;return M.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(o||(o=Ot()),"ID-"===a.substring(0,3)){t.next=3;break}throw new Error("Not an identity address");case 3:return t.next=5,Ge(r);case 5:i=t.sent,s=0;case 7:if(!(s<o)){t.next=15;break}if(c=i.getIdentityAddressNode(s),p=e.BlockstackWallet.getAddressFromBIP32Node(c),n.coerceAddress(p)!==n.coerceAddress(a.slice(3))){t.next=12;break}return t.abrupt("return",s);case 12:s++,t.next=7;break;case 15:return t.abrupt("return",-1);case 16:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function Qe(e,t,n,r,a){return qe.apply(this,arguments)}function qe(){return(qe=R(M.mark((function t(n,r,a,o,i){var s,c,p,u,l;return M.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(i||(i=-1),!(i<0)){t.next=7;break}return t.next=4,je(n,r,a);case 4:if(!((i=t.sent)<0)){t.next=7;break}throw new Error("Identity address does not belong to this keychain");case 7:return t.next=9,Ge(r);case 9:return c=(s=t.sent).getIdentityAddressNode(i),p=e.BlockstackWallet.getAppsNode(c),u=e.BlockstackWallet.getLegacyAppPrivateKey(p.toBase58(),s.getIdentitySalt(),o),l={keyInfo:{privateKey:"TODO",address:"TODO"},legacyKeyInfo:{privateKey:u,address:ge(n,u+"01")},ownerKeyIndex:i},t.abrupt("return",l);case 15:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function Je(e,t,n){if(n){if(e.coerceMainnetAddress(t.keyInfo.address)===e.coerceMainnetAddress(n))return t.keyInfo.privateKey;if(e.coerceMainnetAddress(t.legacyKeyInfo.address)===e.coerceMainnetAddress(n))return t.legacyKeyInfo.privateKey}return"TODO"!==t.keyInfo.privateKey&&t.keyInfo.privateKey?t.keyInfo.privateKey:t.legacyKeyInfo.privateKey}var Ve=require("bn.js"),Xe=function(){function e(e,t){t=Object.assign({},{consensusHash:null,feeRate:null,namespaceBurnAddress:null,priceToPay:null,priceUnits:null,receiveFeesPeriod:null,gracePeriod:null,altAPIUrl:t.nodeAPIUrl,altTransactionBroadcasterUrl:e.broadcastServiceUrl,nodeAPIUrl:t.nodeAPIUrl},t),this.legacyNetwork=new A.BlockstackNetwork(t.nodeAPIUrl,t.altTransactionBroadcasterUrl,e.btc,e.layer1),this.consensusHash=t.consensusHash,this.feeRate=t.feeRate,this.namespaceBurnAddress=t.namespaceBurnAddress,this.priceToPay=t.priceToPay,this.priceUnits=t.priceUnits,this.receiveFeesPeriod=t.receiveFeesPeriod,this.gracePeriod=t.gracePeriod,this.nodeAPIUrl=t.nodeAPIUrl,this.optAlwaysCoerceAddress=!1}var n=e.prototype;return n.isMainnet=function(){return this.legacyNetwork.layer1.pubKeyHash===t.networks.bitcoin.pubKeyHash},n.isTestnet=function(){return this.legacyNetwork.layer1.pubKeyHash===t.networks.testnet.pubKeyHash},n.setCoerceMainnetAddress=function(e){this.optAlwaysCoerceAddress=e},n.coerceMainnetAddress=function(e){var n=t.address.fromBase58Check(e),r=n.version,a=0;return r===this.legacyNetwork.layer1.pubKeyHash?a=0:r===this.legacyNetwork.layer1.scriptHash&&(a=5),t.address.toBase58Check(n.hash,a)},n.getFeeRate=function(){return this.feeRate?Promise.resolve(this.feeRate):this.isTestnet()?Promise.resolve(Math.floor(1e-5*1e8)):this.legacyNetwork.getFeeRate()},n.getConsensusHash=function(){var e=this;return this.consensusHash?new Promise((function(t){return t(e.consensusHash)})):this.legacyNetwork.getConsensusHash().then((function(e){return e}))},n.getGracePeriod=function(){var e=this;return this.gracePeriod?new Promise((function(t){return t(e.gracePeriod)})):this.legacyNetwork.getGracePeriod().then((function(e){return e}))},n.getNamePrice=function(e){var t=this;return this.priceUnits&&this.priceToPay?new Promise((function(e){return e({units:String(t.priceUnits),amount:new Ve(t.priceToPay)})})):this.legacyNetwork.getNamePrice(e).then((function(e){return e.units||(e={units:"BTC",amount:new Ve(String(e))}),e}))},n.getNamespacePrice=function(e){var t=this;return this.priceUnits&&this.priceToPay?new Promise((function(e){return e({units:String(t.priceUnits),amount:new Ve(String(t.priceToPay))})})):Object.prototype.getNamespacePrice.call(this,e).then((function(e){return e.units||(e={units:"BTC",amount:new Ve(String(e))}),e}))},n.getNamespaceBurnAddress=function(e,t,n){var r=this;return void 0===t&&(t=!0),void 0===n&&(n=-1),this.namespaceBurnAddress&&t?new Promise((function(e){return e(r.namespaceBurnAddress)})):Promise.all([$.default(this.legacyNetwork.blockstackAPIUrl+"/v1/namespaces/"+e),this.legacyNetwork.getBlockHeight()]).then((function(t){var n=t[0],r=t[1];if(404===n.status)throw new Error("No such namespace '"+e+"'");if(200!==n.status)throw new Error("Bad response status: "+n.status);return Promise.all([n.json(),r])})).then((function(e){var t=e[0],a="1111111111111111111114oLvT2";return 2===t.version&&(n<0&&(n=r.receiveFeesPeriod),t.reveal_block+n>e[1]&&(a=t.address)),a})).then((function(e){return r.legacyNetwork.coerceAddress(e)}))},n.getNameInfo=function(e){var t=this;return this.legacyNetwork.getNameInfo(e).then((function(e){return{address:t.optAlwaysCoerceAddress?t.coerceMainnetAddress(e.address):e.address,blockchain:e.blockchain,did:e.did,expire_block:e.expire_block,grace_period:e.grace_period,last_txid:e.last_txid,renewal_deadline:e.renewal_deadline,resolver:e.resolver,status:e.status,zonefile:e.zonefile,zonefile_hash:e.zonefile_hash}}))},n.getBlockchainNameRecord=function(e){var t=this;return $.default(this.legacyNetwork.blockstackAPIUrl+"/v1/blockchains/bitcoin/names/"+e).then((function(e){if(200!==e.status)throw new Error("Bad response status: "+e.status);return e.json()})).then((function(e){for(var n={},r=0,a=["address","importer_address","recipient_address"];r<a.length;r++){var o=a[r];e.hasOwnProperty(o)&&e[o]&&(n[o]=t.legacyNetwork.coerceAddress(e[o]))}return Object.assign(e,n)}))},n.getNameHistory=function(e,t){var n=this;return $.default(this.legacyNetwork.blockstackAPIUrl+"/v1/names/"+e+"/history?page="+t).then((function(e){if(200!==e.status)throw new Error("Bad response status: "+e.status);return e.json()})).then((function(e){for(var t={},r=0,a=Object.keys(e);r<a.length;r++){for(var o,i=a[r],s=[],c=G(e[i]);!(o=c()).done;){for(var p,u=o.value,l={},d=0,f=["address","importer_address","recipient_address"];d<f.length;d++){var h=f[d];u.hasOwnProperty(h)&&u[h]&&(l[h]=n.legacyNetwork.coerceAddress(u[h]))}p=Object.assign(u,l),s.push(p)}t[i]=s}return t}))},n.coerceAddress=function(e){return this.legacyNetwork.coerceAddress(e)},n.getAccountHistoryPage=function(e,t){return this.legacyNetwork.getAccountHistoryPage(e,t)},n.broadcastTransaction=function(e){return this.legacyNetwork.broadcastTransaction(e)},n.broadcastZoneFile=function(e,t){return this.legacyNetwork.broadcastZoneFile(e,t)},n.getNamesOwned=function(e){return this.legacyNetwork.getNamesOwned(e)},e}(),et=require("zone-file");function tt(e,t){var n=ye(be(e)+"01"),r=s.randomBytes(16).toString("hex"),a={childToAssociate:n,iss:ye(t),exp:10713600+(new Date).getTime()/1e3,salt:r};return new v.TokenSigner("ES256K",t).sign(a)}function nt(t,n,r,a){if(!t.isMainnet())throw new Error("Gaia only works with mainnet networks.");var o;a&&n&&(o=tt(n,a));var i=function(t,n,r){return window.localStorage.setItem("blockstack-transit-private-key","f33fb466154023aba2003c17158985aa6603db68db0f1afc0fcf1d641ea6c2cb"),e.makeAuthResponse("24004db06ef6d26cdd2b0fa30b332a1b10fa0ba2b07e63505ffc2a9ed7df22b4",{type:"@Person",accounts:[]},null,{},null,t,void 0,"0496345da77fb5e06757b9c4fd656bf830a3b293f245a6cc2f11f8334ebb690f19582124f4b07172eb61187afba4514828f866a8a223e0d5c539b2e38a59ab8bb3",n,e.config.network.blockstackAPIUrl,r)}(n,r,o);return e.handlePendingSignIn(t.legacyNetwork.blockstackAPIUrl+"/v1/names/",i,"f33fb466154023aba2003c17158985aa6603db68db0f1afc0fcf1d641ea6c2cb")}function rt(e,t,n,r){var a,o=e.coerceMainnetAddress(ge(e,be(n)+"01")),i=e.coerceMainnetAddress(ge(e,be(n)));return r&&(a=tt(n,r)),I.connectToGaiaHub(t,be(n),a).then((function(t){if(e.coerceMainnetAddress(t.address)===o)t.address=o;else{if(e.coerceMainnetAddress(t.address)!==i)throw new Error("Invalid private key: "+e.coerceMainnetAddress(t.address)+" is neither "+o+" or "+i);t.address=i}return t}))}function at(t,n,r,a,o){var i=n.map((function(e){var t=b.parse(e);return t.protocol&&t.host?String(t.protocol)+"//"+String(t.host):""})).filter((function(e){return e.length>0})).map((function(n){return function(t,n,r,a,o){var i;return rt(t,n,a).then((function(n){return function(t,n,r){return r&&null!=r?t.getNameInfo(r).then((function(t){var a;try{var o=et.parseZoneFile(t.zonefile);o.uri&&o.hasOwnProperty("$origin")&&(a=e.getTokenFileUrl(o))}catch(e){throw new Error("Could not determine profile URL for "+String(r)+": could not parse zone file")}if(null==a)throw new Error("Could not determine profile URL for "+String(r)+": no URL in zone file");var i=""+n.url_prefix+n.address,s=String(b.parse(i).path),c=String(b.parse(a).path);if(!c.startsWith(s))throw new Error("Could not determine profile URL for "+String(r)+": wrong Gaia hub ("+i+" does not correspond to "+a+")");return c.substring(s.length+1)})):Promise.resolve().then((function(){return"profile.json"}))}(t,i=n,o)})).then((function(t){return e.uploadToGaiaHub(t,r,i)}))}(t,n,r,a,o)}));return Promise.all(i).then((function(e){return{error:null,dataUrls:e}})).catch((function(e){return{error:"Failed to upload: "+e.message,dataUrls:null}}))}function ot(e,t,n){if(!t)throw new Error("No profile");if(!t.apps)throw new Error("No profile apps");if(!t.apps[n])throw new Error("No app entry for "+n);var r,a=t.apps[n];try{r=e.coerceMainnetAddress(function(e){var t=e.match(/([13][a-km-zA-HJ-NP-Z0-9]{26,35})/);if(!t)throw new Error("Failed to parse gaia address");return t[t.length-1]}(a))}catch(e){throw new Error("Failed to parse app URL "+a)}return r}var it="<html><head><style>\nh1 { \n  font-family: monospace; \n  font-size: 24px; \n  font-style: normal; \n  font-variant: normal; \n  font-weight: 700; \n  line-height: 26.4px; \n} \nh3 { \n  font-family: monospace; \n  font-size: 14px; \n  font-style: normal; \n  font-variant: normal; \n  font-weight: 700; \n  line-height: 15.4px; \n}\np { \n  font-family: monospace; \n  font-size: 14px; \n  font-style: normal; \n  font-variant: normal; \n  font-weight: 400; \n  line-height: 20px; \n}\nb {\n  background-color: #e8e8e8;\n}\npre { \n  font-family: monospace; \n  font-size: 13px; \n  font-style: normal; \n  font-variant: normal; \n  font-weight: 400; \n  line-height: 18.5714px;\n}</style></head></body><h3>Blockstack CLI Sign-in</h3><br>",st='<p>Sign-in request for <b>"{appName}"</b></p>',ct='<p>Requested scopes: <b>"{appScopes}"</b></p>',pt='<p><a href="{authRedirect}">{blockstackID}</a> ({idAddress})</p>',ut='<p><a href="{authRedirect}">{idAddress}</a> (anonymous)</p>',lt=s.randomBytes(32).toString("hex");function dt(e,t,n,r){return ft.apply(this,arguments)}function ft(){return(ft=R(M.mark((function e(t,n,r,a){var o,i,s;return M.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Qe(t,n,r.idAddress,a,r.index);case 2:o=e.sent;try{s=ot(t,r.profile,a),i=Je(t,o,s)}catch(e){i=Je(t,o)}return e.abrupt("return",i);case 5:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function ht(e,t,n,r,a,o){return mt.apply(this,arguments)}function mt(){return(mt=R(M.mark((function t(n,r,a,o,i,c){var p,u,l,d,f,h,m,y;return M.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return p=o.domain_name,t.next=3,dt(n,a,c,p);case 3:return l=tt(u=t.sent,c.privateKey),d=e.makeAuthResponse(c.privateKey,{},c.name,{email:void 0,profileUrl:c.profileUrl},void 0,u,void 0,o.public_keys[0],i,e.config.network.blockstackAPIUrl,l),f=v.decodeToken(d).payload,(h=Object.assign({},c)).profile={},h.privateKey=void 0,f.metadata={id:h,profileUrl:c.profileUrl,appOrigin:p,redirect_uri:o.redirect_uri,scopes:o.scopes,salt:s.randomBytes(16).toString("hex"),nonce:lt},m=new v.TokenSigner("ES256k",c.privateKey),y=m.sign(f),t.abrupt("return",e.updateQueryStringParameter("http://localhost:"+r+"/signin","authResponse",y));case 14:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function yt(e,t,n,r,a,o,i){return gt.apply(this,arguments)}function gt(){return(gt=R(M.mark((function e(t,n,r,a,o,i,s){var c,p,u,l,d;return M.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:c=it,p=st.replace(/{appName}/,o.name||"(Unknown app)"),u=ct.replace(/{appScopes}/,i.scopes.length>0?i.scopes.join(", "):"(none)"),c=""+c+p+u,l=0;case 5:if(!(l<s.length)){e.next=24;break}if(d=void 0,!s[l].name){e.next=15;break}return e.t0=pt,e.next=11,ht(t,n,r,i,a,s[l]);case 11:e.t1=e.sent,d=e.t0.replace.call(e.t0,/{authRedirect}/,e.t1).replace(/{blockstackID}/,s[l].name).replace(/{idAddress}/,s[l].idAddress),e.next=20;break;case 15:return e.t2=ut,e.next=18,ht(t,n,r,i,a,s[l]);case 18:e.t3=e.sent,d=e.t2.replace.call(e.t2,/{authRedirect}/,e.t3).replace(/{idAddress}/,s[l].idAddress);case 20:c=""+c+d;case 21:l++,e.next=5;break;case 24:return e.abrupt("return",c+="</body></html>");case 26:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function bt(e,t,n,r){return kt.apply(this,arguments)}function kt(){return(kt=R(M.mark((function e(t,n,r,a){var o,i,s;return M.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!(r>65536)){e.next=2;break}throw new Error("Too many names");case 2:return e.next=4,Ye(t,n,r);case 4:return o=e.sent,e.next=7,t.getNamesOwned(o.idAddress.slice(3));case 7:if(0!==(i=e.sent).length){e.next=10;break}return e.abrupt("return",a);case 10:for(s=0;s<i.length;s++)a.push({name:i[s],idAddress:o.idAddress,privateKey:o.privateKey,index:r,profile:{},profileUrl:""});return e.next=13,bt(t,n,r+1,a);case 13:return e.abrupt("return",e.sent);case 14:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function wt(e,t){return bt(e,t,0,[])}function vt(e,t,n){return _t.apply(this,arguments)}function _t(){return(_t=R(M.mark((function e(t,n,r){var a;return M.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Ye(t,n,r);case 2:return e.abrupt("return",{name:"",idAddress:(a=e.sent).idAddress,privateKey:a.privateKey,index:r,profile:{},profileUrl:""});case 5:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function xt(e,t,n){a.info("Respond "+n+": "+JSON.stringify(t)),e.writeHead(n,{"Content-Type":"application/json"}),e.write(JSON.stringify(t)),e.end()}function At(e,t,n,r){return It.apply(this,arguments)}function It(){return(It=R(M.mark((function e(t,n,r,a){var o,i,s,c,p;return M.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t.setCoerceMainnetAddress(!0),e.prev=1,e.next=4,wt(t,n);case 4:return i=(o=e.sent).map((function(e){return ve(t,e.name,!0).catch((function(){return null}))})),e.next=8,Promise.all(i);case 8:for(s=e.sent,t.setCoerceMainnetAddress(!1),s=s.filter((function(e){return null!=e})),c=0;c<s.length;c++)s[c].hasOwnProperty("error")&&s[c].error?o[c].profileUrl="":(o[c].profileUrl=s[c].profileUrl,o[c].profile=s[c].profile);return p=o.length+1,o=o.filter((function(e){return!!e.profileUrl})),e.t0=o,e.next=17,vt(t,n,p);case 17:e.t1=e.sent,e.t0.push.call(e.t0,e.t1),e.next=25;break;case 21:throw e.prev=21,e.t2=e.catch(1),t.setCoerceMainnetAddress(!1),e.t2;case 25:return e.abrupt("return",o);case 26:case"end":return e.stop()}}),e,null,[[1,21]])})))).apply(this,arguments)}function Et(){return(Et=R(M.mark((function t(n,r,o,i,s,c,p){var u,l,d,f,h,m,y;return M.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(u=c.query.authRequest){t.next=3;break}return t.abrupt("return",Promise.resolve().then((function(){xt(p,{error:"No authRequest given"},400)})));case 3:return l="",d=[],t.prev=5,t.next=8,At(n,r,o,i);case 8:return d=t.sent,l="Unable to verify authentication token",t.next=12,e.verifyAuthRequest(u);case 12:if(t.sent){t.next=16;break}throw l="Invalid authentication token: could not verify",new Error(l);case 16:return l="Unable to fetch app manifest",t.next=19,e.fetchAppManifest(u);case 19:if(f=t.sent,l="Unable to decode token",h=v.decodeToken(u),m=h.payload){t.next=26;break}throw l="Invalid authentication token: no payload",new Error(l);case 26:return l="Unable to make auth page",t.next=29,yt(n,s,r,o,f,m,d);case 29:p.writeHead(200,{"Content-Type":"text/html","Content-Length":(y=t.sent).length}),p.write(y),p.end(),t.next=41;break;case 35:t.prev=35,t.t0=t.catch(5),l||(l=t.t0.message),console.log(t.t0.stack),a.error(l),xt(p,{error:"Unable to authenticate app request: "+l},400);case 41:case"end":return t.stop()}}),t,null,[[5,35]])})))).apply(this,arguments)}function Pt(e,t,n,r,o){var i=!1;return Promise.resolve().then((function(){return null==o?ve(e,t.name).catch((function(e){return null})):{profile:o}})).then((function(e){e&&(o=e.profile),o||(a.debug("Profile for "+t.name+" is "+JSON.stringify(o)),a.debug("Instantiating profile for "+t.name),i=!0,o={type:"@Person",account:[],apps:{}}),null==o.apps&&(i=!0,a.debug("Adding multi-reader Gaia links to profile for "+t.name),o.apps={});var s=""+r.url_prefix+r.address+"/";return o.apps.hasOwnProperty(n)&&o.apps[n]?o.apps[n].startsWith(s)||(i=!0,a.debug("Overriding Gaia read URL for "+n+" from "+o.apps[n]+" to "+s+" in profile for "+t.name),o.apps[n]=s):(i=!0,a.debug("Setting Gaia read URL "+s+" for "+n+" in profile for "+t.name),o.apps[n]=s),{profile:o,changed:i}}))}function St(e,t,n,r){var o=!1;return Promise.resolve().then((function(){return null==r?ve(e,t.name).catch((function(e){return null})):{profile:r}})).then((function(e){return e&&(r=e.profile),r||(a.debug("Profile for "+t.name+" is "+JSON.stringify(r)),a.debug("Instantiating profile for "+t.name),o=!0,r={type:"@Person",account:[],api:{}}),null==r.api&&(o=!0,a.debug("Adding API settings to profile for "+t.name),r.api={gaiaHubConfig:{url_prefix:n.url_prefix},gaiaHubUrl:n.server}),r.hasOwnProperty("api")&&r.api.hasOwnProperty("gaiaHubConfig")&&r.api.gaiaHubConfig.hasOwnProperty("url_prefix")&&r.api.gaiaHubConfig.url_prefix&&r.api.hasOwnProperty("gaiaHubUrl")&&r.api.gaiaHubUrl||(a.debug("Existing profile for "+t.name+" is "+JSON.stringify(r)),a.debug("Updating API settings to profile for "+t.name),r.api={gaiaHubConfig:{url_prefix:n.url_prefix},gaiaHubUrl:n.server}),{profile:r,changed:o}}))}function Tt(){return(Tt=R(M.mark((function t(n,r,o,i,s,c){var p,u,l,d,f,h,m,y,g,b,k,w,_,x,A,I,E,P,S,T,N,$,B;return M.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(p=s.query.authResponse){t.next=3;break}return t.abrupt("return",Promise.resolve().then((function(){xt(c,{error:"No authResponse given"},400)})));case 3:return u=n.legacyNetwork.blockstackAPIUrl+"/v1/names/",l="",d=400,_=!1,t.prev=7,t.next=10,e.verifyAuthResponse(p,u);case 10:if(t.sent){t.next=14;break}throw l="Unable to verify authResponse token "+p,new Error(l);case 14:if(A=v.decodeToken(p),h=(f=A.payload).metadata.id,m=f.metadata.profileUrl,y=f.metadata.appOrigin,g=f.metadata.redirect_uri,b=f.metadata.scopes,f.metadata.nonce==lt){t.next=24;break}throw new Error("Invalid auth response: not generated by this authenticator");case 24:return t.next=26,Ye(n,r,h.index);case 26:return h.privateKey=t.sent.privateKey,t.next=29,dt(n,r,h,y);case 29:return I=t.sent,f.metadata={profileUrl:m},k=new v.TokenSigner("ES256K",h.privateKey).sign(f),a.debug("App "+y+" requests scopes "+JSON.stringify(b)),t.next=35,rt(n,o,I);case 35:return w=t.sent,t.next=39,St(n,h,w);case 39:return _=(E=t.sent).changed,x=E.profile,t.next=44,Pt(n,h,y,w,x);case 44:if(P=(E=t.sent).profile,S=E.changed&&b.includes("store_write"),a.debug("Resulting profile for "+h.name+" is "+JSON.stringify(P)),!S){t.next=56;break}return a.debug("Upload new profile with new sign-in data to "+i),N=ke(P,h.privateKey),t.next=53,at(n,[i],N,h.privateKey,h.name);case 53:T=t.sent,t.next=66;break;case 56:if(!_){t.next=64;break}return a.debug("Upload new profile with new API settings to "+i),$=ke(x,h.privateKey),t.next=61,at(n,[i],$,h.privateKey,h.name);case 61:T=t.sent,t.next=66;break;case 64:a.debug("Gaia read URL for "+y+" is "+P.apps[y]),T={dataUrls:[],error:null};case 66:if(!T.hasOwnProperty("error")||!T.error){t.next=70;break}throw l="Failed to upload new profile: "+T.error,d=502,new Error(l);case 70:a.debug("Handled sign-in to "+y+" using "+h.name),B=e.updateQueryStringParameter(g,"authResponse",k),a.info("Redirect to "+B),c.writeHead(302,{Location:B}),c.end(),t.next=82;break;case 77:t.prev=77,t.t0=t.catch(7),a.error(t.t0),a.error(l),xt(c,{error:"Unable to process signin request: "+l},d);case 82:case"end":return t.stop()}}),t,null,[[7,77]])})))).apply(this,arguments)}var Nt=require("c32check"),$t=!1,Bt=!1,Ut=!0,Ct=52595,Rt=5e3,Dt=!1,Kt=256,Gt=!!n.env.BLOCKSTACK_TEST;function Ot(){return Kt}function Mt(t,n){var a=n[0],o=n[1];o.match(F)&&(o=t.coerceMainnetAddress(o.slice(3)));var i=r.readFileSync(a).toString();return Promise.resolve().then((function(){var t=null;try{t=JSON.parse(i)[0].token}catch(e){t=i}if(!t)throw new Error("Data at "+a+" does not appear to be a signed profile");return me(e.extractProfile(t,o))}))}function Yt(){return(Yt=R(M.mark((function e(t,n){var r,a,o,i;return M.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Ae(n[0]);case 2:return r=e.sent,a=n[1],o=n[2],e.next=7,Ee(t,a);case 7:return i=e.sent,e.next=10,Qe(t,r,i,o);case 10:return e.abrupt("return",me(e.sent));case 12:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function Ht(){return(Ht=R(M.mark((function e(t,n){var r,a,o,i;return M.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Ae(n[0]);case 2:r=e.sent,a=1,n.length>1&&n[1]&&(a=parseInt(n[1])),o=[],i=0;case 7:if(!(i<a)){e.next=16;break}return e.t0=o,e.next=11,Ye(t,r,i);case 11:e.t1=e.sent,e.t0.push.call(e.t0,e.t1);case 13:i++,e.next=7;break;case 16:return e.abrupt("return",me(o));case 17:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function Lt(){return(Lt=R(M.mark((function e(t,n){var r,a;return M.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Ae(n[0]);case 2:return r=e.sent,e.next=5,Le(t,r);case 5:return(a=[]).push(e.sent),e.abrupt("return",me(a));case 9:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function Ft(){return(Ft=R(M.mark((function e(t,n){var r,a;return M.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Ae(n[0]);case 2:return r=e.sent,e.next=5,ze(t,r);case 5:return(a=[]).push(e.sent),e.abrupt("return",me(a));case 9:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function zt(){return(zt=R(M.mark((function e(t,n){var r;return M.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!n[0]){e.next=6;break}return e.next=3,Ae(n[0]);case 3:r=e.sent,e.next=9;break;case 6:return e.next=8,c.generateMnemonic(256,s.randomBytes);case 8:r=e.sent;case 9:return e.next=11,ze(t,r);case 11:return e.abrupt("return",me({mnemonic:r,keyInfo:e.sent}));case 13:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function Wt(){return(Wt=R(M.mark((function e(t,n){var r,a,o,i,s,c,p,u,l;return M.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=n[0],a=new T.default(n[1]),o=new T.default(n[2]),i=new T.default(n[3]),s=n[4],c="",n.length>4&&n[5]&&(c=n[5]),(p=t.isMainnet()?new h.StacksMainnet:new h.StacksTestnet).coreApiUrl=t.legacyNetwork.blockstackAPIUrl,u={recipient:r,amount:a,senderKey:s,fee:o,nonce:i,memo:c,network:p},e.next=12,f.makeSTXTokenTransfer(u);case 12:if(l=e.sent,!Bt){e.next=15;break}return e.abrupt("return",f.estimateTransfer(l,p).then((function(e){return e.toString(10)})));case 15:if(!$t){e.next=17;break}return e.abrupt("return",Promise.resolve(l.serialize().toString("hex")));case 17:return e.abrupt("return",f.broadcastTransaction(l,p).then((function(e){return e.hasOwnProperty("error")?e:{txid:"0x"+l.txid(),transaction:De(l.txid(),p)}})).catch((function(e){return e.toString()})));case 18:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function jt(){return(jt=R(M.mark((function e(t,n){var a,o,i,s,c,p,u,l,d;return M.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a=n[0],o=n[1],i=new T.default(n[2]),s=new T.default(n[3]),c=n[4],p=r.readFileSync(a).toString(),(u=t.isMainnet()?new h.StacksMainnet:new h.StacksTestnet).coreApiUrl=t.legacyNetwork.blockstackAPIUrl,l={contractName:o,codeBody:p,senderKey:c,fee:i,nonce:s,network:u,postConditionMode:f.PostConditionMode.Allow},e.next=11,f.makeContractDeploy(l);case 11:if(d=e.sent,!Bt){e.next=14;break}return e.abrupt("return",f.estimateContractDeploy(d,u).then((function(e){return e.toString(10)})));case 14:if(!$t){e.next=16;break}return e.abrupt("return",Promise.resolve(d.serialize().toString("hex")));case 16:return e.abrupt("return",f.broadcastTransaction(d,u).then((function(e){return e.hasOwnProperty("error")?e:{txid:"0x"+d.txid(),transaction:De(d.txid(),u)}})).catch((function(e){return e.toString()})));case 17:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function Zt(){return(Zt=R(M.mark((function e(t,n){var r,a,o,i,s,c,p,u,d,m;return M.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=n[0],a=n[1],o=n[2],i=new T.default(n[3]),s=new T.default(n[4]),c=n[5],(p=t.isMainnet()?new h.StacksMainnet:new h.StacksTestnet).coreApiUrl=t.legacyNetwork.blockstackAPIUrl,m=[],e.abrupt("return",f.getAbi(r,a,p).then((function(e){var t=(u=e).functions.filter((function(e){return e.name===o}));return 1===t.length?Be(d=t[0].args):null})).then((function(e){return l.prompt(e)})).then((function(e){return m=Ce(e,d),f.makeContractCall({contractAddress:r,contractName:a,functionName:o,functionArgs:m,senderKey:c,fee:i,nonce:s,network:p,postConditionMode:f.PostConditionMode.Allow})})).then((function(e){if(!f.validateContractCall(e.payload,u))throw new Error("Failed to validate function arguments against ABI");return Bt?f.estimateContractFunctionCall(e,p).then((function(e){return e.toString(10)})):$t?Promise.resolve(e.serialize().toString("hex")):f.broadcastTransaction(e,p).then((function(t){return t.hasOwnProperty("error")?t:{txid:"0x"+e.txid(),transaction:De(e.txid(),p)}})).catch((function(e){return e.toString()}))})));case 10:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function Qt(){return(Qt=R(M.mark((function e(t,n){var r,a,o,i,s,c,p;return M.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=n[0],a=n[1],o=n[2],i=n[3],(s=t.isMainnet()?new h.StacksMainnet:new h.StacksTestnet).coreApiUrl=t.legacyNetwork.blockstackAPIUrl,p=[],e.abrupt("return",f.getAbi(r,a,s).then((function(e){var t=e.functions.filter((function(e){return e.name===o}));return 1===t.length?Be(c=t[0].args):null})).then((function(e){return l.prompt(e)})).then((function(e){return p=Ce(e,c),f.callReadOnlyFunction({contractAddress:r,contractName:a,functionName:o,functionArgs:p,senderAddress:i,network:s})})).then((function(e){return f.cvToString(e)})).catch((function(e){return e.toString()})));case 8:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function qt(e,t){void 0===t&&(t=50);for(var n=[],r=[],a=0;a<e.length;a++)r.push(e[a]),r.length>=t&&(n.push(r),r=[]);return r.length>0&&n.push(r),n}function Jt(){return(Jt=R(M.mark((function t(n,r){var a,o,i,s,c,p,u,l,d,f,h,m,y,g,b,k,w,v,_,x,A,I,E,P,S,T,N,$,B;return M.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return n.setCoerceMainnetAddress(!0),a=r[0],o=r[1],i=r[2],s=r[3],c=Ae(r[4]),p=we(n,a).then((function(e){if(!e)throw new Error("Name not found");return e})),u=e.lookupProfile(a),t.next=10,Promise.all([p,u,c]);case 10:if(d=(l=t.sent)[0],h=l[2],f=l[1]){t.next=16;break}throw new Error("No profile found");case 16:if(d){t.next=18;break}throw new Error("Name not found");case 18:if(d.zonefile){t.next=20;break}throw new Error("No zone file found");case 20:return f.apps||(f.apps={}),m=n.coerceMainnetAddress(d.address),y="ID-"+m,t.next=25,Qe(n,h,y,i);case 25:return g=t.sent,t.next=28,Ye(n,h,g.ownerKeyIndex);case 28:b=t.sent,k=null;try{k=ot(n,f,i),w=Je(n,g,k)}catch(e){console.log("No profile application entry for "+i),w=Je(n,g)}if(w=be(w)+"01",v=n.coerceMainnetAddress(ge(n,w)),!k||v===k){t.next=35;break}throw new Error("BUG: "+k+" !== "+v);case 35:return _=f,A=rt(n,o,x=b.privateKey),I=rt(n,s,w),t.next=41,Promise.all([A,I]);case 41:if(P=(E=t.sent)[1],E[0].url_prefix){t.next=46;break}throw new Error("Invalid owner hub config: no url_prefix defined");case 46:if(P.url_prefix){t.next=48;break}throw new Error("Invalid app hub config: no url_prefix defined");case 48:return S=P.url_prefix.replace(/\/+$/,""),(T={})[i]=S+"/"+v+"/",N=Object.assign({},_.apps?_.apps:{},T),_.apps=N,$=ke(_,x),t.next=56,at(n,[o],$,x,a);case 56:if(!(B=t.sent).error){t.next=61;break}return t.abrupt("return",me({error:B.error}));case 61:return t.abrupt("return",me({profileUrls:B.dataUrls}));case 62:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function Vt(){return(Vt=R(M.mark((function e(t,n){var r,a,o;return M.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=n[0],a=t.isMainnet()?new h.StacksMainnet:new h.StacksTestnet,o=new y.StackingClient(r,a),e.abrupt("return",o.getStatus().then((function(e){return e.stacked?{amount_microstx:e.details.amount_microstx,first_reward_cycle:e.details.first_reward_cycle,lock_period:e.details.lock_period,unlock_height:e.details.unlock_height,pox_address:{version:e.details.pox_address.version.toString("hex"),hashbytes:e.details.pox_address.hashbytes.toString("hex")}}:"Account not actively participating in Stacking"})).catch((function(e){return e.toString()})));case 4:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function Xt(){return(Xt=R(M.mark((function e(t,n){var r,a,o,i,s,c,p,u,l,d,f;return M.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=new T.default(n[0]),a=Number(n[1]),o=n[2],i=n[3],s=t.isMainnet()?new h.StacksMainnet:new h.StacksTestnet,c=new g.Configuration({fetchApi:B.default,basePath:s.coreApiUrl}),p=new g.AccountsApi(c),u=p.getAccountBalance({principal:i}),l=new y.StackingClient(i,s),d=l.getPoxInfo(),f=l.canStack({poxAddress:o,cycles:a}),e.abrupt("return",Promise.all([u,d,f]).then((function(e){var t=e[0],n=e[2],a=new T.default(e[1].min_amount_ustx),o=new T.default(t.stx.balance);if(a.gt(r))throw new Error("Stacking amount less than required minimum of "+a.toString()+" microstacks");if(r.gt(o))throw new Error("Stacking amount greater than account balance of "+o.toString()+" microstacks");if(!n.eligible)throw new Error("Account cannot participate in stacking. "+n.reason);return n})).catch((function(e){return e})));case 12:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function en(){return(en=R(M.mark((function e(t,n){var r,a,o,i,s,c,p,u,l,d,m,b,k,w;return M.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=new T.default(n[0]),a=Number(n[1]),o=n[2],i=n[3],s=t.isMainnet()?new h.StacksMainnet:new h.StacksTestnet,c=s.isMainnet()?f.TransactionVersion.Mainnet:f.TransactionVersion.Testnet,p=new g.Configuration({fetchApi:B.default,basePath:s.coreApiUrl}),u=new g.AccountsApi(p),l=f.getAddressFromPrivateKey(i,c),d=u.getAccountBalance({principal:l}),m=new y.StackingClient(l,s),b=m.getPoxInfo(),k=m.getCoreInfo(),w=m.canStack({poxAddress:o,cycles:a}),e.abrupt("return",Promise.all([d,b,k,w]).then((function(e){var t=e[0],n=e[2],s=e[3],c=new T.default(e[1].min_amount_ustx),p=new T.default(t.stx.balance),u=n.burn_block_height+3;if(c.gt(r))throw new Error("Stacking amount less than required minimum of "+c.toString()+" microstacks");if(r.gt(p))throw new Error("Stacking amount greater than account balance of "+p.toString()+" microstacks");if(!s.eligible)throw new Error("Account cannot participate in stacking. "+s.reason);return m.stack({amountMicroStx:r,poxAddress:o,cycles:a,privateKey:i,burnBlockHeight:u})})).then((function(e){return e.hasOwnProperty("error")?e:{txid:"0x"+e,transaction:De(e,s)}})).catch((function(e){return e})));case 15:case"end":return e.stop()}}),e)})))).apply(this,arguments)}var tn={authenticator:function(e,t){var n=t[0],r=t[1],a=3e3,o=n;return t.length>2&&t[2]&&(o=t[2]),t.length>3&&t[3]&&(a=parseInt(t[3])),a<0||a>65535?Promise.resolve().then((function(){return me({error:"Invalid port"})})):Ae(r).then((function(t){Dt=!0;var r=N.default();return r.use(S.default()),r.get(/^\/auth\/*$/,(function(r,i){return function(e,t,n,r,a,o,i){return Et.apply(this,arguments)}(e,t,n,o,a,r,i)})),r.get(/^\/signin\/*$/,(function(r,a){return function(e,t,n,r,a,o){return Tt.apply(this,arguments)}(e,t,n,o,r,a)})),r.listen(a,(function(){return console.log("Authentication server started on "+a)})),"Press Ctrl+C to exit"})).catch((function(e){return me({error:e.message})}))},balance:function(e,t){var n=t[0];Gt&&(n=e.coerceAddress(n));var r=e.isMainnet()?new h.StacksMainnet:new h.StacksTestnet;return r.coreApiUrl=e.legacyNetwork.blockstackAPIUrl,$.default(r.getAccountApiUrl(n)).then((function(e){return e.json()})).then((function(e){var t=e.balance;e.balance.startsWith("0x")&&(t=e.balance.substr(2));var n=e.locked;e.locked.startsWith("0x")&&(n=e.locked.substr(2));var r=e.unlock_height,a=new T.default(t,16),o=new T.default(n,16),i={balance:a.toString(10),locked:o.toString(10),unlock_height:r,nonce:e.nonce};return Promise.resolve(me(i))}))},can_stack:function(e,t){return Xt.apply(this,arguments)},call_contract_func:function(e,t){return Zt.apply(this,arguments)},call_read_only_contract_func:function(e,t){return Qt.apply(this,arguments)},convert_address:function(e,t){var n,r,a,o,i=t[0];if(i.match(z))n=Nt.c32ToB58(r=i);else{if(!i.match(/[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]+/))throw new Error("Unrecognized address "+i);r=Nt.b58ToC32(i),n=i}return e.isTestnet()&&(a=e.coerceAddress(n),o=Nt.b58ToC32(a)),Promise.resolve().then((function(){var t={mainnet:{STACKS:r,BTC:n},testnet:void 0};return e.isTestnet()&&(t.testnet={STACKS:o,BTC:a}),me(t)}))},decrypt_keychain:function(e,t){var r=t[0];return new Promise((function(e,r){2===t.length&&t[1]?e(t[1]):n.stdin.isTTY?xe("Enter password: ",(function(t){e(t)})):r(new Error("Password argument required in non-interactive mode"))})).then((function(e){return ce(Buffer.from(r,"base64"),e)})).catch((function(e){return me({error:"Failed to decrypt (wrong password or corrupt ciphertext), details: "+e.message})}))},deploy_contract:function(e,t){return jt.apply(this,arguments)},docs:function(e,t){return Promise.resolve().then((function(){for(var e=[],t=Object.keys(X.properties),n=0;n<t.length;n++){for(var r=t[n],a=[],o=X.properties[r].help,i=X.properties[r].group,s=0;s<X.properties[r].items.length;s++){var c=X.properties[r].items[s];a.push({name:c.name,type:c.type,value:c.realtype,format:c.pattern?c.pattern:".+"})}e.push({command:r,args:a,usage:o,group:i})}return me(e)}))},encrypt_keychain:function(t,r){var a=r[0];if(12!==a.split(/ +/g).length)throw new Error("Invalid backup phrase: must be 12 words");return new Promise((function(e,t){2===r.length&&r[1]?e(r[1]):n.stdin.isTTY?xe("Enter password: ",(function(n){xe("Enter password again: ",(function(r){n!==r?t(new Error("Passwords do not match")):e(n)}))})):t(new Error("Password argument required on non-interactive mode"))})).then((function(t){return e.encryptMnemonic(a,t)})).then((function(e){return e.toString("base64")})).catch((function(e){return me({error:e.message})}))},gaia_deletefile:function(n,r){var a=r[0],o=r[1],i=u.normalize(r[2].replace(/^\/+/,"")),s=!1;return r.length>3&&r[3]&&(s="true"===r[3].toLowerCase()||"1"===r[3].toLowerCase()),e.config.network.layer1=t.networks.bitcoin,nt(n,o,a).then((function(t){return e.deleteFile(i,{wasSigned:s})})).then((function(){return me("ok")}))},gaia_dump_bucket:function(n,a){var o=a[0],i=a[1],s=a[2],c=a[3],p=a[4];if(0===p.length)throw new Error("Invalid directory (not given)");if("/"!==p[0]){var l=r.realpathSync(".");p=u.normalize(l+"/"+p)}!function(e){if(0===e.length||"/"!==e[0])throw new Error("Path must be absolute");for(var t=e.replace(/^\//,"").split("/"),n="/",a=0;a<=t.length;a++){try{if(0==(r.lstatSync(n).mode&r.constants.S_IFDIR))throw new Error("Not a directory: "+n)}catch(e){if("ENOENT"!==e.code)throw e;r.mkdirSync(n)}if(a===t.length)break;n=n+"/"+t[a]}}(p),e.config.network.layer1=t.networks.bitcoin;var d,f,h=[];return Ne(n,o,i,c).then((function(e){return nt(n,f=e.appPrivateKey,s,e.ownerPrivateKey)})).then((function(e){return rt(n,s,f)})).then((function(t){return d=t,e.listFiles((function(e){return h.push(e),!0}))})).then((function(e){console.log("Download "+e+" files...");for(var t=qt(h),n=Promise.resolve(),a=function(e){var a=t[e].map((function(e){return function(e,t){var n=e.url_prefix.replace(/\/+$/,"")+"/"+e.address+"/"+t,a=p+"/"+t.replace(/\//g,"\\x2f");return console.log("Download "+n+" to "+a),$.default(n).then((function(e){if(200!==e.status)throw new Error("Bad status code for "+n+": "+e.status);var t=e.headers.get("Content-Type");return null===t||t.startsWith("text")||"application/json"===t?e.text():e.arrayBuffer()})).then((function(e){return new Promise((function(t,n){try{r.writeFileSync(a,Buffer.from(e),{encoding:null,mode:432}),t()}catch(e){n(e)}}))}))}(d,e)})),o=Promise.all(a);n=n.then((function(){return o}))},o=0;o<t.length;o++)a(o);return n.then((function(){return me(e)}))}))},gaia_getfile:function(n,r){var a=r[0],o=r[1],i=r[2],s=r[3],c=!1,p=!1;return s&&r.length>4&&r[4]&&(c="true"===r[4].toLowerCase()||"1"===r[4].toLowerCase()),s&&r.length>5&&r[5]&&(p="true"===r[5].toLowerCase()||"1"===r[5].toLowerCase()),s||(s="fda1afa3ff9ef25579edb5833b825ac29fae82d03db3f607db048aae018fe882"),e.config.network.layer1=t.networks.bitcoin,nt(n,s,null).then((function(t){return e.getFile(i,{decrypt:c,verify:p,app:o,username:a})})).then((function(e){return e instanceof ArrayBuffer?Buffer.from(e):e}))},gaia_listfiles:function(n,r){var a=r[0],o=r[1],i=0;return e.config.network.layer1=t.networks.bitcoin,nt(n,be(o),a).then((function(t){return e.listFiles((function(e){return console.log(e),i+=1,!0}))})).then((function(){return me(i)}))},gaia_putfile:function(n,a){var o=a[0],i=a[1],s=a[2],c=u.normalize(a[3].replace(/^\/+/,"")),p=!1,l=!1;a.length>4&&a[4]&&(p="true"===a[4].toLowerCase()||"1"===a[4].toLowerCase()),a.length>5&&a[5]&&(l="true"===a[5].toLowerCase()||"1"===a[5].toLowerCase());var d=r.readFileSync(s);return e.config.network.layer1=t.networks.bitcoin,nt(n,i,o).then((function(t){return e.putFile(c,d,{encrypt:p,sign:l})})).then((function(e){return me({urls:[e]})}))},gaia_restore_bucket:function(n,a){var o=a[0],i=a[1],s=a[2],c=a[3],p=a[4];if(0===p.length)throw new Error("Invalid directory (not given)");if("/"!==p[0]){var l=r.realpathSync(".");p=u.normalize(l+"/"+p)}var d=r.readdirSync(p),f=qt(d,10);return e.config.network.layer1=t.networks.bitcoin,Ne(n,o,i,c).then((function(e){return nt(n,e.appPrivateKey,s,e.ownerPrivateKey)})).then((function(t){for(var n=Promise.resolve(),a=function(t){var a=f[t].map((function(t){var n=u.join(p,t),a=r.readFileSync(n),o=t.replace(/\\x2f/g,"/");return e.putFile(o,a,{encrypt:!1,sign:!1}).then((function(e){console.log("Uploaded "+t+" to "+e)}))}));n=n.then((function(){return Promise.all(a)}))},o=0;o<f.length;o++)a(o);return n})).then((function(){return me(d.length)}))},gaia_sethub:function(e,t){return Jt.apply(this,arguments)},get_address:function(e,t){var n=he(t[0]);return Promise.resolve().then((function(){var t=ge(e,n);return me({BTC:t,STACKS:Nt.b58ToC32(t)})}))},get_account_history:function(e,t){var n=Nt.c32ToB58(t[0]);if(t.length>=2&&t[1]){var r=parseInt(t[1]);return Promise.resolve().then((function(){return e.getAccountHistoryPage(n,r)})).then((function(e){return me(e.map((function(e){return{address:Nt.b58ToC32(e.address),credit_value:e.credit_value.toString(),debit_value:e.debit_value.toString()}})))}))}var a=[];return function t(r){return e.getAccountHistoryPage(n,r).then((function(e){return 0==e.length?a:(a=a.concat(e),t(r+1))}))}(0).then((function(e){return me(e.map((function(e){return{address:Nt.b58ToC32(e.address),credit_value:e.credit_value.toString(),debit_value:e.debit_value.toString()}})))}))},get_app_keys:function(e,t){return Yt.apply(this,arguments)},get_owner_keys:function(e,t){return Ht.apply(this,arguments)},get_payment_key:function(e,t){return Lt.apply(this,arguments)},get_stacks_wallet_key:function(e,t){return Ft.apply(this,arguments)},make_keychain:function(e,t){return zt.apply(this,arguments)},profile_sign:function(e,t){var n=JSON.parse(r.readFileSync(t[0]).toString());return Promise.resolve().then((function(){return ke(n,t[1])}))},profile_store:function(e,t){var n,a=t[0],o=t[1],i=he(t[2]),s=t[3],c=r.readFileSync(o).toString(),p=ge(e,i),u=e.coerceMainnetAddress(p),l="";a.startsWith("ID-")?n=Promise.resolve().then((function(){return{address:a.slice(3)}})):(n=we(e,a),l=a);var d=Mt(e,[o,"ID-"+u]);return Promise.all([n,d]).then((function(n){var r=n[0];if(Ut&&(!r||e.coerceAddress(r.address)!==e.coerceAddress(p)))throw new Error("Name owner address either could not be found, or does not match private key address "+p);return at(e,[s],c,t[2],l)})).then((function(e){return e.hasOwnProperty("error")?me({dataUrls:e.dataUrls,error:e.error},!0):me({profileUrls:e.dataUrls})}))},profile_verify:Mt,send_tokens:function(e,t){return Wt.apply(this,arguments)},stack:function(e,t){return en.apply(this,arguments)},stacking_status:function(e,t){return Vt.apply(this,arguments)},faucet:function(e,t){var n=t[0],r=new g.Configuration({fetchApi:B.default,basePath:"https://stacks-node-api.blockstack.org"});return new g.FaucetsApi(r).runFaucetStx({address:n}).then((function(e){return me({txid:e.txId,transaction:De(e.txId,new h.StacksTestnet)})})).catch((function(e){return e.toString()}))}};function nn(){var t=function(e,t){void 0===t&&(t="deitUxC:F:B:P:D:G:N:H:T:I:m:M:X:u:p:");for(var r={},a=[],o=n.argv.slice(0),i=0;i<t.length;i++)":"!=t[i]&&(r[t[i]]=i+1<t.length&&":"==t[i+1]&&null);for(var s=0,c=Object.keys(r);s<c.length;s++)for(var p=c[s],u=0;u<o.length&&null!==o[u]&&"--"!==o[u];u++)"-"+p===o[u]&&(!1===r[p]?(r[p]=!0,o[u]=""):(r[p]=o[u+1],o[u]="",o[u+1]=""));for(var l=0;l<o.length;l++)if(o[l].length>0){if("--"===o[l])continue;a.push(o[l])}return r._=a,r}(),o=function(e){if(e.length<=2)return{success:!1,error:"No command given",usage:!0,command:""};var t=e[2],n=e.slice(3);if(!X.properties.hasOwnProperty(t))return{success:!1,error:"Unrecognized command '"+t+"'",usage:!0,command:t};var r=function(e,t){var n=X.properties[e].items;Array.isArray(n)||(n=[n]);for(var r=[],a={},o=0;o<t.length;o++)if(t[o].startsWith("--")){var i=t[o].slice(2),s=null;if(a.hasOwnProperty(i))return{status:!1,error:"duplicate argument "+t[o]};for(var c=0;c<n.length;c++)if(n[c].hasOwnProperty("name")&&n[c].name===i){if(o+1>=t.length)return{status:!1,error:"no value for argument "+t[o]};s=t[o+1]}if(!s)return{status:!1,error:"no such argument "+t[o]};o+=1,a[i]=s}else r.push(t[o]);for(var p=[],u=0,l=0;l<n.length;l++)u<r.length?n[l].hasOwnProperty("name")&&a.hasOwnProperty(n[l].name)?p.push(a[n[l].name]):(p.push(r[u]),u+=1):p.push(a[n[l].name]);return{status:!0,arguments:p}}(t,n);if(!r.status)return{success:!1,error:r.error,usage:!0,command:t};for(var a=r.arguments,o=JSON.parse(JSON.stringify(X.properties[t])),i=o.minItems;i<o.maxItems;i++)i<a.length&&null==a[i]&&(a[i]=null,o.items[i]={type:"null"});var s=U.default();if(!s.validate(o,a)){for(var c="",p=0;p<s.errors.length;p++)c+='Invalid command arguments: Schema "'+s.errors[0].schemaPath+'" failed validation (problem: "'+s.errors[0].message+'", cause: "'+JSON.stringify(s.errors[0].params)+'")\n';return{success:!1,error:c,usage:!0,command:t}}return{success:!0,command:t,args:a}}(se(t,"_")?se(t,"_"):[]);if(o.success){$t=ie(t,"x"),Bt=ie(t,"e"),Ut=!ie(t,"U"),Ct=t.N?parseInt(oe(t,"N")):Ct,Rt=t.G?parseInt(oe(t,"N")):Rt,Kt=t.M?parseInt(oe(t,"M")):Kt;var i=ie(t,"d"),s=oe(t,"C"),c=ie(t,"i"),p=ie(t,"t"),u=(oe(t,"m"),oe(t,"H")),l=oe(t,"T"),d=oe(t,"I"),f=oe(t,"X"),h=oe(t,"u"),m=oe(t,"p");c&&(Gt=c);var y=oe(t,"c")?oe(t,"c"):c?"~/.blockstack-cli-regtest.conf":p?"~/.blockstack-cli-testnet.conf":"~/.blockstack-cli.conf",g=oe(t,"B"),b=oe(t,"F")?parseInt(oe(t,"F")):0,k=oe(t,"P")?oe(t,"P"):"0",w=oe(t,"D"),v=function(e,t){if("mainnet"!==t&&"testnet"!==t&&"regtest"!=t)throw new Error("Unregognized network");var n;n=Object.assign({},"mainnet"===t?q:"regtest"===t?J:V);try{n=JSON.parse(r.readFileSync(e).toString())}catch(e){}return n}(y,p?"testnet":c?"regtest":"mainnet");v.logConfig.level=i?"debug":"info",h&&(v.bitcoindUsername=h),m&&(v.bitcoindPassword=m),f&&(v.utxoServiceUrl=f),a.configure({level:v.logConfig.level,transports:[new a.transports.Console(v.logConfig)]});var _={consensusHash:s||null,feeRate:b||null,namespaceBurnAddress:g||null,priceToPay:k||null,priceUnits:w||null,receiveFeesPeriod:Ct||null,gracePeriod:Rt||null,altAPIUrl:u||v.blockstackAPIUrl,altTransactionBroadcasterUrl:l||v.broadcastServiceUrl,nodeAPIUrl:d||v.blockstackNodeUrl},x=function(e,t){return t?new P.default.network.LocalRegtest(e.blockstackAPIUrl,e.broadcastServiceUrl,new P.default.network.BitcoindAPI(e.utxoServiceUrl,{username:e.bitcoindUsername||"blockstack",password:e.bitcoindPassword||"blockstacksystem"})):new A.BlockstackNetwork(e.blockstackAPIUrl,e.broadcastServiceUrl,new P.default.network.BlockchainInfoApi(e.utxoServiceUrl))}(v,!!Gt||!!c||!!p),I=new Xe(x,_);e.config.logLevel="error","help"===o.command&&(console.log(ae(o.args[0])),n.exit(0));var E=0;(0,tn[o.command])(I,o.args).then((function(e){try{if(e instanceof Buffer)return e;var t=JSON.parse(e);return t.hasOwnProperty("status")&&!t.status&&(E=1),e}catch(t){return e}})).then((function(e){e instanceof Buffer?n.stdout.write(e):console.log(e)})).then((function(){Dt||n.exit(E)})).catch((function(e){console.error(e.stack),console.error(e.message),Dt||n.exit(1)}))}else o.error&&console.log(o.error),o.usage&&(o.command?(console.log(ae(o.command)),console.log('Use "help" to list all commands.')):(console.log(ee),console.log(re()))),n.exit(1)}var rn={};global.window={location:{origin:"localhost"},localStorage:{getItem:function(e){return rn[e]},setItem:function(e,t){rn[e]=t},removeItem:function(e){delete rn[e]}}},global.localStorage=global.window.localStorage,nn(),exports.CLIMain=nn;
//# sourceMappingURL=cli.cjs.production.min.js.map
