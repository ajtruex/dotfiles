{"version":3,"sources":["../../../src/credentials/api/AndroidApi.ts"],"names":["AndroidApi","constructor","api","client","ApiClient","fetchAll","shouldRefetchAll","credentials","getAllCredentialsApi","fetchKeystore","experienceName","ensureCredentialsFetched","keystore","fetchCredentials","updateKeystore","updateKeystoreApi","pushCredentials","fetchFcmKey","updateFcmKey","fcmApiKey","updateFcmKeyApi","removeFcmKey","removeFcmKeyApi","removeKeystore","removeKeystoreApi","response","getAllCredentialsForAppApi"],"mappings":";;;;;;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAGA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;AAEe,MAAMA,UAAN,CAAiB;AAK9BC,EAAAA,WAAW,CAACC,GAAD,EAAa;AAAA;;AAAA,8CAHY,IAGZ;;AAAA,yCAFqC,EAErC;;AACtB,SAAKC,MAAL,GAAc,KAAIC,8BAAJ,EAAcF,GAAd,CAAd;AACD;;AAED,QAAaG,QAAb,GAAwE;AACtE,QAAI,KAAKC,gBAAT,EAA2B;AACzB,WAAKC,WAAL,GAAmB,uBAAM,MAAM,KAAKJ,MAAL,CAAYK,oBAAZ,EAAZ,GAAgD,gBAAhD,CAAnB;AACA,WAAKF,gBAAL,GAAwB,KAAxB;AACD;;AACD,WAAO,KAAKC,WAAZ;AACD;;AAED,QAAaE,aAAb,CAA2BC,cAA3B,EAA6E;AAAA;;AAC3E,UAAM,KAAKC,wBAAL,CAA8BD,cAA9B,CAAN;AACA,WAAO,+BAAKH,WAAL,CAAiBG,cAAjB,iFAAkCE,QAAlC,KAA8C,IAArD;AACD;;AAED,QAAaC,gBAAb,CAA8BH,cAA9B,EAAmF;AACjF,UAAM,KAAKC,wBAAL,CAA8BD,cAA9B,CAAN;AACA,WAAO,KAAKH,WAAL,CAAiBG,cAAjB,CAAP;AACD;;AAED,QAAaI,cAAb,CAA4BJ,cAA5B,EAAoDE,QAApD,EAAuF;AAAA;;AACrF,UAAM,KAAKD,wBAAL,CAA8BD,cAA9B,CAAN;AACA,UAAM,KAAKP,MAAL,CAAYY,iBAAZ,CAA8BL,cAA9B,EAA8CE,QAA9C,CAAN;AACA,SAAKL,WAAL,CAAiBG,cAAjB,IAAmC;AACjCA,MAAAA,cADiC;AAEjCE,MAAAA,QAFiC;AAGjCI,MAAAA,eAAe,4BAAE,KAAKT,WAAL,CAAiBG,cAAjB,CAAF,2DAAE,uBAAkCM;AAHlB,KAAnC;AAKD;;AAED,QAAaC,WAAb,CAAyBP,cAAzB,EAAiF;AAAA;;AAC/E,UAAM,KAAKC,wBAAL,CAA8BD,cAA9B,CAAN;AACA,gCAAO,KAAKH,WAAZ,gFAAO,kBAAmBG,cAAnB,CAAP,2DAAO,uBAAoCM,eAA3C;AACD;;AAED,QAAaE,YAAb,CAA0BR,cAA1B,EAAkDS,SAAlD,EAAoF;AAAA;;AAClF,UAAM,KAAKR,wBAAL,CAA8BD,cAA9B,CAAN;AACA,UAAM,KAAKP,MAAL,CAAYiB,eAAZ,CAA4BV,cAA5B,EAA4CS,SAA5C,CAAN;AACA,SAAKZ,WAAL,CAAiBG,cAAjB,IAAmC;AACjCA,MAAAA,cADiC;AAEjCE,MAAAA,QAAQ,4BAAE,KAAKL,WAAL,CAAiBG,cAAjB,CAAF,2DAAE,uBAAkCE,QAFX;AAGjCI,MAAAA,eAAe,EAAE;AAAEG,QAAAA;AAAF;AAHgB,KAAnC;AAKD;;AAED,QAAaE,YAAb,CAA0BX,cAA1B,EAAiE;AAC/D,UAAM,KAAKC,wBAAL,CAA8BD,cAA9B,CAAN;AACA,UAAM,KAAKP,MAAL,CAAYmB,eAAZ,CAA4BZ,cAA5B,CAAN;;AACA,QAAI,KAAKH,WAAL,CAAiBG,cAAjB,CAAJ,EAAsC;AACpC,WAAKH,WAAL,CAAiBG,cAAjB,EAAiCM,eAAjC,GAAmD,IAAnD;AACD;AACF;;AAED,QAAaO,cAAb,CAA4Bb,cAA5B,EAAmE;AACjE,UAAM,KAAKC,wBAAL,CAA8BD,cAA9B,CAAN;AACA,UAAM,KAAKP,MAAL,CAAYqB,iBAAZ,CAA8Bd,cAA9B,CAAN;;AACA,QAAI,KAAKH,WAAL,CAAiBG,cAAjB,CAAJ,EAAsC;AACpC,WAAKH,WAAL,CAAiBG,cAAjB,EAAiCE,QAAjC,GAA4C,IAA5C;AACD;AACF;;AAED,QAAcD,wBAAd,CAAuCD,cAAvC,EAA8E;AAC5E,QAAI,CAAC,KAAKH,WAAL,CAAiBG,cAAjB,CAAL,EAAuC;AACrC,YAAMe,QAAQ,GAAG,MAAM,KAAKtB,MAAL,CAAYuB,0BAAZ,CAAuChB,cAAvC,CAAvB;AACA,WAAKH,WAAL,CAAiBG,cAAjB,IAAmC;AACjCA,QAAAA,cADiC;AAEjCE,QAAAA,QAAQ,EAAEa,QAAF,aAAEA,QAAF,uBAAEA,QAAQ,CAAEb,QAFa;AAGjCI,QAAAA,eAAe,EAAES,QAAF,aAAEA,QAAF,uBAAEA,QAAQ,CAAET;AAHM,OAAnC;AAKD;AACF;;AA7E6B","sourcesContent":["import { ApiV2 } from '@expo/xdl';\nimport keyBy from 'lodash/keyBy';\n\nimport { AndroidCredentials, FcmCredentials, Keystore } from '../credentials';\nimport ApiClient from './AndroidApiV2Wrapper';\n\nexport default class AndroidApi {\n  private client: ApiClient;\n  private shouldRefetchAll: boolean = true;\n  private credentials: { [key: string]: AndroidCredentials } = {};\n\n  constructor(api: ApiV2) {\n    this.client = new ApiClient(api);\n  }\n\n  public async fetchAll(): Promise<{ [key: string]: AndroidCredentials }> {\n    if (this.shouldRefetchAll) {\n      this.credentials = keyBy(await this.client.getAllCredentialsApi(), 'experienceName');\n      this.shouldRefetchAll = false;\n    }\n    return this.credentials;\n  }\n\n  public async fetchKeystore(experienceName: string): Promise<Keystore | null> {\n    await this.ensureCredentialsFetched(experienceName);\n    return this.credentials[experienceName]?.keystore || null;\n  }\n\n  public async fetchCredentials(experienceName: string): Promise<AndroidCredentials> {\n    await this.ensureCredentialsFetched(experienceName);\n    return this.credentials[experienceName];\n  }\n\n  public async updateKeystore(experienceName: string, keystore: Keystore): Promise<void> {\n    await this.ensureCredentialsFetched(experienceName);\n    await this.client.updateKeystoreApi(experienceName, keystore);\n    this.credentials[experienceName] = {\n      experienceName,\n      keystore,\n      pushCredentials: this.credentials[experienceName]?.pushCredentials,\n    };\n  }\n\n  public async fetchFcmKey(experienceName: string): Promise<FcmCredentials | null> {\n    await this.ensureCredentialsFetched(experienceName);\n    return this.credentials?.[experienceName]?.pushCredentials;\n  }\n\n  public async updateFcmKey(experienceName: string, fcmApiKey: string): Promise<void> {\n    await this.ensureCredentialsFetched(experienceName);\n    await this.client.updateFcmKeyApi(experienceName, fcmApiKey);\n    this.credentials[experienceName] = {\n      experienceName,\n      keystore: this.credentials[experienceName]?.keystore,\n      pushCredentials: { fcmApiKey },\n    };\n  }\n\n  public async removeFcmKey(experienceName: string): Promise<void> {\n    await this.ensureCredentialsFetched(experienceName);\n    await this.client.removeFcmKeyApi(experienceName);\n    if (this.credentials[experienceName]) {\n      this.credentials[experienceName].pushCredentials = null;\n    }\n  }\n\n  public async removeKeystore(experienceName: string): Promise<void> {\n    await this.ensureCredentialsFetched(experienceName);\n    await this.client.removeKeystoreApi(experienceName);\n    if (this.credentials[experienceName]) {\n      this.credentials[experienceName].keystore = null;\n    }\n  }\n\n  private async ensureCredentialsFetched(experienceName: string): Promise<void> {\n    if (!this.credentials[experienceName]) {\n      const response = await this.client.getAllCredentialsForAppApi(experienceName);\n      this.credentials[experienceName] = {\n        experienceName,\n        keystore: response?.keystore,\n        pushCredentials: response?.pushCredentials,\n      };\n    }\n  }\n}\n"],"file":"AndroidApi.js"}