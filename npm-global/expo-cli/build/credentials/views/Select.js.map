{"version":3,"sources":["../../../src/credentials/views/Select.ts"],"names":["SelectPlatform","open","ctx","platform","type","name","message","pageSize","Infinity","choices","view","SelectIosExperience","SelectAndroidExperience","CredentialsManager","get","changeMainView","accountName","hasProjectContext","manifest","owner","undefined","user","username","iosCredentials","ios","getAllCredentials","projectSpecificActions","prompt","separator","value","question","action","handleAction","getAppLookupParamsFromContext","projectName","slug","bundleIdentifier","Error","iosPushView","CreateIosPush","UpdateIosPush","RemoveIosPush","iosDistView","CreateIosDist","UpdateIosDist","RemoveIosDist","app","UseExistingPushNotification","UseExistingDistributionCert","iosProvisionigProfileView","RemoveProvisioningProfile","askAboutProjectMode","experienceName","runProjectContext","androidView","ExperienceView","credentials","android","fetchAll","Object","values","map","cred","QuitError","constructor","setPrototypeOf","prototype","DoQuit","runAsync","mainpage","AskQuit","selected","process","exit"],"mappings":"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","sourcesContent":["import invariant from 'invariant';\n\nimport prompt, { ChoiceType, Question } from '../../prompt';\nimport { confirmAsync } from '../../prompts';\nimport { displayAndroidCredentials, displayIosCredentials } from '../actions/list';\nimport { AppLookupParams } from '../api/IosApi';\nimport { Context, IView } from '../context';\nimport { CredentialsManager } from '../route';\nimport * as androidView from './AndroidCredentials';\nimport * as iosDistView from './IosDistCert';\nimport * as iosProvisionigProfileView from './IosProvisioningProfile';\nimport * as iosPushView from './IosPushCredentials';\n\nexport class SelectPlatform implements IView {\n  async open(ctx: Context): Promise<IView | null> {\n    const { platform } = await prompt([\n      {\n        type: 'list',\n        name: 'platform',\n        message: 'Select platform',\n        pageSize: Infinity,\n        choices: ['ios', 'android'],\n      },\n    ]);\n    const view = platform === 'ios' ? new SelectIosExperience() : new SelectAndroidExperience();\n    CredentialsManager.get().changeMainView(view);\n    return view;\n  }\n}\n\nexport class SelectIosExperience implements IView {\n  async open(ctx: Context): Promise<IView | null> {\n    const accountName =\n      (ctx.hasProjectContext ? ctx.manifest.owner : undefined) ?? ctx.user.username;\n    const iosCredentials = await ctx.ios.getAllCredentials(accountName);\n\n    await displayIosCredentials(iosCredentials);\n\n    const projectSpecificActions: ChoiceType<string>[] = ctx.hasProjectContext\n      ? [\n          prompt.separator('---- Current project actions ----'),\n          {\n            value: 'use-existing-push-ios',\n            name: 'Use existing Push Notifications Key in current project',\n          },\n          {\n            value: 'use-existing-dist-ios',\n            name: 'Use existing Distribution Certificate in current project',\n          },\n          // {\n          //   value: 'current-remove-push-ios',\n          //   name: 'Remove Push Notifactions credentials for current project',\n          // },\n          // {\n          //   value: 'current-remove-dist-ios',\n          //   name: 'Remove Distribution Certificate for current project',\n          // },\n          // {\n          //   value: 'current-remove-app-ios',\n          //   name: 'Remove all credentials for current project',\n          // },\n          prompt.separator('---- Account level actions ----'),\n        ]\n      : [];\n\n    const question: Question = {\n      type: 'list',\n      name: 'action',\n      message: 'What do you want to do?',\n      choices: [\n        ...projectSpecificActions,\n        { value: 'remove-provisioning-profile', name: 'Remove Provisioning Profile' },\n        { value: 'create-ios-push', name: 'Add new Push Notifications Key' },\n        { value: 'remove-ios-push', name: 'Remove Push Notification credentials' },\n        { value: 'update-ios-push', name: 'Update Push Notifications Key' },\n        { value: 'create-ios-dist', name: 'Add new Distribution Certificate' },\n        { value: 'remove-ios-dist', name: 'Remove Distribution Certificate' },\n        { value: 'update-ios-dist', name: 'Update Distribution Certificate' },\n      ],\n      pageSize: Infinity,\n    };\n\n    const { action } = await prompt(question);\n    return this.handleAction(ctx, accountName, action);\n  }\n\n  getAppLookupParamsFromContext(ctx: Context): AppLookupParams {\n    const projectName = ctx.manifest.slug;\n    const accountName = ctx.manifest.owner || ctx.user.username;\n    const bundleIdentifier = ctx.manifest.ios?.bundleIdentifier;\n    if (!bundleIdentifier) {\n      throw new Error(`ios.bundleIdentifier need to be defined`);\n    }\n\n    return { accountName, projectName, bundleIdentifier };\n  }\n\n  handleAction(ctx: Context, accountName: string, action: string): IView | null {\n    switch (action) {\n      case 'create-ios-push':\n        return new iosPushView.CreateIosPush(accountName);\n      case 'update-ios-push':\n        return new iosPushView.UpdateIosPush(accountName);\n      case 'remove-ios-push':\n        return new iosPushView.RemoveIosPush(accountName);\n      case 'create-ios-dist':\n        return new iosDistView.CreateIosDist(accountName);\n      case 'update-ios-dist':\n        return new iosDistView.UpdateIosDist(accountName);\n      case 'remove-ios-dist':\n        return new iosDistView.RemoveIosDist(accountName);\n      case 'use-existing-push-ios': {\n        const app = this.getAppLookupParamsFromContext(ctx);\n        return new iosPushView.UseExistingPushNotification(app);\n      }\n      case 'use-existing-dist-ios': {\n        const app = this.getAppLookupParamsFromContext(ctx);\n        return new iosDistView.UseExistingDistributionCert(app);\n      }\n      case 'remove-provisioning-profile':\n        return new iosProvisionigProfileView.RemoveProvisioningProfile(accountName);\n      default:\n        throw new Error('Unknown action selected');\n    }\n  }\n}\n\nexport class SelectAndroidExperience implements IView {\n  private askAboutProjectMode = true;\n\n  async open(ctx: Context): Promise<IView | null> {\n    if (ctx.hasProjectContext && this.askAboutProjectMode) {\n      const experienceName = `@${ctx.manifest.owner || ctx.user.username}/${ctx.manifest.slug}`;\n\n      const runProjectContext = await confirmAsync({\n        message: `You are currently in a directory with ${experienceName} experience. Do you want to select it?`,\n      });\n\n      if (runProjectContext) {\n        invariant(ctx.manifest.slug, 'app.json slug field must be set');\n        const view = new androidView.ExperienceView(experienceName);\n        CredentialsManager.get().changeMainView(view);\n        return view;\n      }\n    }\n    this.askAboutProjectMode = false;\n\n    const credentials = await ctx.android.fetchAll();\n    await displayAndroidCredentials(Object.values(credentials));\n\n    const question: Question = {\n      type: 'list',\n      name: 'experienceName',\n      message: 'Select application',\n      choices: Object.values(credentials).map(cred => ({\n        name: cred.experienceName,\n        value: cred.experienceName,\n      })),\n      pageSize: Infinity,\n    };\n    const { experienceName } = await prompt(question);\n\n    return new androidView.ExperienceView(experienceName);\n  }\n}\n\nexport class QuitError extends Error {\n  constructor() {\n    super();\n\n    // Set the prototype explicitly.\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, QuitError.prototype);\n  }\n}\n\nexport interface IQuit {\n  runAsync(mainpage: IView): Promise<IView>;\n}\n\nexport class DoQuit implements IQuit {\n  async runAsync(mainpage: IView): Promise<IView> {\n    throw new QuitError();\n  }\n}\n\nexport class AskQuit implements IQuit {\n  async runAsync(mainpage: IView): Promise<IView> {\n    const { selected } = await prompt([\n      {\n        type: 'list',\n        name: 'selected',\n        message: 'Do you want to quit Credential Manager',\n        choices: [\n          { value: 'exit', name: 'Quit Credential Manager' },\n          { value: 'mainpage', name: 'Go back to experience overview.' },\n        ],\n      },\n    ]);\n    if (selected === 'exit') {\n      process.exit(0);\n    }\n    return mainpage;\n  }\n}\n"],"file":"Select.js"}