{"version":3,"sources":["../../../src/credentials/views/IosProvisioningProfileAdhoc.ts"],"names":["CreateOrReuseProvisioningProfileAdhoc","constructor","app","options","distCertSerialNumber","udids","assignProvisioningProfile","ctx","provisioningProfile","ios","updateProvisioningProfile","chalk","green","provisioningProfileId","accountName","projectName","bundleIdentifier","createOrReuse","ensureAppleCtx","ppManager","ProvisioningProfileAdhocManager","appleCtx","open","user","Error"],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAGA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;AASO,MAAMA,qCAAN,CAA6D;AAIlEC,EAAAA,WAAW,CAASC,GAAT,EAA+BC,OAA/B,EAAyE;AAAA,SAAhED,GAAgE,GAAhEA,GAAgE;;AAAA;;AAAA;;AAClF,UAAM;AAAEE,MAAAA,oBAAF;AAAwBC,MAAAA;AAAxB,QAAkCF,OAAxC;AACA,SAAKC,oBAAL,GAA4BA,oBAA5B;AACA,SAAKC,KAAL,GAAaA,KAAb;AACD;;AAED,QAAMC,yBAAN,CAAgCC,GAAhC,EAA8CC,mBAA9C,EAAwF;AACtF,UAAMD,GAAG,CAACE,GAAJ,CAAQC,yBAAR,CAAkC,KAAKR,GAAvC,EAA4CM,mBAA5C,CAAN;AACA,wBACEG,iBAAMC,KAAN,CACG,kDAAiDJ,mBAAmB,CAACK,qBAAsB,QAAO,KAAKX,GAAL,CAASY,WAAY,IAAG,KAAKZ,GAAL,CAASa,WAAY,KAAI,KAAKb,GAAL,CAASc,gBAAiB,GADhL,CADF;AAKD;;AAED,QAAMC,aAAN,CAAoBV,GAApB,EAAgE;AAC9D,UAAMA,GAAG,CAACW,cAAJ,EAAN;AACA,UAAMC,SAAS,GAAG,KAAIC,2DAAJ,EAAoCb,GAAG,CAACc,QAAxC,CAAlB;AACA,WAAO,MAAMF,SAAS,CAACF,aAAV,CACX,KAAKZ,KADM,EAEX,KAAKH,GAAL,CAASc,gBAFE,EAGX,KAAKZ,oBAHM,CAAb;AAKD;;AAED,QAAMkB,IAAN,CAAWf,GAAX,EAAgD;AAC9C,QAAI,CAACA,GAAG,CAACgB,IAAT,EAAe;AACb,YAAM,IAAIC,KAAJ,CAAW,6CAAX,CAAN;AACD;;AAED,UAAMhB,mBAAmB,GAAG,MAAM,KAAKS,aAAL,CAAmBV,GAAnB,CAAlC;AACA,UAAM,KAAKD,yBAAL,CAA+BC,GAA/B,EAAoCC,mBAApC,CAAN;AACA,WAAO,IAAP;AACD;;AArCiE","sourcesContent":["import chalk from 'chalk';\n\nimport { ProvisioningProfile } from '../../appleApi';\nimport { ProvisioningProfileAdhocManager } from '../../appleApi/provisioningProfileAdhoc';\nimport log from '../../log';\nimport { AppLookupParams } from '../api/IosApi';\nimport { Context, IView } from '../context';\n\nexport type ProvisioningProfileAdhocOptions = {\n  distCertSerialNumber: string;\n  udids: string[];\n};\n\nexport class CreateOrReuseProvisioningProfileAdhoc implements IView {\n  private distCertSerialNumber: string;\n  private udids: string[];\n\n  constructor(private app: AppLookupParams, options: ProvisioningProfileAdhocOptions) {\n    const { distCertSerialNumber, udids } = options;\n    this.distCertSerialNumber = distCertSerialNumber;\n    this.udids = udids;\n  }\n\n  async assignProvisioningProfile(ctx: Context, provisioningProfile: ProvisioningProfile) {\n    await ctx.ios.updateProvisioningProfile(this.app, provisioningProfile);\n    log(\n      chalk.green(\n        `Successfully assigned Provisioning Profile id: ${provisioningProfile.provisioningProfileId} to @${this.app.accountName}/${this.app.projectName} (${this.app.bundleIdentifier})`\n      )\n    );\n  }\n\n  async createOrReuse(ctx: Context): Promise<ProvisioningProfile> {\n    await ctx.ensureAppleCtx();\n    const ppManager = new ProvisioningProfileAdhocManager(ctx.appleCtx);\n    return await ppManager.createOrReuse(\n      this.udids,\n      this.app.bundleIdentifier,\n      this.distCertSerialNumber\n    );\n  }\n\n  async open(ctx: Context): Promise<IView | null> {\n    if (!ctx.user) {\n      throw new Error(`This workflow requires you to be logged in.`);\n    }\n\n    const provisioningProfile = await this.createOrReuse(ctx);\n    await this.assignProvisioningProfile(ctx, provisioningProfile);\n    return null;\n  }\n}\n"],"file":"IosProvisioningProfileAdhoc.js"}