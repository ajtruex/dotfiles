{"version":3,"sources":["../../src/appleApi/provisioningProfile.ts"],"names":["ProvisioningProfileManager","constructor","appleCtx","ctx","useExisting","bundleIdentifier","provisioningProfile","distCert","spinner","start","provisioningProfileId","Error","distCertSerialNumber","IosCodeSigning","findP12CertSerialNumber","certP12","certPassword","args","appleId","appleIdPassword","team","id","String","inHouse","result","travelingFastlane","manageProvisioningProfiles","succeed","teamId","teamName","name","list","profiles","map","profile","create","profileName","revoke"],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAIA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;AAiBO,MAAMA,0BAAN,CAAiC;AAEtCC,EAAAA,WAAW,CAACC,QAAD,EAAqB;AAAA;;AAC9B,SAAKC,GAAL,GAAWD,QAAX;AACD;;AAED,QAAME,WAAN,CACEC,gBADF,EAEEC,mBAFF,EAGEC,QAHF,EAIgC;AAC9B,UAAMC,OAAO,GAAG,oBAAK,0DAAL,EAAgEC,KAAhE,EAAhB;;AACA,QAAI,CAACH,mBAAmB,CAACI,qBAAzB,EAAgD;AAC9C,YAAM,IAAIC,KAAJ,CAAU,oEAAV,CAAN;AACD;;AAED,QAAI,CAACJ,QAAQ,CAACK,oBAAd,EAAoC;AAClCL,MAAAA,QAAQ,CAACK,oBAAT,GAAgCC,sBAAeC,uBAAf,CAC9BP,QAAQ,CAACQ,OADqB,EAE9BR,QAAQ,CAACS,YAFqB,CAAhC;AAID;;AAED,UAAMC,IAAI,GAAG,CACX,cADW,EAEX,KAAKd,GAAL,CAASe,OAFE,EAGX,KAAKf,GAAL,CAASgB,eAHE,EAIX,KAAKhB,GAAL,CAASiB,IAAT,CAAcC,EAJH,EAKXC,MAAM,CAAC,KAAKnB,GAAL,CAASiB,IAAT,CAAcG,OAAf,CALK,EAMXlB,gBANW,EAOXC,mBAAmB,CAACI,qBAPT,EAQXH,QAAQ,CAACK,oBARE,CAAb;AAUA,UAAMY,MAAM,GAAG,MAAM,2BAAUC,8BAAkBC,0BAA5B,EAAwDT,IAAxD,CAArB;AACAT,IAAAA,OAAO,CAACmB,OAAR;AACA,WAAO,EACL,GAAGH,MADE;AAELI,MAAAA,MAAM,EAAE,KAAKzB,GAAL,CAASiB,IAAT,CAAcC,EAFjB;AAGLQ,MAAAA,QAAQ,EAAE,KAAK1B,GAAL,CAASiB,IAAT,CAAcU;AAHnB,KAAP;AAKD;;AAED,QAAMC,IAAN,CAAW1B,gBAAX,EAAyE;AACvE,UAAMG,OAAO,GAAG,oBAAK,6CAAL,EAAmDC,KAAnD,EAAhB;AACA,UAAMQ,IAAI,GAAG,CACX,MADW,EAEX,KAAKd,GAAL,CAASe,OAFE,EAGX,KAAKf,GAAL,CAASgB,eAHE,EAIX,KAAKhB,GAAL,CAASiB,IAAT,CAAcC,EAJH,EAKXC,MAAM,CAAC,KAAKnB,GAAL,CAASiB,IAAT,CAAcG,OAAf,CALK,EAMXlB,gBANW,CAAb;AAQA,UAAM;AAAE2B,MAAAA;AAAF,QAAe,MAAM,2BAAUP,8BAAkBC,0BAA5B,EAAwDT,IAAxD,CAA3B;AACAT,IAAAA,OAAO,CAACmB,OAAR;AACA,WAAOK,QAAQ,CAACC,GAAT,CAAcC,OAAD,KAAoE,EACtF,GAAGA,OADmF;AAEtFN,MAAAA,MAAM,EAAE,KAAKzB,GAAL,CAASiB,IAAT,CAAcC,EAFgE;AAGtFQ,MAAAA,QAAQ,EAAE,KAAK1B,GAAL,CAASiB,IAAT,CAAcU;AAH8D,KAApE,CAAb,CAAP;AAKD;;AAED,QAAMK,MAAN,CACE9B,gBADF,EAEEE,QAFF,EAGE6B,WAHF,EAIgC;AAC9B,UAAM5B,OAAO,GAAG,oBAAK,mDAAL,EAAyDC,KAAzD,EAAhB;;AACA,QAAI,CAACF,QAAQ,CAACK,oBAAd,EAAoC;AAClCL,MAAAA,QAAQ,CAACK,oBAAT,GAAgCC,sBAAeC,uBAAf,CAC9BP,QAAQ,CAACQ,OADqB,EAE9BR,QAAQ,CAACS,YAFqB,CAAhC;AAID;;AAED,UAAMC,IAAI,GAAG,CACX,QADW,EAEX,KAAKd,GAAL,CAASe,OAFE,EAGX,KAAKf,GAAL,CAASgB,eAHE,EAIX,KAAKhB,GAAL,CAASiB,IAAT,CAAcC,EAJH,EAKXC,MAAM,CAAC,KAAKnB,GAAL,CAASiB,IAAT,CAAcG,OAAf,CALK,EAMXlB,gBANW,EAOXE,QAAQ,CAACK,oBAPE,EAQXwB,WARW,CAAb;AAUA,UAAMZ,MAAM,GAAG,MAAM,2BAAUC,8BAAkBC,0BAA5B,EAAwDT,IAAxD,CAArB;AACAT,IAAAA,OAAO,CAACmB,OAAR;AACA,WAAO,EACL,GAAGH,MADE;AAELI,MAAAA,MAAM,EAAE,KAAKzB,GAAL,CAASiB,IAAT,CAAcC,EAFjB;AAGLQ,MAAAA,QAAQ,EAAE,KAAK1B,GAAL,CAASiB,IAAT,CAAcU;AAHnB,KAAP;AAKD;;AAED,QAAMO,MAAN,CAAahC,gBAAb,EAAuC;AACrC,UAAMG,OAAO,GAAG,oBAAK,mDAAL,EAAyDC,KAAzD,EAAhB;AACA,UAAMQ,IAAI,GAAG,CACX,QADW,EAEX,KAAKd,GAAL,CAASe,OAFE,EAGX,KAAKf,GAAL,CAASgB,eAHE,EAIX,KAAKhB,GAAL,CAASiB,IAAT,CAAcC,EAJH,EAKXC,MAAM,CAAC,KAAKnB,GAAL,CAASiB,IAAT,CAAcG,OAAf,CALK,EAMXlB,gBANW,CAAb;AAQA,UAAM,2BAAUoB,8BAAkBC,0BAA5B,EAAwDT,IAAxD,CAAN;AACAT,IAAAA,OAAO,CAACmB,OAAR;AACD;;AAzGqC","sourcesContent":["import { IosCodeSigning } from '@expo/xdl';\nimport ora from 'ora';\n\nimport { AppleCtx } from './authenticate';\nimport { DistCert, DistCertInfo } from './distributionCert';\nimport { runAction, travelingFastlane } from './fastlane';\n\nexport type ProvisioningProfileInfo = {\n  name: string;\n  status: string;\n  expires: number;\n  distributionMethod: string;\n  certificates: DistCertInfo[];\n} & ProvisioningProfile;\n\nexport type ProvisioningProfile = {\n  provisioningProfileId?: string;\n  provisioningProfile: string;\n  teamId: string;\n  teamName?: string;\n};\n\nexport class ProvisioningProfileManager {\n  ctx: AppleCtx;\n  constructor(appleCtx: AppleCtx) {\n    this.ctx = appleCtx;\n  }\n\n  async useExisting<T extends DistCert>(\n    bundleIdentifier: string,\n    provisioningProfile: ProvisioningProfile,\n    distCert: T\n  ): Promise<ProvisioningProfile> {\n    const spinner = ora(`Configuring existing Provisioning Profiles from Apple...`).start();\n    if (!provisioningProfile.provisioningProfileId) {\n      throw new Error('Provisioning profile: cannot use existing profile, insufficient id');\n    }\n\n    if (!distCert.distCertSerialNumber) {\n      distCert.distCertSerialNumber = IosCodeSigning.findP12CertSerialNumber(\n        distCert.certP12,\n        distCert.certPassword\n      ) as string;\n    }\n\n    const args = [\n      'use-existing',\n      this.ctx.appleId,\n      this.ctx.appleIdPassword,\n      this.ctx.team.id,\n      String(this.ctx.team.inHouse),\n      bundleIdentifier,\n      provisioningProfile.provisioningProfileId,\n      distCert.distCertSerialNumber,\n    ];\n    const result = await runAction(travelingFastlane.manageProvisioningProfiles, args);\n    spinner.succeed();\n    return {\n      ...result,\n      teamId: this.ctx.team.id,\n      teamName: this.ctx.team.name,\n    };\n  }\n\n  async list(bundleIdentifier: string): Promise<ProvisioningProfileInfo[]> {\n    const spinner = ora(`Getting Provisioning Profiles from Apple...`).start();\n    const args = [\n      'list',\n      this.ctx.appleId,\n      this.ctx.appleIdPassword,\n      this.ctx.team.id,\n      String(this.ctx.team.inHouse),\n      bundleIdentifier,\n    ];\n    const { profiles } = await runAction(travelingFastlane.manageProvisioningProfiles, args);\n    spinner.succeed();\n    return profiles.map((profile: Omit<ProvisioningProfileInfo, 'teamId' | 'teamName'>) => ({\n      ...profile,\n      teamId: this.ctx.team.id,\n      teamName: this.ctx.team.name,\n    }));\n  }\n\n  async create<T extends DistCert>(\n    bundleIdentifier: string,\n    distCert: T,\n    profileName: string\n  ): Promise<ProvisioningProfile> {\n    const spinner = ora(`Creating Provisioning Profile on Apple Servers...`).start();\n    if (!distCert.distCertSerialNumber) {\n      distCert.distCertSerialNumber = IosCodeSigning.findP12CertSerialNumber(\n        distCert.certP12,\n        distCert.certPassword\n      ) as string;\n    }\n\n    const args = [\n      'create',\n      this.ctx.appleId,\n      this.ctx.appleIdPassword,\n      this.ctx.team.id,\n      String(this.ctx.team.inHouse),\n      bundleIdentifier,\n      distCert.distCertSerialNumber,\n      profileName,\n    ];\n    const result = await runAction(travelingFastlane.manageProvisioningProfiles, args);\n    spinner.succeed();\n    return {\n      ...result,\n      teamId: this.ctx.team.id,\n      teamName: this.ctx.team.name,\n    };\n  }\n\n  async revoke(bundleIdentifier: string) {\n    const spinner = ora(`Revoking Provisioning Profile on Apple Servers...`).start();\n    const args = [\n      'revoke',\n      this.ctx.appleId,\n      this.ctx.appleIdPassword,\n      this.ctx.team.id,\n      String(this.ctx.team.inHouse),\n      bundleIdentifier,\n    ];\n    await runAction(travelingFastlane.manageProvisioningProfiles, args);\n    spinner.succeed();\n  }\n}\n"],"file":"provisioningProfile.js"}