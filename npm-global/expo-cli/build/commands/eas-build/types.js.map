{"version":3,"sources":["../../../src/commands/eas-build/types.ts"],"names":["BuildCommandPlatform","BuildStatus","AnalyticsEvent"],"mappings":";;;;;;;;;;;;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;IAKYA,oB;;;WAAAA,oB;AAAAA,EAAAA,oB;AAAAA,EAAAA,oB;AAAAA,EAAAA,oB;GAAAA,oB,oCAAAA,oB;;IAQAC,W;;;WAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;GAAAA,W,2BAAAA,W;;IAuDAC,c;;;WAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;GAAAA,c,8BAAAA,c","sourcesContent":["import { ExpoConfig } from '@expo/config';\nimport { Job, Platform } from '@expo/eas-build-job';\nimport { User } from '@expo/xdl';\n\nimport { AndroidBuildProfile, CredentialsSource, iOSBuildProfile } from '../../easJson';\n\nexport enum BuildCommandPlatform {\n  ANDROID = 'android',\n  IOS = 'ios',\n  ALL = 'all',\n}\n\nexport { Platform };\n\nexport enum BuildStatus {\n  IN_QUEUE = 'in-queue',\n  IN_PROGRESS = 'in-progress',\n  ERRORED = 'errored',\n  FINISHED = 'finished',\n}\n\nexport type TrackingContext = Record<string, string | number>;\n\nexport interface Build {\n  id: string;\n  status: BuildStatus;\n  platform: Platform;\n  createdAt: string;\n  artifacts?: BuildArtifacts;\n}\n\ninterface BuildArtifacts {\n  buildUrl?: string;\n  logsUrl: string;\n}\n\nexport interface CommandContext {\n  requestedPlatform: BuildCommandPlatform;\n  profile: string;\n  projectDir: string;\n  user: User;\n  accountName: string;\n  projectName: string;\n  exp: ExpoConfig;\n  trackingCtx: TrackingContext;\n  nonInteractive: boolean;\n  skipCredentialsCheck: boolean;\n  skipProjectConfiguration: boolean;\n}\n\nexport interface BuilderContext<T extends Platform> {\n  commandCtx: CommandContext;\n  trackingCtx: TrackingContext;\n  platform: T;\n  buildProfile: T extends Platform.Android ? AndroidBuildProfile : iOSBuildProfile;\n}\n\nexport interface Builder<T extends Platform> {\n  ctx: BuilderContext<T>;\n  setupAsync(): Promise<void>;\n  ensureCredentialsAsync(): Promise<CredentialsSource.LOCAL | CredentialsSource.REMOTE | undefined>;\n  ensureProjectConfiguredAsync(): Promise<void>;\n  prepareJobAsync(archiveUrl: string): Promise<Job>;\n}\n\nexport type PlatformBuildProfile<T extends Platform> = T extends Platform.Android\n  ? AndroidBuildProfile\n  : iOSBuildProfile;\n\nexport enum AnalyticsEvent {\n  BUILD_COMMAND = 'builds cli build command',\n  PROJECT_UPLOAD_SUCCESS = 'builds cli project upload success',\n  PROJECT_UPLOAD_FAIL = 'builds cli project upload fail',\n  GATHER_CREDENTIALS_SUCCESS = 'builds cli gather credentials success',\n  GATHER_CREDENTIALS_FAIL = 'builds cli gather credentials fail',\n  CONFIGURE_PROJECT_SUCCESS = 'builds cli configure project success',\n  CONFIGURE_PROJECT_FAIL = 'builds cli configure project fail',\n  BUILD_REQUEST_SUCCESS = 'build cli build request success',\n  BUILD_REQUEST_FAIL = 'builds cli build request fail',\n\n  BUILD_STATUS_COMMAND = 'builds cli build status',\n\n  CREDENTIALS_SYNC_COMMAND = 'builds cli credentials sync command',\n  CREDENTIALS_SYNC_UPDATE_LOCAL_SUCCESS = 'builds cli credentials sync update local success',\n  CREDENTIALS_SYNC_UPDATE_LOCAL_FAIL = 'builds cli credentials sync update local fail',\n  CREDENTIALS_SYNC_UPDATE_REMOTE_SUCCESS = 'builds cli credentials sync update remote success',\n  CREDENTIALS_SYNC_UPDATE_REMOTE_FAIL = 'builds cli credentials sync update remote fail',\n}\n"],"file":"types.js"}