{"version":3,"sources":["../../../../src/commands/eas-build/utils/misc.ts"],"names":["printLogsUrls","accountName","builds","user","UserManager","ensureLoggedInAsync","length","buildId","logsUrl","UrlUtils","constructBuildLogsUrl","username","v2","forEach","platform","platformDisplayNames","printBuildResults","artifacts","buildUrl","filter","i","build","status","printDeprecationWarnings","deprecationInfo","type","log","warn","message"],"mappings":";;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;AAQA,eAAeA,aAAf,CACEC,WADF,EAEEC,MAFF,EAGiB;AACf,QAAMC,IAAI,GAAG,MAAMC,mBAAYC,mBAAZ,EAAnB;;AACA,MAAIH,MAAM,CAACI,MAAP,KAAkB,CAAtB,EAAyB;AACvB,UAAM;AAAEC,MAAAA;AAAF,QAAcL,MAAM,CAAC,CAAD,CAA1B;AACA,UAAMM,OAAO,GAAGC,QAAQ,GAACC,qBAAT,CAA+B;AAC7CH,MAAAA,OAD6C;AAE7CI,MAAAA,QAAQ,EAAEV,WAFmC;AAG7CW,MAAAA,EAAE,EAAE;AAHyC,KAA/B,CAAhB;AAKA,wBAAK,aAAYJ,OAAQ,EAAzB;AACD,GARD,MAQO;AACLN,IAAAA,MAAM,CAACW,OAAP,CAAe,CAAC;AAAEN,MAAAA,OAAF;AAAWO,MAAAA;AAAX,KAAD,KAA2B;AACxC,YAAMN,OAAO,GAAGC,QAAQ,GAACC,qBAAT,CAA+B;AAC7CH,QAAAA,OAD6C;AAE7CI,QAAAA,QAAQ,EAAER,IAAI,CAACQ,QAF8B;AAG7CC,QAAAA,EAAE,EAAE;AAHyC,OAA/B,CAAhB;AAKA,0BAAK,aAAYG,kCAAqBD,QAArB,CAA+B,eAAcN,OAAQ,EAAtE;AACD,KAPD;AAQD;AACF;;AAED,eAAeQ,iBAAf,CAAiCd,MAAjC,EAA0E;AACxE,MAAIA,MAAM,CAACI,MAAP,KAAkB,CAAtB,EAAyB;AAAA;;AACvB,wBAAK,iBAAD,qCAAiBJ,MAAM,CAAC,CAAD,CAAvB,mEAAiB,SAAWe,SAA5B,uDAAiB,mBAAsBC,QAAvC,yEAAmD,EAAG,EAA1D;AACD,GAFD,MAEO;AACJhB,IAAAA,MAAM,CAACiB,MAAP,CAAcC,CAAC,IAAIA,CAAnB,CAAD,CACGD,MADH,CACUE,KAAK,IAAIA,KAAK,CAACC,MAAN,KAAiB,UADpC,EAEGT,OAFH,CAEWQ,KAAK,IAAI;AAAA;;AAChB,0BACG,aAAYN,kCAAqBM,KAAK,CAACP,QAA3B,CAAqC,mBAAlD,6CACEO,KAAK,CAACJ,SADR,qDACE,iBAAiBC,QADnB,yEAC+B,EAC9B,EAHH;AAKD,KARH;AASD;AACF;;AAED,SAASK,wBAAT,CAAkCC,eAAlC,EAA2E;AACzE,MAAI,CAACA,eAAL,EAAsB;AACpB;AACD;;AACD,MAAIA,eAAe,CAACC,IAAhB,KAAyB,UAA7B,EAAyC;AACvCC,mBAAIC,IAAJ,CAAS,iFAAT;;AACAD,mBAAIC,IAAJ,CAAS,iDAAT;;AACAD,mBAAIC,IAAJ,CAASH,eAAe,CAACI,OAAzB;AACD,GAJD,MAIO,IAAIJ,eAAe,CAACC,IAAhB,KAAyB,aAA7B,EAA4C;AACjDC,mBAAIC,IAAJ,CAAS,iFAAT;;AACAD,mBAAIC,IAAJ,CACE,iIADF;;AAGAD,mBAAIC,IAAJ,CAASH,eAAe,CAACI,OAAzB;AACD,GANM,MAMA;AACLF,mBAAIC,IAAJ,CAAS,mEAAT;;AACAD,mBAAIC,IAAJ,CAASH,eAAT;AACD;AACF","sourcesContent":["import { UserManager } from '@expo/xdl';\n\nimport log from '../../../log';\nimport * as UrlUtils from '../../utils/url';\nimport { platformDisplayNames } from '../constants';\nimport { Build } from '../types';\n\nexport interface DeprecationInfo {\n  type: 'user-facing' | 'internal';\n  message: string;\n}\n\nasync function printLogsUrls(\n  accountName: string,\n  builds: { platform: 'android' | 'ios'; buildId: string }[]\n): Promise<void> {\n  const user = await UserManager.ensureLoggedInAsync();\n  if (builds.length === 1) {\n    const { buildId } = builds[0];\n    const logsUrl = UrlUtils.constructBuildLogsUrl({\n      buildId,\n      username: accountName,\n      v2: true,\n    });\n    log(`Logs url: ${logsUrl}`);\n  } else {\n    builds.forEach(({ buildId, platform }) => {\n      const logsUrl = UrlUtils.constructBuildLogsUrl({\n        buildId,\n        username: user.username,\n        v2: true,\n      });\n      log(`Platform: ${platformDisplayNames[platform]}, Logs url: ${logsUrl}`);\n    });\n  }\n}\n\nasync function printBuildResults(builds: (Build | null)[]): Promise<void> {\n  if (builds.length === 1) {\n    log(`Artifact url: ${builds[0]?.artifacts?.buildUrl ?? ''}`);\n  } else {\n    (builds.filter(i => i) as Build[])\n      .filter(build => build.status === 'finished')\n      .forEach(build => {\n        log(\n          `Platform: ${platformDisplayNames[build.platform]}, Artifact url: ${\n            build.artifacts?.buildUrl ?? ''\n          }`\n        );\n      });\n  }\n}\n\nfunction printDeprecationWarnings(deprecationInfo?: DeprecationInfo): void {\n  if (!deprecationInfo) {\n    return;\n  }\n  if (deprecationInfo.type === 'internal') {\n    log.warn('This command is using API that soon will be deprecated, please update expo-cli.');\n    log.warn(\"Changes won't affect your project confiuration.\");\n    log.warn(deprecationInfo.message);\n  } else if (deprecationInfo.type === 'user-facing') {\n    log.warn('This command is using API that soon will be deprecated, please update expo-cli.');\n    log.warn(\n      'There might be some changes necessary to your project configuration, latest expo-cli will provide more specific error messages.'\n    );\n    log.warn(deprecationInfo.message);\n  } else {\n    log.warn('An unexpected warning was encountered. Please report it as a bug:');\n    log.warn(deprecationInfo);\n  }\n}\n\nexport { printLogsUrls, printBuildResults, printDeprecationWarnings };\n"],"file":"misc.js"}