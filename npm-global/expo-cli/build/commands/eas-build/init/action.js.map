{"version":3,"sources":["../../../../src/commands/eas-build/init/action.ts"],"names":["initAction","projectDir","options","buildCommandPlatforms","Object","values","BuildCommandPlatform","platform","requestedPlatform","ALL","nonInteractive","parent","includes","Error","map","p","log","chalk","bold","join","spinner","easJsonPath","path","easJson","builds","android","release","workflow","ios","fs","pathExists","writeFile","JSON","stringify","intentToAdd","succeed","err","DirtyGitTreeError","newLine","green","figures","tick","e","fail","commandCtx","profile","trackingCtx","skipCredentialsCheck","skipProjectConfiguration","easConfig","EasJsonReader","readAsync","ANDROID","androidCtx","Platform","Android","androidBuilder","AndroidBuilder","ensureCredentialsAsync","configureProjectAsync","IOS","iosCtx","iOS","iosBuilder","iOSBuilder"],"mappings":"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","sourcesContent":["import { Platform } from '@expo/eas-build-job';\nimport chalk from 'chalk';\nimport figures from 'figures';\nimport fs from 'fs-extra';\nimport ora from 'ora';\nimport path from 'path';\n\nimport { EasJsonReader } from '../../../easJson';\nimport { gitAddAsync } from '../../../git';\nimport log from '../../../log';\nimport AndroidBuilder from '../build/builders/AndroidBuilder';\nimport iOSBuilder from '../build/builders/iOSBuilder';\nimport { BuildCommandPlatform } from '../types';\nimport createBuilderContext from '../utils/createBuilderContext';\nimport createCommandContextAsync from '../utils/createCommandContextAsync';\nimport {\n  DirtyGitTreeError,\n  ensureGitRepoExistsAsync,\n  ensureGitStatusIsCleanAsync,\n  reviewAndCommitChangesAsync,\n} from '../utils/git';\n\ninterface BuildOptions {\n  platform?: BuildCommandPlatform;\n  skipCredentialsCheck?: boolean; // noop for now\n  parent?: {\n    nonInteractive: boolean;\n  };\n}\n\nasync function initAction(projectDir: string, options: BuildOptions): Promise<void> {\n  const buildCommandPlatforms = Object.values(BuildCommandPlatform);\n  const { platform: requestedPlatform = BuildCommandPlatform.ALL } = options;\n  const nonInteractive = options.parent?.nonInteractive === true;\n\n  if (!buildCommandPlatforms.includes(requestedPlatform)) {\n    throw new Error(\n      `-p/--platform needs to be one of the valid platforms: ${buildCommandPlatforms\n        .map(p => log.chalk.bold(p))\n        .join(', ')}`\n    );\n  }\n\n  const spinner = ora('Checking for eas.json file');\n\n  await ensureGitRepoExistsAsync();\n  await ensureGitStatusIsCleanAsync();\n\n  const easJsonPath = path.join(projectDir, 'eas.json');\n  const easJson = {\n    builds: {\n      android: {\n        release: {\n          workflow: 'generic',\n        },\n      },\n      ios: {\n        release: {\n          workflow: 'generic',\n        },\n      },\n    },\n  };\n\n  if (!(await fs.pathExists(easJsonPath))) {\n    await fs.writeFile(easJsonPath, `${JSON.stringify(easJson, null, 2)}\\n`);\n    await gitAddAsync(easJsonPath, { intentToAdd: true });\n  }\n\n  try {\n    await ensureGitStatusIsCleanAsync();\n    spinner.succeed('Found existing eas.json file');\n  } catch (err) {\n    if (err instanceof DirtyGitTreeError) {\n      spinner.succeed('We created a minimal eas.json file');\n      log.newLine();\n\n      try {\n        await reviewAndCommitChangesAsync('Create minimal eas.json', { nonInteractive });\n\n        log(`${chalk.green(figures.tick)} Successfully committed eas.json.`);\n      } catch (e) {\n        throw new Error(\n          \"Aborting, run the command again once you're ready. Make sure to commit any changes you've made.\"\n        );\n      }\n    } else {\n      spinner.fail();\n      throw err;\n    }\n  }\n\n  const commandCtx = await createCommandContextAsync({\n    requestedPlatform,\n    profile: 'release',\n    projectDir,\n    trackingCtx: {},\n    nonInteractive,\n    skipCredentialsCheck: options?.skipCredentialsCheck,\n    skipProjectConfiguration: false,\n  });\n\n  const easConfig = await new EasJsonReader(\n    commandCtx.projectDir,\n    commandCtx.requestedPlatform\n  ).readAsync(commandCtx.profile);\n\n  if (\n    requestedPlatform === BuildCommandPlatform.ALL ||\n    requestedPlatform === BuildCommandPlatform.ANDROID\n  ) {\n    const androidCtx = createBuilderContext<Platform.Android>({\n      commandCtx,\n      platform: Platform.Android,\n      easConfig,\n    });\n\n    const androidBuilder = new AndroidBuilder(androidCtx);\n\n    await androidBuilder.ensureCredentialsAsync();\n    await androidBuilder.configureProjectAsync();\n  }\n\n  if (\n    requestedPlatform === BuildCommandPlatform.ALL ||\n    requestedPlatform === BuildCommandPlatform.IOS\n  ) {\n    const iosCtx = createBuilderContext<Platform.iOS>({\n      commandCtx,\n      platform: Platform.iOS,\n      easConfig,\n    });\n\n    const iosBuilder = new iOSBuilder(iosCtx);\n\n    await iosBuilder.ensureCredentialsAsync();\n    await iosBuilder.configureProjectAsync();\n  }\n}\n\nexport default initAction;\n"],"file":"action.js"}