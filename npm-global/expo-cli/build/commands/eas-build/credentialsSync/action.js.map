{"version":3,"sources":["../../../../src/commands/eas-build/credentialsSync/action.ts"],"names":["credentialsSyncAction","projectDir","options","parent","nonInteractive","CommandError","user","UserManager","ensureLoggedInAsync","exp","skipSDKVersionRequirement","accountName","owner","username","projectName","slug","projectId","update","platform","type","name","message","choices","title","value","BuildCommandPlatform","ANDROID","IOS","ALL","trackingCtx","tracking_id","project_id","account_name","project_name","request_platform","Analytics","logEvent","AnalyticsEvent","CREDENTIALS_SYNC_COMMAND","updateLocalCredentialsAsync","updateRemoteCredentialsAsync","ctx","Context","init","hasProjectContext","Error","includes","experienceName","manifest","SetupAndroidBuildCredentialsFromLocal","skipKeystoreValidation","CREDENTIALS_SYNC_UPDATE_REMOTE_SUCCESS","error","CREDENTIALS_SYNC_UPDATE_REMOTE_FAIL","reason","bundleIdentifier","appLookupParams","SetupIosBuildCredentialsFromLocal","credentialsJsonUpdateUtils","updateAndroidCredentialsAsync","CREDENTIALS_SYNC_UPDATE_LOCAL_SUCCESS","CREDENTIALS_SYNC_UPDATE_LOCAL_FAIL","updateIosCredentialsAsync"],"mappings":"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","sourcesContent":["import { getConfig } from '@expo/config';\nimport { UserManager } from '@expo/xdl';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport CommandError from '../../../CommandError';\nimport { Context } from '../../../credentials/context';\nimport * as credentialsJsonUpdateUtils from '../../../credentials/credentialsJson/update';\nimport { runCredentialsManager } from '../../../credentials/route';\nimport { SetupAndroidBuildCredentialsFromLocal } from '../../../credentials/views/SetupAndroidKeystore';\nimport { SetupIosBuildCredentialsFromLocal } from '../../../credentials/views/SetupIosBuildCredentials';\nimport log from '../../../log';\nimport { ensureProjectExistsAsync } from '../../../projects';\nimport prompts from '../../../prompts';\nimport { getBundleIdentifier } from '../build/utils/ios';\nimport { AnalyticsEvent, BuildCommandPlatform, TrackingContext } from '../types';\nimport Analytics from '../utils/analytics';\n\ninterface Options {\n  parent: {\n    nonInteractive?: boolean;\n  };\n}\n\nexport default async function credentialsSyncAction(projectDir: string, options: Options) {\n  if (options.parent.nonInteractive) {\n    throw new CommandError('This command is not supported in --non-interactive mode');\n  }\n  const user = await UserManager.ensureLoggedInAsync();\n  const { exp } = getConfig(projectDir, { skipSDKVersionRequirement: true });\n\n  const accountName = exp.owner || user.username;\n  const projectName = exp.slug;\n\n  const projectId = await ensureProjectExistsAsync(user, {\n    accountName,\n    projectName,\n  });\n\n  const { update, platform } = await prompts([\n    {\n      type: 'select',\n      name: 'update',\n      message: 'What do you want to do?',\n      choices: [\n        {\n          title: 'Update credentials on the Expo servers with the local credentials.json contents',\n          value: 'remote',\n        },\n        {\n          title: 'Update or create local credentials.json with credentials from the Expo servers',\n          value: 'local',\n        },\n      ],\n    },\n    {\n      type: 'select',\n      name: 'platform',\n      message: 'Which platform would you like to update?',\n      choices: [\n        { title: 'Android', value: BuildCommandPlatform.ANDROID },\n        { title: 'iOS', value: BuildCommandPlatform.IOS },\n        { title: 'both', value: BuildCommandPlatform.ALL },\n      ],\n    },\n  ]);\n\n  const trackingCtx = {\n    tracking_id: uuidv4(),\n    project_id: projectId,\n    account_name: accountName,\n    project_name: projectName,\n    request_platform: platform,\n  };\n  Analytics.logEvent(AnalyticsEvent.CREDENTIALS_SYNC_COMMAND, trackingCtx);\n  if (update === 'local') {\n    await updateLocalCredentialsAsync(projectDir, platform, trackingCtx);\n  } else {\n    await updateRemoteCredentialsAsync(projectDir, platform, trackingCtx);\n  }\n}\n\nasync function updateRemoteCredentialsAsync(\n  projectDir: string,\n  platform: BuildCommandPlatform,\n  trackingCtx: TrackingContext\n): Promise<void> {\n  const ctx = new Context();\n  await ctx.init(projectDir);\n  if (!ctx.hasProjectContext) {\n    throw new Error('project context is required'); // should be checked earlier\n  }\n  if ([BuildCommandPlatform.ALL, BuildCommandPlatform.ANDROID].includes(platform)) {\n    try {\n      const experienceName = `@${ctx.manifest.owner || ctx.user.username}/${ctx.manifest.slug}`;\n      await runCredentialsManager(\n        ctx,\n        new SetupAndroidBuildCredentialsFromLocal(experienceName, { skipKeystoreValidation: false })\n      );\n      Analytics.logEvent(AnalyticsEvent.CREDENTIALS_SYNC_UPDATE_REMOTE_SUCCESS, {\n        ...trackingCtx,\n        platform: 'android',\n      });\n    } catch (error) {\n      Analytics.logEvent(AnalyticsEvent.CREDENTIALS_SYNC_UPDATE_REMOTE_FAIL, {\n        ...trackingCtx,\n        platform: 'android',\n        reason: error.message,\n      });\n      throw error;\n    }\n  }\n  if ([BuildCommandPlatform.ALL, BuildCommandPlatform.IOS].includes(platform)) {\n    try {\n      const bundleIdentifier = await getBundleIdentifier(projectDir, ctx.manifest);\n      const appLookupParams = {\n        accountName: ctx.manifest.owner ?? ctx.user.username,\n        projectName: ctx.manifest.slug,\n        bundleIdentifier,\n      };\n      await runCredentialsManager(ctx, new SetupIosBuildCredentialsFromLocal(appLookupParams));\n      Analytics.logEvent(AnalyticsEvent.CREDENTIALS_SYNC_UPDATE_REMOTE_SUCCESS, {\n        ...trackingCtx,\n        platform: 'ios',\n      });\n    } catch (error) {\n      Analytics.logEvent(AnalyticsEvent.CREDENTIALS_SYNC_UPDATE_REMOTE_FAIL, {\n        ...trackingCtx,\n        platform: 'ios',\n        reason: error.message,\n      });\n      throw error;\n    }\n  }\n}\n\nexport async function updateLocalCredentialsAsync(\n  projectDir: string,\n  platform: BuildCommandPlatform,\n  trackingCtx: TrackingContext\n): Promise<void> {\n  const ctx = new Context();\n  await ctx.init(projectDir);\n  if (!ctx.hasProjectContext) {\n    throw new Error('project context is required'); // should be checked earlier\n  }\n  if ([BuildCommandPlatform.ALL, BuildCommandPlatform.ANDROID].includes(platform)) {\n    try {\n      log('Updating Android credentials in credentials.json');\n      await credentialsJsonUpdateUtils.updateAndroidCredentialsAsync(ctx);\n      Analytics.logEvent(AnalyticsEvent.CREDENTIALS_SYNC_UPDATE_LOCAL_SUCCESS, {\n        ...trackingCtx,\n        platform: 'android',\n      });\n    } catch (error) {\n      Analytics.logEvent(AnalyticsEvent.CREDENTIALS_SYNC_UPDATE_LOCAL_FAIL, {\n        ...trackingCtx,\n        platform: 'android',\n        reason: error.message,\n      });\n      throw error;\n    }\n  }\n  if ([BuildCommandPlatform.ALL, BuildCommandPlatform.IOS].includes(platform)) {\n    try {\n      const bundleIdentifier = await getBundleIdentifier(projectDir, ctx.manifest);\n      log('Updating iOS credentials in credentials.json');\n      await credentialsJsonUpdateUtils.updateIosCredentialsAsync(ctx, bundleIdentifier);\n      Analytics.logEvent(AnalyticsEvent.CREDENTIALS_SYNC_UPDATE_REMOTE_SUCCESS, {\n        ...trackingCtx,\n        platform: 'android',\n      });\n    } catch (error) {\n      Analytics.logEvent(AnalyticsEvent.CREDENTIALS_SYNC_UPDATE_REMOTE_FAIL, {\n        ...trackingCtx,\n        platform: 'ios',\n        reason: error.message,\n      });\n      throw error;\n    }\n  }\n}\n"],"file":"action.js"}