{"version":3,"sources":["../../../../../src/commands/eas-build/build/utils/ios.ts"],"names":["getBundleIdentifier","_getBundleIdentifier","projectDir","manifest","bundleIdentifierFromPbxproj","IOSConfig","BundleIdenitifer","getBundleIdentifierFromPbxproj","bundleIdentifierFromConfig","log","newLine","chalk","yellow","bundleIdentifier","type","name","message","choices","title","bold","value","Error"],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAEO,MAAMA,mBAAmB,GAAG,qBAAKC,oBAAL,CAA5B;;;AAEP,eAAeA,oBAAf,CAAoCC,UAApC,EAAwDC,QAAxD,EAA+F;AAC7F,QAAMC,2BAA2B,GAAGC,oBAAUC,gBAAV,CAA2BC,8BAA3B,CAClCL,UADkC,CAApC;;AAGA,QAAMM,0BAA0B,GAAGH,oBAAUC,gBAAV,CAA2BN,mBAA3B,CAA+CG,QAA/C,CAAnC;;AACA,MAAIC,2BAA2B,KAAK,IAAhC,IAAwCI,0BAA0B,KAAK,IAA3E,EAAiF;AAC/E,QAAIJ,2BAA2B,KAAKI,0BAApC,EAAgE;AAC9D,aAAOJ,2BAAP;AACD,KAFD,MAEO;AACLK,qBAAIC,OAAJ;;AACA,0BACED,eAAIE,KAAJ,CAAUC,MAAV,CACG;;;uDADH,CADF;;AAQAH,qBAAIC,OAAJ;;AACA,YAAM;AAAEG,QAAAA;AAAF,UAAuB,MAAM,wBAAQ;AACzCC,QAAAA,IAAI,EAAE,QADmC;AAEzCC,QAAAA,IAAI,EAAE,kBAFmC;AAGzCC,QAAAA,OAAO,EAAE,wCAHgC;AAIzCC,QAAAA,OAAO,EAAE,CACP;AACEC,UAAAA,KAAK,EAAG,iCAAgCT,eAAIE,KAAJ,CAAUQ,IAAV,CAAef,2BAAf,CAA4C,EADtF;AAEEgB,UAAAA,KAAK,EAAEhB;AAFT,SADO,EAKP;AACEc,UAAAA,KAAK,EAAG,sCAAqCT,eAAIE,KAAJ,CAAUQ,IAAV,CAC3CX,0BAD2C,CAE3C,EAHJ;AAIEY,UAAAA,KAAK,EAAEZ;AAJT,SALO;AAJgC,OAAR,CAAnC;AAiBA,aAAOK,gBAAP;AACD;AACF,GAjCD,MAiCO,IAAIT,2BAA2B,KAAK,IAAhC,IAAwCI,0BAA0B,KAAK,IAA3E,EAAiF;AACtF,UAAM,IAAIa,KAAJ,CAAU,qEAAV,CAAN;AACD,GAFM,MAEA;AACL,QAAIjB,2BAA2B,KAAK,IAApC,EAA0C;AACxC,0BACG,SAAQK,eAAIE,KAAJ,CAAUQ,IAAV,CACPf,2BADO,CAEP,0DAHJ;AAKA,aAAOA,2BAAP;AACD,KAPD,MAOO;AACL;AACA;AACA,YAAMS,gBAAgB,GAAGL,0BAAH,aAAGA,0BAAH,cAAGA,0BAAH,GAAiC,EAAvD;AACA,0BACG,SAAQC,eAAIE,KAAJ,CAAUQ,IAAV,CACPN,gBADO,CAEP;mEAHJ;AAMA,aAAOA,gBAAP;AACD;AACF;AACF","sourcesContent":["import { ExpoConfig, IOSConfig } from '@expo/config';\nimport once from 'lodash/once';\n\nimport log from '../../../../log';\nimport prompts from '../../../../prompts';\n\nexport const getBundleIdentifier = once(_getBundleIdentifier);\n\nasync function _getBundleIdentifier(projectDir: string, manifest: ExpoConfig): Promise<string> {\n  const bundleIdentifierFromPbxproj = IOSConfig.BundleIdenitifer.getBundleIdentifierFromPbxproj(\n    projectDir\n  );\n  const bundleIdentifierFromConfig = IOSConfig.BundleIdenitifer.getBundleIdentifier(manifest);\n  if (bundleIdentifierFromPbxproj !== null && bundleIdentifierFromConfig !== null) {\n    if (bundleIdentifierFromPbxproj === bundleIdentifierFromConfig) {\n      return bundleIdentifierFromPbxproj;\n    } else {\n      log.newLine();\n      log(\n        log.chalk.yellow(\n          `We detected that your Xcode project is configured with a different bundle identifier than the one defined in app.json/app.config.js.\nIf you choose the one defined in app.json/app.config.js we'll automatically configure your Xcode project with it.\nHowever, if you choose the one defined in the Xcode project you'll have to update app.json/app.config.js on your own.\nOtherwise, you'll see this prompt again in the future.`\n        )\n      );\n      log.newLine();\n      const { bundleIdentifier } = await prompts({\n        type: 'select',\n        name: 'bundleIdentifier',\n        message: 'Which bundle identifier should we use?',\n        choices: [\n          {\n            title: `Defined in the Xcode project: ${log.chalk.bold(bundleIdentifierFromPbxproj)}`,\n            value: bundleIdentifierFromPbxproj,\n          },\n          {\n            title: `Defined in app.json/app.config.js: ${log.chalk.bold(\n              bundleIdentifierFromConfig\n            )}`,\n            value: bundleIdentifierFromConfig,\n          },\n        ],\n      });\n      return bundleIdentifier;\n    }\n  } else if (bundleIdentifierFromPbxproj === null && bundleIdentifierFromConfig === null) {\n    throw new Error('Please define \"expo.ios.bundleIdentifier\" in app.json/app.config.js');\n  } else {\n    if (bundleIdentifierFromPbxproj !== null) {\n      log(\n        `Using ${log.chalk.bold(\n          bundleIdentifierFromPbxproj\n        )} as the bundle identifier (read from the Xcode project).`\n      );\n      return bundleIdentifierFromPbxproj;\n    } else {\n      // bundleIdentifierFromConfig is never null in this case\n      // the following line is to satisfy TS\n      const bundleIdentifier = bundleIdentifierFromConfig ?? '';\n      log(\n        `Using ${log.chalk.bold(\n          bundleIdentifier\n        )} as the bundle identifier (read from app.json/app.config.js).\nWe'll automatically configure your Xcode project using this value.`\n      );\n      return bundleIdentifier;\n    }\n  }\n}\n"],"file":"ios.js"}