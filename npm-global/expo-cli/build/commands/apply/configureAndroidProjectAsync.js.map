{"version":3,"sources":["../../../src/commands/apply/configureAndroidProjectAsync.ts"],"names":["modifyBuildGradleAsync","projectRoot","callback","buildGradlePath","AndroidConfig","Paths","getAndroidBuildGradle","buildGradleString","fs","readFileSync","toString","result","writeFileSync","modifyAppBuildGradleAsync","getAppBuildGradle","modifyAndroidManifestAsync","androidManifestPath","getAndroidManifestAsync","androidManifestJSON","Manifest","readAndroidManifestAsync","writeAndroidManifestAsync","modifyMainActivityAsync","mainActivity","getMainActivityAsync","contents","path","language","configureAndroidProjectAsync","exp","skipSDKVersionRequirement","username","UserManager","getCurrentUsernameAsync","buildGradle","GoogleServices","setClassPath","applyPlugin","Package","setPackageInBuildGradle","Version","setVersionCode","setVersionName","androidManifest","setPackageInAndroidManifest","AllowBackup","setAllowBackup","Scheme","setScheme","Orientation","setAndroidOrientation","Permissions","setAndroidPermissions","Branch","setBranchApiKey","Facebook","setFacebookConfig","UserInterfaceStyle","setUiModeAndroidManifest","GoogleMobileAds","setGoogleMobileAdsConfig","GoogleMapsApiKey","setGoogleMapsApiKey","IntentFilters","setAndroidIntentFilters","Updates","setUpdatesConfig","addOnConfigurationChangedMainActivity","WarningAggregator","addWarningAndroid","renamePackageOnDisk","RootViewBackgroundColor","setRootViewBackgroundColor","NavigationBar","setNavigationBarConfig","StatusBar","setStatusBarConfig","PrimaryColor","setPrimaryColor","setFacebookAppIdString","Name","setName","setGoogleServicesFile","SplashScreen","setSplashScreenAsync","Icon","setIconAsync"],"mappings":"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","sourcesContent":["import { AndroidConfig, getConfig, WarningAggregator } from '@expo/config';\nimport { UserManager } from '@expo/xdl';\nimport fs from 'fs-extra';\n\nimport { getOrPromptForPackage } from '../eject/ConfigValidation';\n\nasync function modifyBuildGradleAsync(\n  projectRoot: string,\n  callback: (buildGradle: string) => string\n) {\n  const buildGradlePath = AndroidConfig.Paths.getAndroidBuildGradle(projectRoot);\n  const buildGradleString = fs.readFileSync(buildGradlePath).toString();\n  const result = callback(buildGradleString);\n  fs.writeFileSync(buildGradlePath, result);\n}\n\nasync function modifyAppBuildGradleAsync(\n  projectRoot: string,\n  callback: (buildGradle: string) => string\n) {\n  const buildGradlePath = AndroidConfig.Paths.getAppBuildGradle(projectRoot);\n  const buildGradleString = fs.readFileSync(buildGradlePath).toString();\n  const result = callback(buildGradleString);\n  fs.writeFileSync(buildGradlePath, result);\n}\n\nasync function modifyAndroidManifestAsync(\n  projectRoot: string,\n  callback: (\n    androidManifest: AndroidConfig.Manifest.Document\n  ) => Promise<AndroidConfig.Manifest.Document>\n) {\n  const androidManifestPath = await AndroidConfig.Paths.getAndroidManifestAsync(projectRoot);\n  const androidManifestJSON = await AndroidConfig.Manifest.readAndroidManifestAsync(\n    androidManifestPath\n  );\n  const result = await callback(androidManifestJSON);\n  await AndroidConfig.Manifest.writeAndroidManifestAsync(androidManifestPath, result);\n}\n\nasync function modifyMainActivityAsync(\n  projectRoot: string,\n  callback: (props: { contents: string; language: 'java' | 'kt' }) => Promise<string>\n) {\n  const mainActivity = await AndroidConfig.Paths.getMainActivityAsync(projectRoot);\n  const contents = fs.readFileSync(mainActivity.path).toString();\n  const result = await callback({ contents, language: mainActivity.language });\n  fs.writeFileSync(mainActivity.path, result);\n}\n\nexport default async function configureAndroidProjectAsync(projectRoot: string) {\n  // Check package before reading the config because it may mutate the config if the user is prompted to define it.\n  await getOrPromptForPackage(projectRoot);\n\n  const { exp } = getConfig(projectRoot, { skipSDKVersionRequirement: true });\n  const username = await UserManager.getCurrentUsernameAsync();\n\n  await modifyBuildGradleAsync(projectRoot, (buildGradle: string) => {\n    buildGradle = AndroidConfig.GoogleServices.setClassPath(exp, buildGradle);\n    return buildGradle;\n  });\n\n  await modifyAppBuildGradleAsync(projectRoot, (buildGradle: string) => {\n    buildGradle = AndroidConfig.GoogleServices.applyPlugin(exp, buildGradle);\n    buildGradle = AndroidConfig.Package.setPackageInBuildGradle(exp, buildGradle);\n    buildGradle = AndroidConfig.Version.setVersionCode(exp, buildGradle);\n    buildGradle = AndroidConfig.Version.setVersionName(exp, buildGradle);\n    return buildGradle;\n  });\n\n  await modifyAndroidManifestAsync(projectRoot, async androidManifest => {\n    androidManifest = await AndroidConfig.Package.setPackageInAndroidManifest(exp, androidManifest);\n    androidManifest = await AndroidConfig.AllowBackup.setAllowBackup(exp, androidManifest);\n    androidManifest = await AndroidConfig.Scheme.setScheme(exp, androidManifest);\n    androidManifest = await AndroidConfig.Orientation.setAndroidOrientation(exp, androidManifest);\n    androidManifest = await AndroidConfig.Permissions.setAndroidPermissions(exp, androidManifest);\n    androidManifest = await AndroidConfig.Branch.setBranchApiKey(exp, androidManifest);\n    androidManifest = await AndroidConfig.Facebook.setFacebookConfig(exp, androidManifest);\n    androidManifest = await AndroidConfig.UserInterfaceStyle.setUiModeAndroidManifest(\n      exp,\n      androidManifest\n    );\n\n    androidManifest = await AndroidConfig.GoogleMobileAds.setGoogleMobileAdsConfig(\n      exp,\n      androidManifest\n    );\n    androidManifest = await AndroidConfig.GoogleMapsApiKey.setGoogleMapsApiKey(\n      exp,\n      androidManifest\n    );\n\n    androidManifest = await AndroidConfig.IntentFilters.setAndroidIntentFilters(\n      exp,\n      androidManifest\n    );\n\n    androidManifest = await AndroidConfig.Updates.setUpdatesConfig(exp, androidManifest, username);\n\n    return androidManifest;\n  });\n\n  await modifyMainActivityAsync(projectRoot, async ({ contents, language }) => {\n    if (language === 'java') {\n      contents = AndroidConfig.UserInterfaceStyle.addOnConfigurationChangedMainActivity(\n        exp,\n        contents\n      );\n    } else {\n      WarningAggregator.addWarningAndroid(\n        'userInterfaceStyle',\n        `Cannot automatically configure MainActivity if it's not java`\n      );\n    }\n    return contents;\n  });\n\n  // If we renamed the package, we should also move it around and rename it in source files\n  await AndroidConfig.Package.renamePackageOnDisk(exp, projectRoot);\n\n  // Modify colors.xml and styles.xml\n  await AndroidConfig.RootViewBackgroundColor.setRootViewBackgroundColor(exp, projectRoot);\n  await AndroidConfig.NavigationBar.setNavigationBarConfig(exp, projectRoot);\n  await AndroidConfig.StatusBar.setStatusBarConfig(exp, projectRoot);\n  await AndroidConfig.PrimaryColor.setPrimaryColor(exp, projectRoot);\n\n  // Modify strings.xml\n  await AndroidConfig.Facebook.setFacebookAppIdString(exp, projectRoot);\n  await AndroidConfig.Name.setName(exp, projectRoot);\n\n  // add google-services.json to project\n  await AndroidConfig.GoogleServices.setGoogleServicesFile(exp, projectRoot);\n\n  // TODOs\n  await AndroidConfig.SplashScreen.setSplashScreenAsync(exp, projectRoot);\n  await AndroidConfig.Icon.setIconAsync(exp, projectRoot);\n}\n"],"file":"configureAndroidProjectAsync.js"}