{"version":3,"sources":["../../src/commands/credentials.ts"],"names":["program","command","description","helpGroup","option","asyncActionProjectDir","projectDir","options","context","Context","init","nonInteractive","parent","mainpage","platform","SelectAndroidExperience","SelectIosExperience","SelectPlatform","checkConfig","skipSDKVersionRequirement"],"mappings":";;;;;;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAae,kBAAUA,OAAV,EAAoC;AACjDA,EAAAA,OAAO,CACJC,OADH,CACW,4BADX,EAEGC,WAFH,CAEe,yBAFf,EAGGC,SAHH,CAGa,aAHb,EAIGC,MAJH,CAIU,0BAJV,EAIsC,yBAJtC,EAIiE,kBAJjE,EAKGC,qBALH,CAMI,OAAOC,UAAP,EAA2BC,OAA3B,KAAgD;AAAA;;AAC9C,UAAMC,OAAO,GAAG,KAAIC,sBAAJ,GAAhB;AACA,UAAMD,OAAO,CAACE,IAAR,CAAaJ,UAAb,EAAyB;AAC7BK,MAAAA,cAAc,qBAAEJ,OAAO,CAACK,MAAV,oDAAE,gBAAgBD;AADH,KAAzB,CAAN;AAGA,QAAIE,QAAJ;;AACA,QAAIN,OAAO,CAACO,QAAR,KAAqB,SAAzB,EAAoC;AAClCD,MAAAA,QAAQ,GAAG,KAAIE,iCAAJ,GAAX;AACD,KAFD,MAEO,IAAIR,OAAO,CAACO,QAAR,KAAqB,KAAzB,EAAgC;AACrCD,MAAAA,QAAQ,GAAG,KAAIG,6BAAJ,GAAX;AACD,KAFM,MAEA;AACLH,MAAAA,QAAQ,GAAG,KAAII,wBAAJ,GAAX;AACD;;AACD,UAAM,oDAAgCT,OAAhC,EAAyCK,QAAzC,CAAN;AACD,GApBL,EAqBI;AACEK,IAAAA,WAAW,EAAE,KADf;AAEEC,IAAAA,yBAAyB,EAAE;AAF7B,GArBJ;AA0BD","sourcesContent":["import { CommanderStatic } from 'commander';\n\nimport { Context, runCredentialsManagerStandalone } from '../credentials';\nimport {\n  SelectAndroidExperience,\n  SelectIosExperience,\n  SelectPlatform,\n} from '../credentials/views/Select';\n\ntype Options = {\n  platform?: 'android' | 'ios';\n  parent?: {\n    nonInteractive: boolean;\n  };\n};\n\nexport default function (program: CommanderStatic) {\n  program\n    .command('credentials:manager [path]')\n    .description('Manage your credentials')\n    .helpGroup('credentials')\n    .option('-p --platform <platform>', 'Platform: [android|ios]', /^(android|ios)$/i)\n    .asyncActionProjectDir(\n      async (projectDir: string, options: Options) => {\n        const context = new Context();\n        await context.init(projectDir, {\n          nonInteractive: options.parent?.nonInteractive,\n        });\n        let mainpage;\n        if (options.platform === 'android') {\n          mainpage = new SelectAndroidExperience();\n        } else if (options.platform === 'ios') {\n          mainpage = new SelectIosExperience();\n        } else {\n          mainpage = new SelectPlatform();\n        }\n        await runCredentialsManagerStandalone(context, mainpage);\n      },\n      {\n        checkConfig: false,\n        skipSDKVersionRequirement: true,\n      }\n    );\n}\n"],"file":"credentials.js"}