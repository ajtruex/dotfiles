{"version":3,"sources":["../../../../../src/commands/upload/submission-service/utils/errors.ts"],"names":["SubmissionErrorCode","SubmissionErrorMessages","ARCHIVE_DOWNLOAD_NOT_FOUND_ERROR","ARCHIVE_DOWNLOAD_FORBIDDEN_ERROR","ANDROID_UNKNOWN_ERROR","ANDROID_FIRST_UPLOAD_ERROR","log","chalk","dim","ANDROID_OLD_VERSION_CODE_ERROR","ANDROID_MISSING_PRIVACY_POLICY","printSubmissionError","error","Object","values","includes","errorCode","addNewLineIfNone","message"],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;IAGKA,mB;;WAAAA,mB;AAAAA,EAAAA,mB;AAAAA,EAAAA,mB;AAAAA,EAAAA,mB;AAAAA,EAAAA,mB;AAAAA,EAAAA,mB;AAAAA,EAAAA,mB;GAAAA,mB,KAAAA,mB;;AASL,MAAMC,uBAA4D,GAAG;AACnE,GAACD,mBAAmB,CAACE,gCAArB,GACE,0HAFiE;AAGnE,GAACF,mBAAmB,CAACG,gCAArB,GACE,gMAJiE;AAKnE,GAACH,mBAAmB,CAACI,qBAArB,GACE,wEANiE;AAOnE,GAACJ,mBAAmB,CAACK,0BAArB,GACE,+HACC,GAAEC,eAAIC,KAAJ,CAAUC,GAAV,CAAc,+BAAU,2CAAV,CAAd,CAAsE,GATR;AAUnE,GAACR,mBAAmB,CAACS,8BAArB,GACE,wDACA,2FADA,GAEA,sIAFA,GAGC,GAAEH,eAAIC,KAAJ,CAAUC,GAAV,CAAc,+BAAU,+CAAV,CAAd,CAA0E,GAdZ;AAenE,GAACR,mBAAmB,CAACU,8BAArB,GACE,6EACC,GAAEJ,eAAIC,KAAJ,CAAUC,GAAV,CAAc,+BAAU,yCAAV,CAAd,CAAoE;AAjBN,CAArE;;AAoBA,SAASG,oBAAT,CAA8BC,KAA9B,EAA+D;AAC7D,MAAKC,MAAM,CAACC,MAAP,CAAcd,mBAAd,CAAD,CAAiDe,QAAjD,CAA0DH,KAAK,CAACI,SAAhE,CAAJ,EAAgF;AAC9E,UAAMA,SAAS,GAAGJ,KAAK,CAACI,SAAxB;;AACAV,mBAAIW,gBAAJ;;AACAX,mBAAIM,KAAJ,CAAUX,uBAAuB,CAACe,SAAD,CAAjC;;AACA,WAAOA,SAAS,KAAKhB,mBAAmB,CAACI,qBAAzC;AACD,GALD,MAKO;AACL,wBAAIQ,KAAK,CAACM,OAAV;AACA,WAAO,IAAP;AACD;AACF","sourcesContent":["import log from '../../../../log';\nimport { learnMore } from '../../../utils/TerminalLink';\nimport { SubmissionError } from '../SubmissionService.types';\n\nenum SubmissionErrorCode {\n  ARCHIVE_DOWNLOAD_NOT_FOUND_ERROR = 'SUBMISSION_SERVICE_COMMON_ARCHIVE_DOWNLOAD_NOT_FOUND_ERROR',\n  ARCHIVE_DOWNLOAD_FORBIDDEN_ERROR = 'SUBMISSION_SERVICE_COMMON_ARCHIVE_DOWNLOAD_FORBIDDEN_ERROR',\n  ANDROID_UNKNOWN_ERROR = 'SUBMISSION_SERVICE_ANDROID_UNKNOWN_ERROR',\n  ANDROID_FIRST_UPLOAD_ERROR = 'SUBMISSION_SERVICE_ANDROID_FIRST_UPLOAD_ERROR',\n  ANDROID_OLD_VERSION_CODE_ERROR = 'SUBMISSION_SERVICE_ANDROID_OLD_VERSION_CODE_ERROR',\n  ANDROID_MISSING_PRIVACY_POLICY = 'SUBMISSION_SERVICE_ANDROID_MISSING_PRIVACY_POLICY',\n}\n\nconst SubmissionErrorMessages: Record<SubmissionErrorCode, string> = {\n  [SubmissionErrorCode.ARCHIVE_DOWNLOAD_NOT_FOUND_ERROR]:\n    \"Failed to download the archive file (Response code: 404 Not Found). Please make sure the URL you've provided is correct.\",\n  [SubmissionErrorCode.ARCHIVE_DOWNLOAD_FORBIDDEN_ERROR]:\n    'Failed to download the archive file (Response code: 403 Forbidden). This is most probably caused by trying to upload an expired build artifact. All Expo build artifacts expire after 30 days.',\n  [SubmissionErrorCode.ANDROID_UNKNOWN_ERROR]:\n    \"We couldn't figure out what went wrong. Please see logs to learn more.\",\n  [SubmissionErrorCode.ANDROID_FIRST_UPLOAD_ERROR]:\n    \"You haven't submitted this app to Google Play Store yet. The first submission of the app needs to be performed manually.\\n\" +\n    `${log.chalk.dim(learnMore('https://expo.fyi/first-android-submission'))}.`,\n  [SubmissionErrorCode.ANDROID_OLD_VERSION_CODE_ERROR]:\n    \"You've already submitted this version of the app.\\n\" +\n    'Versions are identified by Android version code (expo.android.versionCode in app.json).\\n' +\n    \"If you're submitting a managed Expo project, increment the version code in app.json and build the project with expo build:android.\\n\" +\n    `${log.chalk.dim(learnMore('https://expo.fyi/bumping-android-version-code'))}.`,\n  [SubmissionErrorCode.ANDROID_MISSING_PRIVACY_POLICY]:\n    'The app has permissions that require a privacy policy set for the app.\\n' +\n    `${log.chalk.dim(learnMore('https://expo.fyi/missing-privacy-policy'))}.`,\n};\n\nfunction printSubmissionError(error: SubmissionError): boolean {\n  if ((Object.values(SubmissionErrorCode) as string[]).includes(error.errorCode)) {\n    const errorCode = error.errorCode as SubmissionErrorCode;\n    log.addNewLineIfNone();\n    log.error(SubmissionErrorMessages[errorCode]);\n    return errorCode === SubmissionErrorCode.ANDROID_UNKNOWN_ERROR;\n  } else {\n    log(error.message);\n    return true;\n  }\n}\n\nexport { printSubmissionError };\n"],"file":"errors.js"}