{"version":3,"file":"Updates.js","sourceRoot":"","sources":["../../src/ios/Updates.ts"],"names":[],"mappings":"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","sourcesContent":["import { ExpoConfig } from '../Config.types';\nimport { ExpoPlist } from './IosConfig.types';\n\nexport enum Config {\n  ENABLED = 'EXUpdatesEnabled',\n  CHECK_ON_LAUNCH = 'EXUpdatesCheckOnLaunch',\n  LAUNCH_WAIT_MS = 'EXUpdatesLaunchWaitMs',\n  RUNTIME_VERSION = 'EXUpdatesRuntimeVersion',\n  SDK_VERSION = 'EXUpdatesSDKVersion',\n  UPDATE_URL = 'EXUpdatesURL',\n}\n\nexport function getUpdateUrl(config: ExpoConfig, username: string | null) {\n  const user = typeof config.owner === 'string' ? config.owner : username;\n  if (!user) {\n    return undefined;\n  }\n  return `https://exp.host/@${user}/${config.slug}`;\n}\n\nexport function getRuntimeVersion(config: ExpoConfig) {\n  return typeof config.runtimeVersion === 'string' ? config.runtimeVersion : null;\n}\n\nexport function getSDKVersion(config: ExpoConfig) {\n  return typeof config.sdkVersion === 'string' ? config.sdkVersion : null;\n}\n\nexport function getUpdatesEnabled(config: ExpoConfig) {\n  return config.updates?.enabled !== false;\n}\n\nexport function getUpdatesTimeout(config: ExpoConfig) {\n  return config.updates?.fallbackToCacheTimeout ?? 0;\n}\n\nexport function getUpdatesCheckOnLaunch(config: ExpoConfig) {\n  if (config.updates?.checkAutomatically === 'ON_ERROR_RECOVERY') {\n    return 'NEVER';\n  } else if (config.updates?.checkAutomatically === 'ON_LOAD') {\n    return 'ALWAYS';\n  }\n  return 'ALWAYS';\n}\n\nexport function setUpdatesConfig(\n  config: ExpoConfig,\n  expoPlist: ExpoPlist,\n  username: string | null\n): ExpoPlist {\n  const newExpoPlist = {\n    ...expoPlist,\n    [Config.ENABLED]: getUpdatesEnabled(config),\n    [Config.CHECK_ON_LAUNCH]: getUpdatesCheckOnLaunch(config),\n    [Config.LAUNCH_WAIT_MS]: getUpdatesTimeout(config),\n  };\n\n  const updateUrl = getUpdateUrl(config, username);\n  if (updateUrl) {\n    newExpoPlist[Config.UPDATE_URL] = updateUrl;\n  } else {\n    delete newExpoPlist[Config.UPDATE_URL];\n  }\n\n  return setVersionsConfig(config, newExpoPlist);\n}\n\nexport function setVersionsConfig(config: ExpoConfig, expoPlist: ExpoPlist) {\n  const newExpoPlist = { ...expoPlist };\n\n  const runtimeVersion = getRuntimeVersion(config);\n  const sdkVersion = getSDKVersion(config);\n  if (runtimeVersion) {\n    delete newExpoPlist[Config.SDK_VERSION];\n    newExpoPlist[Config.RUNTIME_VERSION] = runtimeVersion;\n  } else if (sdkVersion) {\n    delete newExpoPlist[Config.RUNTIME_VERSION];\n    newExpoPlist[Config.SDK_VERSION] = sdkVersion;\n  } else {\n    delete newExpoPlist[Config.SDK_VERSION];\n    delete newExpoPlist[Config.RUNTIME_VERSION];\n  }\n\n  return newExpoPlist;\n}\n"]}