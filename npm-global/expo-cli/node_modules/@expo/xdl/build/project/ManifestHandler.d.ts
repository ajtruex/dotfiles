/// <reference types="node" />
import { ExpoAppManifest, ExpoConfig } from '@expo/config';
import express from 'express';
import http from 'http';
interface HostInfo {
    host: string;
    server: 'xdl';
    serverVersion: string;
    serverDriver: string | null;
    serverOS: NodeJS.Platform;
    serverOSVersion: string;
}
export declare function getManifestHandler(projectRoot: string): (req: express.Request<import("express-serve-static-core").ParamsDictionary> | http.IncomingMessage, res: express.Response | http.ServerResponse) => Promise<void>;
export declare function getManifestResponseAsync({ projectRoot, host, platform, acceptSignature, }: {
    projectRoot: string;
    platform: string;
    host?: string;
    acceptSignature?: string | string[];
}): Promise<{
    exp: ExpoConfig;
    manifestString: string;
    hostInfo: HostInfo;
}>;
export declare function getSignedManifestStringAsync(manifest: Partial<ExpoAppManifest>, currentSession: {
    sessionSecret?: string;
    accessToken?: string;
}): Promise<any>;
export declare function getUnsignedManifestString(manifest: ExpoConfig): string;
export {};
