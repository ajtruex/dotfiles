import { ClarityType, ClarityValue } from '../clarityValue';
declare type OptionalCV = NoneCV | SomeCV;
interface NoneCV {
    readonly type: ClarityType.OptionalNone;
}
interface SomeCV {
    readonly type: ClarityType.OptionalSome;
    readonly value: ClarityValue;
}
declare const noneCV: () => OptionalCV;
declare const someCV: (value: ClarityValue) => OptionalCV;
declare const optionalCVOf: (value?: import("./booleanCV").TrueCV | import("./booleanCV").FalseCV | NoneCV | SomeCV | import("./bufferCV").BufferCV | import("./intCV").IntCV | import("./intCV").UIntCV | import("./principalCV").StandardPrincipalCV | import("./principalCV").ContractPrincipalCV | import("./responseCV").ResponseErrorCV | import("./responseCV").ResponseOkCV | import("./listCV").ListCV | import("./tupleCV").TupleCV | undefined) => OptionalCV;
export { OptionalCV, noneCV, someCV, optionalCVOf };
